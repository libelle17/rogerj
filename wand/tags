!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABOUT_H	./roger/about.h	21;"	d
ACB_AUTHENTICATE	./libroutermanager/appobject.h	/^	ACB_AUTHENTICATE,$/;"	e	enum:__anon28
ACB_CONNECTION_ESTABLISHED	./libroutermanager/appobject.h	/^	ACB_CONNECTION_ESTABLISHED,$/;"	e	enum:__anon28
ACB_CONNECTION_NOTIFY	./libroutermanager/appobject.h	/^	ACB_CONNECTION_NOTIFY,$/;"	e	enum:__anon28
ACB_CONNECTION_STATUS	./libroutermanager/appobject.h	/^	ACB_CONNECTION_STATUS,$/;"	e	enum:__anon28
ACB_CONNECTION_TERMINATED	./libroutermanager/appobject.h	/^	ACB_CONNECTION_TERMINATED,$/;"	e	enum:__anon28
ACB_CONTACTS_CHANGED	./libroutermanager/appobject.h	/^	ACB_CONTACTS_CHANGED,$/;"	e	enum:__anon28
ACB_CONTACT_PROCESS	./libroutermanager/appobject.h	/^	ACB_CONTACT_PROCESS,$/;"	e	enum:__anon28
ACB_FAX_PROCESS	./libroutermanager/appobject.h	/^	ACB_FAX_PROCESS,$/;"	e	enum:__anon28
ACB_JOURNAL_LOADED	./libroutermanager/appobject.h	/^	ACB_JOURNAL_LOADED,$/;"	e	enum:__anon28
ACB_MAX	./libroutermanager/appobject.h	/^	ACB_MAX$/;"	e	enum:__anon28
ACB_MESSAGE	./libroutermanager/appobject.h	/^	ACB_MESSAGE,$/;"	e	enum:__anon28
ACTION_INCOMING_BEGIN	./libroutermanager/action.h	31;"	d
ACTION_INCOMING_END	./libroutermanager/action.h	32;"	d
ACTION_INCOMING_MISSED	./libroutermanager/action.h	33;"	d
ACTION_INCOMING_RING	./libroutermanager/action.h	30;"	d
ACTION_OUTGOING_BEGIN	./libroutermanager/action.h	35;"	d
ACTION_OUTGOING_DIAL	./libroutermanager/action.h	34;"	d
ACTION_OUTGOING_END	./libroutermanager/action.h	36;"	d
ANSWERINGMACHINE_H	./roger/answeringmachine.h	21;"	d
APPLICATION_H	./roger/application.h	21;"	d
APP_GSETTINGS_SCHEMA	./roger/application.c	540;"	d	file:
APP_H	./roger/main.h	21;"	d
APP_ICON_ADD	./roger/icons.h	26;"	d
APP_ICON_CALL	./roger/icons.h	29;"	d
APP_ICON_HANGUP	./roger/icons.h	32;"	d
APP_ICON_REMOVE	./roger/icons.h	27;"	d
APP_ICON_TRASH	./roger/icons.h	28;"	d
APP_OBJECT	./libroutermanager/appobject.h	48;"	d
APP_OBJECT_CLASS	./libroutermanager/appobject.h	49;"	d
APP_OBJECT_TYPE	./libroutermanager/appobject.h	47;"	d
APP_USER_DIR	./libroutermanager/osdep.h	25;"	d
APP_USER_DIR	./libroutermanager/osdep.h	31;"	d
APP_USER_DIR	./libroutermanager/osdep.h	37;"	d
AREACODES_CSV_H	./libroutermanager/plugins/areacodes_global/csv.h	21;"	d
ASSISTANT_H	./roger/assistant.h	21;"	d
AUDIO_INPUT	./libroutermanager/audio.h	28;"	d
AUDIO_OUTPUT	./libroutermanager/audio.h	27;"	d
AVATAR_DEFAULT	./roger/contacts.h	25;"	d
AppCallbackId	./libroutermanager/appobject.h	/^} AppCallbackId;$/;"	t	typeref:enum:__anon28
AppObject	./libroutermanager/appobject.h	/^typedef struct _AppObject AppObject;$/;"	t	typeref:struct:_AppObject
AppObjectClass	./libroutermanager/appobject.h	/^typedef struct _AppObjectClass AppObjectClass;$/;"	t	typeref:struct:_AppObjectClass
AppObjectPrivate	./libroutermanager/appobject.c	/^typedef struct _AppObjectPrivate AppObjectPrivate;$/;"	t	typeref:struct:_AppObjectPrivate	file:
BUFFER_LENGTH	./libroutermanager/fax_server.c	36;"	d	file:
BUGZILLA_URI	./roger/crash.c	54;"	d	file:
CALLMONITOR_DEBUG	./libroutermanager/plugins/callmonitor/callmonitor.c	41;"	d	file:
CALL_TYPE_ALL	./libroutermanager/call.h	/^	CALL_TYPE_ALL,$/;"	e	enum:__anon33
CALL_TYPE_BLOCKED	./libroutermanager/call.h	/^	CALL_TYPE_BLOCKED$/;"	e	enum:__anon33
CALL_TYPE_FAX	./libroutermanager/call.h	/^	CALL_TYPE_FAX,$/;"	e	enum:__anon33
CALL_TYPE_FAX_REPORT	./libroutermanager/call.h	/^	CALL_TYPE_FAX_REPORT,$/;"	e	enum:__anon33
CALL_TYPE_INCOMING	./libroutermanager/call.h	/^	CALL_TYPE_INCOMING,$/;"	e	enum:__anon33
CALL_TYPE_MISSED	./libroutermanager/call.h	/^	CALL_TYPE_MISSED,$/;"	e	enum:__anon33
CALL_TYPE_OUTGOING	./libroutermanager/call.h	/^	CALL_TYPE_OUTGOING,$/;"	e	enum:__anon33
CALL_TYPE_RECORD	./libroutermanager/call.h	/^	CALL_TYPE_RECORD,$/;"	e	enum:__anon33
CALL_TYPE_VOICE	./libroutermanager/call.h	/^	CALL_TYPE_VOICE,$/;"	e	enum:__anon33
CAPI_BCHANNELS	./libroutermanager/libfaxophone/faxophone.h	65;"	d
CAPI_BUFFERCNT	./libroutermanager/libfaxophone/faxophone.h	63;"	d
CAPI_CONNECTIONS	./libroutermanager/libfaxophone/faxophone.h	59;"	d
CAPI_PACKETS	./libroutermanager/libfaxophone/faxophone.h	61;"	d
CLIENT_1	./roger/plugins/google/google.c	62;"	d	file:
CLIENT_2	./roger/plugins/google/google.c	63;"	d	file:
CLIENT_3	./roger/plugins/google/google.c	64;"	d	file:
CONNECT	./libroutermanager/libfaxophone/fax.h	/^	CONNECT = 1,$/;"	e	enum:fax_phase
CONNECTION_TYPE_CONNECT	./libroutermanager/connection.h	29;"	d
CONNECTION_TYPE_DISCONNECT	./libroutermanager/connection.h	30;"	d
CONNECTION_TYPE_INCOMING	./libroutermanager/connection.h	27;"	d
CONNECTION_TYPE_MISSED	./libroutermanager/connection.h	31;"	d
CONNECTION_TYPE_OUTGOING	./libroutermanager/connection.h	28;"	d
CONTACTS_H	./roger/contacts.h	21;"	d
CRASH_H	./roger/crash.h	21;"	d
CREATE_THREAD	./libroutermanager/libfaxophone/faxophone.h	77;"	d
CREATE_THREAD	./libroutermanager/libfaxophone/faxophone.h	78;"	d
CSV_AREACODES	./libroutermanager/plugins/areacodes_global/csv.c	28;"	d	file:
CSV_FRITZBOX_JOURNAL_DE	./libroutermanager/plugins/fritzbox/csv.h	25;"	d
CSV_FRITZBOX_JOURNAL_EN	./libroutermanager/plugins/fritzbox/csv.h	26;"	d
CSV_FRITZBOX_JOURNAL_EN2	./libroutermanager/plugins/fritzbox/csv.h	27;"	d
CSV_FRITZBOX_JOURNAL_EN3	./libroutermanager/plugins/fritzbox/csv.h	28;"	d
DEBUGGERRC	./roger/crash.c	53;"	d	file:
DEBUG_SCRIPT	./roger/crash.c	/^static const gchar *DEBUG_SCRIPT = "thread apply all bt full\\nkill\\nq";$/;"	v	file:
DEFAULT_SCOPE	./roger/plugins/thunderbird/thunderbird.c	58;"	d	file:
EBOOK_SOURCES_H	./roger/plugins/evolution/ebook-sources.h	21;"	d
ECHO_SUPPRESS	./libroutermanager/plugins/portaudio/portaudio.c	635;"	d	file:
ECHO_SUPPRESS_ACTIVE	./libroutermanager/plugins/portaudio/portaudio.c	637;"	d	file:
EMPTY_STRING	./libroutermanager/gstring.h	26;"	d
ENABLE_NLS	./config.h	5;"	d
FAXOPHONE_H	./libroutermanager/libfaxophone/faxophone.h	26;"	d
FAXOPHONE_PHONE_H	./libroutermanager/libfaxophone/phone.h	26;"	d
FAXOPHONE_RINGTONE_H	./libroutermanager/libfaxophone/ringtone.h	26;"	d
FAX_CIP	./libroutermanager/libfaxophone/fax.h	33;"	d
FAX_H	./libroutermanager/libfaxophone/fax.h	26;"	d
FAX_SFF	./roger/fax.c	40;"	d	file:
FILTER_CALL_ALL	./libroutermanager/filter.h	/^	FILTER_CALL_ALL = 0,$/;"	e	enum:__anon32
FILTER_CALL_FAX	./libroutermanager/filter.h	/^	FILTER_CALL_FAX,$/;"	e	enum:__anon32
FILTER_CALL_INCOMING	./libroutermanager/filter.h	/^	FILTER_CALL_INCOMING,$/;"	e	enum:__anon32
FILTER_CALL_MISSED	./libroutermanager/filter.h	/^	FILTER_CALL_MISSED,$/;"	e	enum:__anon32
FILTER_CALL_OUTGOING	./libroutermanager/filter.h	/^	FILTER_CALL_OUTGOING,$/;"	e	enum:__anon32
FILTER_CALL_TYPE	./libroutermanager/filter.h	/^	FILTER_CALL_TYPE = 0,$/;"	e	enum:__anon31
FILTER_CALL_VOICE	./libroutermanager/filter.h	/^	FILTER_CALL_VOICE,$/;"	e	enum:__anon32
FILTER_CONTAINS	./libroutermanager/filter.h	/^	FILTER_CONTAINS$/;"	e	enum:__anon30
FILTER_DATE_TIME	./libroutermanager/filter.h	/^	FILTER_DATE_TIME,$/;"	e	enum:__anon31
FILTER_IS	./libroutermanager/filter.h	/^	FILTER_IS = 0,$/;"	e	enum:__anon30
FILTER_IS_NOT	./libroutermanager/filter.h	/^	FILTER_IS_NOT,$/;"	e	enum:__anon30
FILTER_LOCAL_NAME	./libroutermanager/filter.h	/^	FILTER_LOCAL_NAME,$/;"	e	enum:__anon31
FILTER_LOCAL_NUMBER	./libroutermanager/filter.h	/^	FILTER_LOCAL_NUMBER$/;"	e	enum:__anon31
FILTER_REMOTE_NAME	./libroutermanager/filter.h	/^	FILTER_REMOTE_NAME,$/;"	e	enum:__anon31
FILTER_REMOTE_NUMBER	./libroutermanager/filter.h	/^	FILTER_REMOTE_NUMBER,$/;"	e	enum:__anon31
FILTER_STARTS_WITH	./libroutermanager/filter.h	/^	FILTER_STARTS_WITH,$/;"	e	enum:__anon30
FIRMWARE_04_00_H	./libroutermanager/plugins/fritzbox/firmware-04-00.h	21;"	d
FIRMWARE_04_74_H	./libroutermanager/plugins/fritzbox/firmware-04-74.h	21;"	d
FIRMWARE_05_50_H	./libroutermanager/plugins/fritzbox/firmware-05-50.h	21;"	d
FIRMWARE_06_35_H	./libroutermanager/plugins/fritzbox/firmware-06-35.h	21;"	d
FIRMWARE_COMMON_H	./libroutermanager/plugins/fritzbox/firmware-common.h	21;"	d
FIRMWARE_IS	./libroutermanager/plugins/fritzbox/firmware-common.h	29;"	d
FONT	./roger/print.c	37;"	d	file:
FRAME_SIZE	./libroutermanager/plugins/portaudio/portaudio.c	71;"	d	file:
FRITZBOX_CSV_H	./libroutermanager/plugins/fritzbox/csv.h	21;"	d
FRITZBOX_H	./libroutermanager/plugins/fritzbox/firmware-query.h	21;"	d
FRITZBOX_H	./libroutermanager/plugins/fritzbox/fritzbox.h	21;"	d
GDK_VERSION_MAX_ALLOWED	./config.h	8;"	d
GDK_VERSION_MIN_REQUIRED	./config.h	11;"	d
GETTEXT_PACKAGE	./config.h	14;"	d
GTK_DIALOG_USE_HEADER_BAR	./roger/uitools.h	26;"	d
GTK_PRINT_SETTINGS_OUTPUT_BASENAME	./roger/print.c	40;"	d	file:
G_DEFINE_CONSTRUCTOR	./roger/roger_gresource.c	21902;"	d	file:
G_DEFINE_CONSTRUCTOR	./roger/roger_gresource.c	21929;"	d	file:
G_DEFINE_CONSTRUCTOR	./roger/roger_gresource.c	21958;"	d	file:
G_DEFINE_CONSTRUCTOR	./roger/roger_gresource.c	21983;"	d	file:
G_DEFINE_CONSTRUCTOR_NEEDS_PRAGMA	./roger/roger_gresource.c	21953;"	d	file:
G_DEFINE_CONSTRUCTOR_NEEDS_PRAGMA	./roger/roger_gresource.c	21978;"	d	file:
G_DEFINE_CONSTRUCTOR_PRAGMA_ARGS	./roger/roger_gresource.c	21956;"	d	file:
G_DEFINE_CONSTRUCTOR_PRAGMA_ARGS	./roger/roger_gresource.c	21981;"	d	file:
G_DEFINE_DESTRUCTOR	./roger/roger_gresource.c	21903;"	d	file:
G_DEFINE_DESTRUCTOR	./roger/roger_gresource.c	21930;"	d	file:
G_DEFINE_DESTRUCTOR	./roger/roger_gresource.c	21965;"	d	file:
G_DEFINE_DESTRUCTOR	./roger/roger_gresource.c	21988;"	d	file:
G_DEFINE_DESTRUCTOR_NEEDS_PRAGMA	./roger/roger_gresource.c	21954;"	d	file:
G_DEFINE_DESTRUCTOR_NEEDS_PRAGMA	./roger/roger_gresource.c	21979;"	d	file:
G_DEFINE_DESTRUCTOR_PRAGMA_ARGS	./roger/roger_gresource.c	21963;"	d	file:
G_DEFINE_DESTRUCTOR_PRAGMA_ARGS	./roger/roger_gresource.c	21986;"	d	file:
G_HAS_CONSTRUCTORS	./roger/roger_gresource.c	21900;"	d	file:
G_HAS_CONSTRUCTORS	./roger/roger_gresource.c	21908;"	d	file:
G_HAS_CONSTRUCTORS	./roger/roger_gresource.c	21950;"	d	file:
G_HAS_CONSTRUCTORS	./roger/roger_gresource.c	21976;"	d	file:
G_MSVC_CTOR	./roger/roger_gresource.c	21932;"	d	file:
G_MSVC_DTOR	./roger/roger_gresource.c	21940;"	d	file:
G_MSVC_SYMBOL_PREFIX	./roger/roger_gresource.c	21924;"	d	file:
G_MSVC_SYMBOL_PREFIX	./roger/roger_gresource.c	21926;"	d	file:
G_SETTINGS_ENABLE_BACKEND	./libroutermanager/settings.c	26;"	d	file:
HAVE_BIND_TEXTDOMAIN_CODESET	./config.h	20;"	d
HAVE_CAPI_36	./config.h	23;"	d
HAVE_DCGETTEXT	./config.h	26;"	d
HAVE_DLFCN_H	./config.h	29;"	d
HAVE_FAXOPHONE	./config.h	32;"	d
HAVE_GETTEXT	./config.h	35;"	d
HAVE_GNOTIFICATION	./config.h	38;"	d
HAVE_INTTYPES_H	./config.h	44;"	d
HAVE_LC_MESSAGES	./config.h	53;"	d
HAVE_LIBGTHREAD_2_0	./config.h	56;"	d
HAVE_LIBM	./config.h	59;"	d
HAVE_LIBTIFF	./config.h	65;"	d
HAVE_LOCALE_H	./config.h	68;"	d
HAVE_MEMORY_H	./config.h	71;"	d
HAVE_SIGACTION	./config.h	80;"	d
HAVE_STDINT_H	./config.h	86;"	d
HAVE_STDLIB_H	./config.h	89;"	d
HAVE_STRINGS_H	./config.h	92;"	d
HAVE_STRING_H	./config.h	95;"	d
HAVE_SYS_STAT_H	./config.h	98;"	d
HAVE_SYS_TYPES_H	./config.h	101;"	d
HAVE_SYS_UTSNAME_H	./config.h	104;"	d
HAVE_TIFFIO_H	./config.h	107;"	d
HAVE_UNISTD_H	./config.h	110;"	d
ICONS_H	./roger/icons.h	21;"	d
IDLE	./libroutermanager/libfaxophone/fax.h	/^	IDLE = -1,$/;"	e	enum:fax_phase
ISDN_CONVERT_H	./libroutermanager/libfaxophone/isdn-convert.h	26;"	d
IS_APP_OBJECT	./libroutermanager/appobject.h	50;"	d
IS_APP_OBJECT_CLASS	./libroutermanager/appobject.h	51;"	d
JOURNAL_COL_CALL_PTR	./roger/journal.h	/^	JOURNAL_COL_CALL_PTR,$/;"	e	enum:__anon35
JOURNAL_COL_CITY	./roger/journal.h	/^	JOURNAL_COL_CITY,$/;"	e	enum:__anon35
JOURNAL_COL_COMPANY	./roger/journal.h	/^	JOURNAL_COL_COMPANY,$/;"	e	enum:__anon35
JOURNAL_COL_DATETIME	./roger/journal.h	/^	JOURNAL_COL_DATETIME,$/;"	e	enum:__anon35
JOURNAL_COL_DURATION	./roger/journal.h	/^	JOURNAL_COL_DURATION,$/;"	e	enum:__anon35
JOURNAL_COL_EXTENSION	./roger/journal.h	/^	JOURNAL_COL_EXTENSION,$/;"	e	enum:__anon35
JOURNAL_COL_LINE	./roger/journal.h	/^	JOURNAL_COL_LINE,$/;"	e	enum:__anon35
JOURNAL_COL_NAME	./roger/journal.h	/^	JOURNAL_COL_NAME,$/;"	e	enum:__anon35
JOURNAL_COL_NUMBER	./roger/journal.h	/^	JOURNAL_COL_NUMBER,$/;"	e	enum:__anon35
JOURNAL_COL_TYPE	./roger/journal.h	/^	JOURNAL_COL_TYPE = 0,$/;"	e	enum:__anon35
JOURNAL_FILE	./roger/main.h	28;"	d
JOURNAL_H	./roger/journal.h	21;"	d
LIBROUTERMANAGER_ACTION_H	./libroutermanager/action.h	21;"	d
LIBROUTERMANAGER_ADDRESS_BOOK_H	./libroutermanager/address-book.h	21;"	d
LIBROUTERMANAGER_APPOBJECT_EMIT_H	./libroutermanager/appobject-emit.h	21;"	d
LIBROUTERMANAGER_APPOBJECT_H	./libroutermanager/appobject.h	21;"	d
LIBROUTERMANAGER_AUDIO_H	./libroutermanager/audio.h	21;"	d
LIBROUTERMANAGER_CALL_H	./libroutermanager/call.h	21;"	d
LIBROUTERMANAGER_CONNECTION_H	./libroutermanager/connection.h	21;"	d
LIBROUTERMANAGER_CONTACT_H	./libroutermanager/contact.h	21;"	d
LIBROUTERMANAGER_CSV_H	./libroutermanager/csv.h	21;"	d
LIBROUTERMANAGER_FAX_PHONE_H	./libroutermanager/fax_phone.h	21;"	d
LIBROUTERMANAGER_FAX_PRINTER_H	./libroutermanager/fax_printer.h	21;"	d
LIBROUTERMANAGER_FILE_H	./libroutermanager/file.h	21;"	d
LIBROUTERMANAGER_FILTER_H	./libroutermanager/filter.h	21;"	d
LIBROUTERMANAGER_FTP_H	./libroutermanager/ftp.h	21;"	d
LIBROUTERMANAGER_GSTRING_H	./libroutermanager/gstring.h	21;"	d
LIBROUTERMANAGER_LOGGING_H	./libroutermanager/logging.h	21;"	d
LIBROUTERMANAGER_LOOKUP_H	./libroutermanager/lookup.h	21;"	d
LIBROUTERMANAGER_NETWORK_H	./libroutermanager/network.h	21;"	d
LIBROUTERMANAGER_NET_MONITOR_H	./libroutermanager/net_monitor.h	21;"	d
LIBROUTERMANAGER_OSDEP_H	./libroutermanager/osdep.h	21;"	d
LIBROUTERMANAGER_PASSWORD_H	./libroutermanager/password.h	21;"	d
LIBROUTERMANAGER_PLUGINS_H	./libroutermanager/plugins.h	21;"	d
LIBROUTERMANAGER_PROFILE_H	./libroutermanager/profile.h	21;"	d
LIBROUTERMANAGER_ROUTERMANAGER_H	./libroutermanager/routermanager.h	21;"	d
LIBROUTERMANAGER_ROUTER_H	./libroutermanager/router.h	21;"	d
LIBROUTERMANAGER_SETTINGS_H	./libroutermanager/settings.h	21;"	d
LIBROUTERMANAGER_SSDP_H	./libroutermanager/ssdp.h	21;"	d
LIBROUTERMANAGER_VCARD_H	./roger/plugins/vcard/vcard.h	21;"	d
LIBROUTERMANAGER_VOXPLAY_H	./libroutermanager/voxplay.h	21;"	d
LIBROUTERMANAGER_XML_H	./libroutermanager/xml.h	26;"	d
LPFNATTACHCONSOLE	./roger/winmain.c	/^typedef BOOL (WINAPI *LPFNATTACHCONSOLE)(DWORD);$/;"	t	file:
LPFNROGERMAIN	./roger/winmain.c	/^typedef int (CALLBACK *LPFNROGERMAIN)(HINSTANCE, int, char **);$/;"	t	file:
LPFNSETPROCESSDEPPOLICY	./roger/winmain.c	/^typedef BOOL (WINAPI *LPFNSETPROCESSDEPPOLICY)(DWORD);$/;"	t	file:
LT_OBJDIR	./config.h	113;"	d
MAX_FRAME_SIZE	./libroutermanager/voxplay.c	33;"	d	file:
MAX_LASTCALLS	./roger/plugins/indicator/indicator.c	46;"	d	file:
MAX_LASTCALLS	./roger/plugins/statusicon/gtk.c	40;"	d	file:
MAX_VAL	./roger/plugins/thunderbird/thunderbird.c	60;"	d	file:
MM_TO_POINTS	./roger/print.c	43;"	d	file:
MORK_COLUMN_META	./roger/plugins/thunderbird/thunderbird.c	57;"	d	file:
NUMBER_FORMAT_INTERNATIONAL	./libroutermanager/call.h	/^	NUMBER_FORMAT_INTERNATIONAL,$/;"	e	enum:number_format
NUMBER_FORMAT_INTERNATIONAL_PLUS	./libroutermanager/call.h	/^	NUMBER_FORMAT_INTERNATIONAL_PLUS$/;"	e	enum:number_format
NUMBER_FORMAT_LOCAL	./libroutermanager/call.h	/^	NUMBER_FORMAT_LOCAL,$/;"	e	enum:number_format
NUMBER_FORMAT_NATIONAL	./libroutermanager/call.h	/^	NUMBER_FORMAT_NATIONAL,$/;"	e	enum:number_format
NUMBER_FORMAT_UNKNOWN	./libroutermanager/call.h	/^	NUMBER_FORMAT_UNKNOWN,$/;"	e	enum:number_format
OS_OPEN	./libroutermanager/osdep.h	24;"	d
OS_OPEN	./libroutermanager/osdep.h	30;"	d
OS_OPEN	./libroutermanager/osdep.h	36;"	d
PACKAGE	./config.h	119;"	d
PACKAGE_BUGREPORT	./config.h	122;"	d
PACKAGE_NAME	./config.h	125;"	d
PACKAGE_STRING	./config.h	128;"	d
PACKAGE_TARNAME	./config.h	131;"	d
PACKAGE_URL	./config.h	134;"	d
PACKAGE_VERSION	./config.h	137;"	d
PARSE_COLUMNS	./roger/plugins/thunderbird/thunderbird.c	/^	PARSE_COLUMNS$/;"	e	enum:__anon17	file:
PARSE_ROWS	./roger/plugins/thunderbird/thunderbird.c	/^	PARSE_ROWS,$/;"	e	enum:__anon17	file:
PARSE_VALUES	./roger/plugins/thunderbird/thunderbird.c	/^	PARSE_VALUES,$/;"	e	enum:__anon17	file:
PASSWORD_KEY	./libroutermanager/password.c	41;"	d	file:
PHASE_B	./libroutermanager/libfaxophone/fax.h	/^	PHASE_B = 2,$/;"	e	enum:fax_phase
PHASE_D	./libroutermanager/libfaxophone/fax.h	/^	PHASE_D = 3,$/;"	e	enum:fax_phase
PHASE_E	./libroutermanager/libfaxophone/fax.h	/^	PHASE_E = 4,$/;"	e	enum:fax_phase
PHONE_CIP	./libroutermanager/libfaxophone/phone.h	28;"	d
PHONE_H	./roger/phone.h	21;"	d
PHONE_NUMBER_FAX_HOME	./libroutermanager/router.h	/^	PHONE_NUMBER_FAX_HOME,$/;"	e	enum:phone_number_type
PHONE_NUMBER_FAX_WORK	./libroutermanager/router.h	/^	PHONE_NUMBER_FAX_WORK,$/;"	e	enum:phone_number_type
PHONE_NUMBER_HOME	./libroutermanager/router.h	/^	PHONE_NUMBER_HOME,$/;"	e	enum:phone_number_type
PHONE_NUMBER_MOBILE	./libroutermanager/router.h	/^	PHONE_NUMBER_MOBILE,$/;"	e	enum:phone_number_type
PHONE_NUMBER_PAGER	./libroutermanager/router.h	/^	PHONE_NUMBER_PAGER,$/;"	e	enum:phone_number_type
PHONE_NUMBER_WORK	./libroutermanager/router.h	/^	PHONE_NUMBER_WORK,$/;"	e	enum:phone_number_type
PHONE_TYPE_FAX	./roger/phone.h	/^	PHONE_TYPE_FAX,$/;"	e	enum:phone_type
PHONE_TYPE_VOICE	./roger/phone.h	/^	PHONE_TYPE_VOICE,$/;"	e	enum:phone_type
PORT_ANALOG1	./libroutermanager/router.h	/^	PORT_ANALOG1,$/;"	e	enum:phone_ports
PORT_ANALOG2	./libroutermanager/router.h	/^	PORT_ANALOG2,$/;"	e	enum:phone_ports
PORT_ANALOG3	./libroutermanager/router.h	/^	PORT_ANALOG3,$/;"	e	enum:phone_ports
PORT_DECT1	./libroutermanager/router.h	/^	PORT_DECT1,$/;"	e	enum:phone_ports
PORT_DECT2	./libroutermanager/router.h	/^	PORT_DECT2,$/;"	e	enum:phone_ports
PORT_DECT3	./libroutermanager/router.h	/^	PORT_DECT3,$/;"	e	enum:phone_ports
PORT_DECT4	./libroutermanager/router.h	/^	PORT_DECT4,$/;"	e	enum:phone_ports
PORT_DECT5	./libroutermanager/router.h	/^	PORT_DECT5,$/;"	e	enum:phone_ports
PORT_DECT6	./libroutermanager/router.h	/^	PORT_DECT6,$/;"	e	enum:phone_ports
PORT_IP1	./libroutermanager/router.h	/^	PORT_IP1,$/;"	e	enum:phone_ports
PORT_IP10	./libroutermanager/router.h	/^	PORT_IP10,$/;"	e	enum:phone_ports
PORT_IP2	./libroutermanager/router.h	/^	PORT_IP2,$/;"	e	enum:phone_ports
PORT_IP3	./libroutermanager/router.h	/^	PORT_IP3,$/;"	e	enum:phone_ports
PORT_IP4	./libroutermanager/router.h	/^	PORT_IP4,$/;"	e	enum:phone_ports
PORT_IP5	./libroutermanager/router.h	/^	PORT_IP5,$/;"	e	enum:phone_ports
PORT_IP6	./libroutermanager/router.h	/^	PORT_IP6,$/;"	e	enum:phone_ports
PORT_IP7	./libroutermanager/router.h	/^	PORT_IP7,$/;"	e	enum:phone_ports
PORT_IP8	./libroutermanager/router.h	/^	PORT_IP8,$/;"	e	enum:phone_ports
PORT_IP9	./libroutermanager/router.h	/^	PORT_IP9,$/;"	e	enum:phone_ports
PORT_ISDN1	./libroutermanager/router.h	/^	PORT_ISDN1,$/;"	e	enum:phone_ports
PORT_ISDN2	./libroutermanager/router.h	/^	PORT_ISDN2,$/;"	e	enum:phone_ports
PORT_ISDN3	./libroutermanager/router.h	/^	PORT_ISDN3,$/;"	e	enum:phone_ports
PORT_ISDN4	./libroutermanager/router.h	/^	PORT_ISDN4,$/;"	e	enum:phone_ports
PORT_ISDN5	./libroutermanager/router.h	/^	PORT_ISDN5,$/;"	e	enum:phone_ports
PORT_ISDN6	./libroutermanager/router.h	/^	PORT_ISDN6,$/;"	e	enum:phone_ports
PORT_ISDN7	./libroutermanager/router.h	/^	PORT_ISDN7,$/;"	e	enum:phone_ports
PORT_ISDN8	./libroutermanager/router.h	/^	PORT_ISDN8,$/;"	e	enum:phone_ports
PORT_ISDNALL	./libroutermanager/router.h	/^	PORT_ISDNALL,$/;"	e	enum:phone_ports
PORT_MAX	./libroutermanager/router.h	/^	PORT_MAX$/;"	e	enum:phone_ports
PORT_SOFTPHONE	./libroutermanager/router.h	/^	PORT_SOFTPHONE,$/;"	e	enum:phone_ports
PRINT_H	./roger/print.h	21;"	d
PrintData	./roger/print.c	/^} PrintData;$/;"	t	typeref:struct:__anon26	file:
QUANT_MASK	./libroutermanager/libfaxophone/ringtone.c	28;"	d	file:
RECORDING_BUFSIZE	./libroutermanager/libfaxophone/faxophone.h	103;"	d
RECORDING_JITTER	./libroutermanager/libfaxophone/faxophone.h	104;"	d
RECORDING_LOCAL	./libroutermanager/libfaxophone/faxophone.h	/^	RECORDING_LOCAL,$/;"	e	enum:recording
RECORDING_REMOTE	./libroutermanager/libfaxophone/faxophone.h	/^	RECORDING_REMOTE$/;"	e	enum:recording
RINGING_FREQUENCY	./libroutermanager/libfaxophone/ringtone.c	39;"	d	file:
RING_FADE_LENGTH	./libroutermanager/libfaxophone/ringtone.c	35;"	d	file:
RING_FREQUENCY	./libroutermanager/libfaxophone/ringtone.c	38;"	d	file:
RING_LENGTH	./libroutermanager/libfaxophone/ringtone.c	36;"	d	file:
RING_PERIOD	./libroutermanager/libfaxophone/ringtone.c	33;"	d	file:
RING_SHORT_LENGTH	./libroutermanager/libfaxophone/ringtone.c	37;"	d	file:
RING_SHORT_PERIOD	./libroutermanager/libfaxophone/ringtone.c	34;"	d	file:
RM_ERROR	./libroutermanager/fax_phone.c	44;"	d	file:
RM_ERROR	./libroutermanager/routermanager.h	40;"	d
RM_ERROR_AUDIO	./libroutermanager/routermanager.h	/^	RM_ERROR_AUDIO,$/;"	e	enum:__anon27
RM_ERROR_FAX	./libroutermanager/routermanager.h	/^	RM_ERROR_FAX,$/;"	e	enum:__anon27
RM_ERROR_ROUTER	./libroutermanager/routermanager.h	/^	RM_ERROR_ROUTER,$/;"	e	enum:__anon27
ROGER_FAX_H	./roger/fax.h	21;"	d
ROUTERMANAGER_CALLMONITOR_PLUGIN	./libroutermanager/plugins/callmonitor/callmonitor.c	39;"	d	file:
ROUTERMANAGER_EVOLUTION_PLUGIN	./roger/plugins/evolution/evolution.c	44;"	d	file:
ROUTERMANAGER_FRITZBOX_PLUGIN	./libroutermanager/plugins/fritzbox/fritzbox.c	44;"	d	file:
ROUTERMANAGER_FRITZFON_PLUGIN	./roger/plugins/fritzfon/fritzfon.c	42;"	d	file:
ROUTERMANAGER_GLOBAL_AREACODES_PLUGIN	./libroutermanager/plugins/areacodes_global/areacodes_global.c	36;"	d	file:
ROUTERMANAGER_GNOTIFICATION_PLUGIN	./roger/plugins/gnotification/gnotification.c	47;"	d	file:
ROUTERMANAGER_GOOGLE_PLUGIN	./roger/plugins/google/google.c	45;"	d	file:
ROUTERMANAGER_GSTREAMER_PLUGIN	./libroutermanager/plugins/gstreamer1/gstreamer.c	33;"	d	file:
ROUTERMANAGER_INDICATOR_PLUGIN	./roger/plugins/indicator/indicator.c	49;"	d	file:
ROUTERMANAGER_JOURNAL_HEADER	./libroutermanager/csv.c	38;"	d	file:
ROUTERMANAGER_KEYCHAIN_PLUGIN	./roger/plugins/keychain/keychain.c	34;"	d	file:
ROUTERMANAGER_NOTIFICATION_GTK_PLUGIN	./roger/plugins/gtknotify/gtknotify.c	47;"	d	file:
ROUTERMANAGER_NOTIFICATION_PLUGIN	./roger/plugins/notification/notification.c	48;"	d	file:
ROUTERMANAGER_OSXAB_PLUGIN	./roger/plugins/osxab/osxab.c	41;"	d	file:
ROUTERMANAGER_PATH	./libroutermanager/routermanager.h	38;"	d
ROUTERMANAGER_PLUGIN_REGISTER	./libroutermanager/plugins.h	143;"	d
ROUTERMANAGER_PLUGIN_REGISTER	./libroutermanager/plugins/areacodes_global/areacodes_global.c	/^ROUTERMANAGER_PLUGIN_REGISTER(ROUTERMANAGER_TYPE_GLOBAL_AREACODES_PLUGIN, RouterManagerGlobalAreaCodesPlugin, routermanager_global_areacodes_plugin)$/;"	f
ROUTERMANAGER_PLUGIN_REGISTER	./libroutermanager/plugins/fritzbox/fritzbox.c	/^ROUTERMANAGER_PLUGIN_REGISTER(ROUTERMANAGER_TYPE_FRITZBOX_PLUGIN, RouterManagerFritzBoxPlugin, routermanager_fritzbox_plugin)$/;"	f
ROUTERMANAGER_PLUGIN_REGISTER	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^ROUTERMANAGER_PLUGIN_REGISTER(ROUTERMANAGER_TYPE_PULSEAUDIO_PLUGIN, RouterManagerPulseAudioPlugin, routermanager_pulseaudio_plugin)$/;"	f
ROUTERMANAGER_PLUGIN_REGISTER	./libroutermanager/plugins/secret/secret.c	/^ROUTERMANAGER_PLUGIN_REGISTER(ROUTERMANAGER_TYPE_SECRET_PLUGIN, RouterManagerSecretPlugin, routermanager_secret_plugin)$/;"	f
ROUTERMANAGER_PLUGIN_REGISTER_CONFIGURABLE	./libroutermanager/plugins.h	155;"	d
ROUTERMANAGER_PORTAUDIO_PLUGIN	./libroutermanager/plugins/portaudio/portaudio.c	42;"	d	file:
ROUTERMANAGER_PULSEAUDIO_PLUGIN	./libroutermanager/plugins/pulseaudio/pulseaudio.c	36;"	d	file:
ROUTERMANAGER_REVERSELOOKUP_H	./libroutermanager/plugins/reverselookup/reverselookup.h	21;"	d
ROUTERMANAGER_REVERSE_LOOKUP_PLUGIN	./libroutermanager/plugins/reverselookup/reverselookup.c	44;"	d	file:
ROUTERMANAGER_SCHEME	./libroutermanager/routermanager.h	34;"	d
ROUTERMANAGER_SCHEME_PROFILE	./libroutermanager/routermanager.h	35;"	d
ROUTERMANAGER_SCHEME_PROFILE_ACTION	./libroutermanager/routermanager.h	36;"	d
ROUTERMANAGER_SECRET_PLUGIN	./libroutermanager/plugins/secret/secret.c	29;"	d	file:
ROUTERMANAGER_SIMPLE_PWD_PLUGIN	./libroutermanager/plugins/simple_pwd/simple_pwd.c	25;"	d	file:
ROUTERMANAGER_STATUSICON_PLUGIN	./roger/plugins/statusicon/gtk.c	43;"	d	file:
ROUTERMANAGER_THUNDERBIRD_PLUGIN	./roger/plugins/thunderbird/thunderbird.c	42;"	d	file:
ROUTERMANAGER_TYPE_CALLMONITOR_PLUGIN	./libroutermanager/plugins/callmonitor/callmonitor.c	38;"	d	file:
ROUTERMANAGER_TYPE_EVOLUTION_PLUGIN	./roger/plugins/evolution/evolution.c	43;"	d	file:
ROUTERMANAGER_TYPE_FRITZBOX_PLUGIN	./libroutermanager/plugins/fritzbox/fritzbox.c	43;"	d	file:
ROUTERMANAGER_TYPE_FRITZFON_PLUGIN	./roger/plugins/fritzfon/fritzfon.c	41;"	d	file:
ROUTERMANAGER_TYPE_GLOBAL_AREACODES_PLUGIN	./libroutermanager/plugins/areacodes_global/areacodes_global.c	35;"	d	file:
ROUTERMANAGER_TYPE_GNOTIFICATION_PLUGIN	./roger/plugins/gnotification/gnotification.c	46;"	d	file:
ROUTERMANAGER_TYPE_GOOGLE_PLUGIN	./roger/plugins/google/google.c	44;"	d	file:
ROUTERMANAGER_TYPE_GSTREAMER_PLUGIN	./libroutermanager/plugins/gstreamer1/gstreamer.c	32;"	d	file:
ROUTERMANAGER_TYPE_INDICATOR_PLUGIN	./roger/plugins/indicator/indicator.c	48;"	d	file:
ROUTERMANAGER_TYPE_KEYCHAIN_PLUGIN	./roger/plugins/keychain/keychain.c	33;"	d	file:
ROUTERMANAGER_TYPE_NOTIFICATION_GTK_PLUGIN	./roger/plugins/gtknotify/gtknotify.c	46;"	d	file:
ROUTERMANAGER_TYPE_NOTIFICATION_PLUGIN	./roger/plugins/notification/notification.c	47;"	d	file:
ROUTERMANAGER_TYPE_OSXAB_PLUGIN	./roger/plugins/osxab/osxab.c	40;"	d	file:
ROUTERMANAGER_TYPE_PORTAUDIO_PLUGIN	./libroutermanager/plugins/portaudio/portaudio.c	41;"	d	file:
ROUTERMANAGER_TYPE_PULSEAUDIO_PLUGIN	./libroutermanager/plugins/pulseaudio/pulseaudio.c	35;"	d	file:
ROUTERMANAGER_TYPE_REVERSE_LOOKUP_PLUGIN	./libroutermanager/plugins/reverselookup/reverselookup.c	43;"	d	file:
ROUTERMANAGER_TYPE_SECRET_PLUGIN	./libroutermanager/plugins/secret/secret.c	28;"	d	file:
ROUTERMANAGER_TYPE_SIMPLE_PWD_PLUGIN	./libroutermanager/plugins/simple_pwd/simple_pwd.c	24;"	d	file:
ROUTERMANAGER_TYPE_STATUSICON_PLUGIN	./roger/plugins/statusicon/gtk.c	42;"	d	file:
ROUTERMANAGER_TYPE_THUNDERBIRD_PLUGIN	./roger/plugins/thunderbird/thunderbird.c	41;"	d	file:
ROUTERMANAGER_TYPE_VCARD_PLUGIN	./roger/plugins/vcard/vcard.c	46;"	d	file:
ROUTERMANAGER_TYPE_WEBJOURNAL_PLUGIN	./roger/plugins/webjournal/webjournal.c	41;"	d	file:
ROUTERMANAGER_TYPE_WINCRED_PLUGIN	./libroutermanager/plugins/wincred/wincred.c	28;"	d	file:
ROUTERMANAGER_VCARD_PLUGIN	./roger/plugins/vcard/vcard.c	47;"	d	file:
ROUTERMANAGER_WEBJOURNAL_H	./roger/plugins/webjournal/webjournal.h	21;"	d
ROUTERMANAGER_WEBJOURNAL_PLUGIN	./roger/plugins/webjournal/webjournal.c	42;"	d	file:
ROUTERMANAGER_WINCRED_PLUGIN	./libroutermanager/plugins/wincred/wincred.c	29;"	d	file:
ROUTER_DIAL_PORT_AUTO	./libroutermanager/router.h	/^	ROUTER_DIAL_PORT_AUTO = -1,$/;"	e	enum:router_dial_port
ROUTER_ENABLE_CAPI	./libroutermanager/router.h	30;"	d
ROUTER_ENABLE_TELNET	./libroutermanager/router.h	29;"	d
RoundUpToNextPowerOf2	./libroutermanager/plugins/portaudio/portaudio.c	/^unsigned long RoundUpToNextPowerOf2(unsigned long n)$/;"	f
RouterManagerCallMonitorPluginPrivate	./libroutermanager/plugins/callmonitor/callmonitor.c	/^} RouterManagerCallMonitorPluginPrivate;$/;"	t	typeref:struct:__anon9	file:
RouterManagerEvolutionPluginPrivate	./roger/plugins/evolution/evolution.c	/^} RouterManagerEvolutionPluginPrivate;$/;"	t	typeref:struct:__anon19	file:
RouterManagerFritzBoxPluginPrivate	./libroutermanager/plugins/fritzbox/fritzbox.c	/^} RouterManagerFritzBoxPluginPrivate;$/;"	t	typeref:struct:__anon4	file:
RouterManagerFritzFonPluginPrivate	./roger/plugins/fritzfon/fritzfon.c	/^} RouterManagerFritzFonPluginPrivate;$/;"	t	typeref:struct:__anon18	file:
RouterManagerGNotificationPluginPrivate	./roger/plugins/gnotification/gnotification.c	/^} RouterManagerGNotificationPluginPrivate;$/;"	t	typeref:struct:__anon24	file:
RouterManagerGStreamerPluginPrivate	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^} RouterManagerGStreamerPluginPrivate;$/;"	t	typeref:struct:__anon7	file:
RouterManagerGlobalAreaCodesPluginPrivate	./libroutermanager/plugins/areacodes_global/areacodes_global.c	/^} RouterManagerGlobalAreaCodesPluginPrivate;$/;"	t	typeref:struct:__anon6	file:
RouterManagerGooglePluginPrivate	./roger/plugins/google/google.c	/^} RouterManagerGooglePluginPrivate;$/;"	t	typeref:struct:__anon25	file:
RouterManagerIndicatorPluginPrivate	./roger/plugins/indicator/indicator.c	/^} RouterManagerIndicatorPluginPrivate;$/;"	t	typeref:struct:__anon23	file:
RouterManagerKeyChainPluginPrivate	./roger/plugins/keychain/keychain.c	/^} RouterManagerKeyChainPluginPrivate;$/;"	t	typeref:struct:__anon12	file:
RouterManagerNotificationGtkPluginPrivate	./roger/plugins/gtknotify/gtknotify.c	/^} RouterManagerNotificationGtkPluginPrivate;$/;"	t	typeref:struct:__anon13	file:
RouterManagerNotificationPluginPrivate	./roger/plugins/notification/notification.c	/^} RouterManagerNotificationPluginPrivate;$/;"	t	typeref:struct:__anon15	file:
RouterManagerOSXAbPluginPrivate	./roger/plugins/osxab/osxab.c	/^} RouterManagerOSXAbPluginPrivate;$/;"	t	typeref:struct:__anon22	file:
RouterManagerPortAudioPluginPrivate	./libroutermanager/plugins/portaudio/portaudio.c	/^} RouterManagerPortAudioPluginPrivate;$/;"	t	typeref:struct:__anon1	file:
RouterManagerPulseAudioPluginPrivate	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^} RouterManagerPulseAudioPluginPrivate;$/;"	t	typeref:struct:__anon10	file:
RouterManagerReverseLookupPluginPrivate	./libroutermanager/plugins/reverselookup/reverselookup.c	/^} RouterManagerReverseLookupPluginPrivate;$/;"	t	typeref:struct:__anon5	file:
RouterManagerSecretPluginPrivate	./libroutermanager/plugins/secret/secret.c	/^} RouterManagerSecretPluginPrivate;$/;"	t	typeref:struct:__anon2	file:
RouterManagerSimplePwdPluginPrivate	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^} RouterManagerSimplePwdPluginPrivate;$/;"	t	typeref:struct:__anon3	file:
RouterManagerStatusIconPluginPrivate	./roger/plugins/statusicon/gtk.c	/^} RouterManagerStatusIconPluginPrivate;$/;"	t	typeref:struct:__anon14	file:
RouterManagerThunderbirdPluginPrivate	./roger/plugins/thunderbird/thunderbird.c	/^} RouterManagerThunderbirdPluginPrivate;$/;"	t	typeref:struct:__anon16	file:
RouterManagerVCardPluginPrivate	./roger/plugins/vcard/vcard.c	/^} RouterManagerVCardPluginPrivate;$/;"	t	typeref:struct:__anon21	file:
RouterManagerWebJournalPluginPrivate	./roger/plugins/webjournal/webjournal.c	/^} RouterManagerWebJournalPluginPrivate;$/;"	t	typeref:struct:__anon20	file:
RouterManagerWinCredPluginPrivate	./libroutermanager/plugins/wincred/wincred.c	/^} RouterManagerWinCredPluginPrivate;$/;"	t	typeref:struct:__anon8	file:
SECRET_H	./libroutermanager/plugins/secret/secret.h	21;"	d
SECRET_SCHEMA	./libroutermanager/plugins/secret/secret.h	25;"	d
SECTION	./roger/roger_gresource.c	4;"	d	file:
SECTION	./roger/roger_gresource.c	6;"	d	file:
SEG_MASK	./libroutermanager/libfaxophone/ringtone.c	30;"	d	file:
SEG_SHIFT	./libroutermanager/libfaxophone/ringtone.c	29;"	d	file:
SERVICE_NAME	./roger/plugins/keychain/keychain.c	42;"	d	file:
SESSION_FAX	./libroutermanager/libfaxophone/faxophone.h	/^	SESSION_FAX,$/;"	e	enum:session_type
SESSION_NONE	./libroutermanager/libfaxophone/faxophone.h	/^	SESSION_NONE,$/;"	e	enum:session_type
SESSION_PHONE	./libroutermanager/libfaxophone/faxophone.h	/^	SESSION_PHONE,$/;"	e	enum:session_type
SESSION_SFF	./libroutermanager/libfaxophone/faxophone.h	/^	SESSION_SFF$/;"	e	enum:session_type
SETTINGS_H	./roger/settings.h	21;"	d
SFF_CIP	./libroutermanager/libfaxophone/sff.h	29;"	d
SFF_H	./libroutermanager/libfaxophone/sff.h	26;"	d
SHORTCUTS_H	./roger/shortcuts.h	21;"	d
SIGN_BIT	./libroutermanager/libfaxophone/ringtone.c	31;"	d	file:
SIZEOF_LONG	./config.h	140;"	d
SPANDSP_EXPOSE_INTERNAL_STRUCTURES	./libroutermanager/libfaxophone/fax.c	27;"	d	file:
SPANDSP_EXPOSE_INTERNAL_STRUCTURES	./libroutermanager/libfaxophone/fax.h	28;"	d
SPEECH_CIP	./libroutermanager/libfaxophone/fax.h	32;"	d
SPOOLER_DEBUG	./libroutermanager/fax_spooler.c	38;"	d	file:
SPOOLER_DIR	./libroutermanager/fax_spooler.c	36;"	d	file:
STATE_CONNECTED	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_CONNECTED,$/;"	e	enum:state
STATE_CONNECT_ACTIVE	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_CONNECT_ACTIVE,$/;"	e	enum:state
STATE_CONNECT_B3_WAIT	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_CONNECT_B3_WAIT,$/;"	e	enum:state
STATE_CONNECT_REQ	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_CONNECT_REQ,$/;"	e	enum:state
STATE_CONNECT_WAIT	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_CONNECT_WAIT,$/;"	e	enum:state
STATE_DISCONNECT_ACTIVE	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_DISCONNECT_ACTIVE,$/;"	e	enum:state
STATE_DISCONNECT_B3_REQ	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_DISCONNECT_B3_REQ,$/;"	e	enum:state
STATE_DISCONNECT_B3_WAIT	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_DISCONNECT_B3_WAIT,$/;"	e	enum:state
STATE_DISCONNET_WAIT	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_DISCONNET_WAIT,$/;"	e	enum:state
STATE_ENTRY	./roger/plugins/vcard/vcard.h	/^	STATE_ENTRY$/;"	e	enum:__anon34
STATE_IDLE	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_IDLE = 0,$/;"	e	enum:state
STATE_INCOMING_WAIT	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_INCOMING_WAIT,$/;"	e	enum:state
STATE_MAXSTATE	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_MAXSTATE$/;"	e	enum:state
STATE_NEW	./roger/plugins/vcard/vcard.h	/^	STATE_NEW = 0,$/;"	e	enum:__anon34
STATE_OPTIONS	./roger/plugins/vcard/vcard.h	/^	STATE_OPTIONS,$/;"	e	enum:__anon34
STATE_RINGING	./libroutermanager/libfaxophone/faxophone.h	/^	STATE_RINGING,$/;"	e	enum:state
STATE_TAG	./roger/plugins/vcard/vcard.h	/^	STATE_TAG,$/;"	e	enum:__anon34
STDC_HEADERS	./config.h	143;"	d
UHB	./roger/phone.c	54;"	d	file:
UITOOLS_H	./roger/uitools.h	21;"	d
USE_ISDN_MUTEX	./libroutermanager/libfaxophone/faxophone.h	67;"	d
USE_PRINTER_SPOOLER	./config.h	149;"	d
USE_SPEEX	./libroutermanager/plugins/portaudio/portaudio.c	51;"	d	file:
VERSION	./config.h	152;"	d
WinMain	./roger/winmain.c	/^int _stdcall WinMain(struct HINSTANCE__ *hInstance, struct HINSTANCE__ *hPrevInstance, char *lpszCmdLine, int nCmdShow)$/;"	f
XMLNODE_TYPE_ATTRIB	./libroutermanager/xml.h	/^	XMLNODE_TYPE_ATTRIB,$/;"	e	enum:__anon29
XMLNODE_TYPE_DATA	./libroutermanager/xml.h	/^	XMLNODE_TYPE_DATA$/;"	e	enum:__anon29
XMLNODE_TYPE_TAG	./libroutermanager/xml.h	/^	XMLNODE_TYPE_TAG,$/;"	e	enum:__anon29
_	./libroutermanager/routermanager.h	32;"	d
_	./roger-cli/main_cli.c	40;"	d	file:
_	./roger-cli/main_cli.c	41;"	d	file:
_	./roger/main.h	30;"	d
_AppObject	./libroutermanager/appobject.h	/^struct _AppObject {$/;"	s
_AppObjectClass	./libroutermanager/appobject.h	/^struct _AppObjectClass {$/;"	s
_AppObjectPrivate	./libroutermanager/appobject.c	/^struct _AppObjectPrivate {$/;"	s	file:
_ROUTERMANAGER_PLUGIN_REGISTER	./libroutermanager/plugins.h	42;"	d
_XOPEN_SOURCE	./libroutermanager/password.c	20;"	d	file:
__RESOURCE_roger_H__	./roger/roger_gresource.h	2;"	d
_law_2_linear16	./libroutermanager/libfaxophone/fax.c	/^static uint16_t *_law_2_linear16 = &law_2_linear16[0];$/;"	v	file:
_linear16_2_law	./libroutermanager/libfaxophone/fax.c	/^static int8_t *_linear16_2_law = (int8_t *) &linear16_2_law[32768];$/;"	v	file:
_xmlnode_parser_data	./libroutermanager/xml.c	/^struct _xmlnode_parser_data {$/;"	s	file:
ab_plugins	./libroutermanager/address-book.c	/^static GSList *ab_plugins = NULL;$/;"	v	file:
about_activated	./roger/application.c	/^static void about_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
about_response	./roger/about.c	/^static void about_response(GtkWidget *widget, gpointer user_data)$/;"	f	file:
action	./libroutermanager/action.h	/^struct action {$/;"	s
action_add	./libroutermanager/action.c	/^void action_add(struct profile *profile, struct action *action)$/;"	f
action_apply_button_clicked_cb	./roger/settings.c	/^void action_apply_button_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f
action_check_number	./libroutermanager/action.c	/^static inline gboolean action_check_number(const gchar *local_number, gchar **numbers)$/;"	f	file:
action_checkbutton_toggled_cb	./roger/settings.c	/^void action_checkbutton_toggled_cb(GtkToggleButton *button, gpointer user_data)$/;"	f
action_commit	./libroutermanager/action.c	/^void action_commit(struct profile *profile)$/;"	f
action_connection_notify_cb	./libroutermanager/action.c	/^void action_connection_notify_cb(AppObject *object, struct connection *connection, gpointer user_data)$/;"	f
action_create	./libroutermanager/action.c	/^struct action *action_create(void)$/;"	f
action_edit	./roger/settings.c	/^gboolean action_edit(struct action *action)$/;"	f
action_enable_renderer_toggled_cb	./roger/settings.c	/^void action_enable_renderer_toggled_cb(GtkCellRendererToggle *toggle, gchar *path_str, gpointer user_data)$/;"	f
action_free	./libroutermanager/action.c	/^void action_free(gpointer data)$/;"	f
action_get_list	./libroutermanager/action.c	/^GSList *action_get_list(struct profile *profile)$/;"	f
action_init	./libroutermanager/action.c	/^void action_init(struct profile *profile)$/;"	f
action_list	./libroutermanager/profile.h	/^	GSList *action_list;$/;"	m	struct:profile
action_load	./libroutermanager/action.c	/^static void action_load(struct profile *profile, const gchar *name)$/;"	f	file:
action_modify	./libroutermanager/action.c	/^struct action *action_modify(struct action *action, const gchar *name, const gchar *description, const gchar *exec, gchar **numbers)$/;"	f
action_refresh_list	./roger/settings.c	/^void action_refresh_list(GtkListStore *list_store)$/;"	f
action_regex	./libroutermanager/action.c	/^static gchar *action_regex(gchar *str, struct connection *connection)$/;"	f	file:
action_remove	./libroutermanager/action.c	/^void action_remove(struct profile *profile, struct action *action)$/;"	f
action_shutdown	./libroutermanager/action.c	/^void action_shutdown(struct profile *profile)$/;"	f
actions_add_button_clicked_cb	./roger/settings.c	/^void actions_add_button_clicked_cb(GtkWidget *widget, gpointer data)$/;"	f
actions_edit_button_clicked_cb	./roger/settings.c	/^void actions_edit_button_clicked_cb(GtkWidget *widget, gpointer data)$/;"	f
actions_liststore	./roger/settings.c	/^	GtkListStore *actions_liststore;$/;"	m	struct:settings	file:
actions_remove_button_clicked_cb	./roger/settings.c	/^void actions_remove_button_clicked_cb(GtkWidget *widget, gpointer data)$/;"	f
actions_treeview_button_press_event_cb	./roger/settings.c	/^gboolean actions_treeview_button_press_event_cb(GtkTreeView *view, GdkEventButton *event, gpointer user_data)$/;"	f
actions_treeview_cursor_changed_cb	./roger/settings.c	/^gboolean actions_treeview_cursor_changed_cb(GtkTreeView *view, gpointer user_data)$/;"	f
active_capi_connection	./libroutermanager/fax_phone.c	/^struct capi_connection *active_capi_connection = NULL;$/;"	v	typeref:struct:capi_connection
active_router	./libroutermanager/router.c	/^static struct router *active_router = NULL;$/;"	v	typeref:struct:router	file:
active_user_widget	./roger/contacts.c	/^	GtkWidget *active_user_widget;$/;"	m	struct:contacts	file:
adapter	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^	GstAdapter *adapter;$/;"	m	struct:pipes	file:
add_button	./roger/contacts.c	/^	GtkWidget *add_button;$/;"	m	struct:contacts	file:
add_button_clicked_cb	./roger/contacts.c	/^void add_button_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f
add_button_clicked_cb	./roger/settings.c	/^static void add_button_clicked_cb(GtkWidget *widget, gpointer grid)$/;"	f	file:
add_contact_activated	./roger/journal.c	/^void add_contact_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f
add_foreach	./roger/journal.c	/^void add_foreach(GtkTreeModel *model, GtkTreePath *path, GtkTreeIter *iter, gpointer data)$/;"	f
add_statusicon	./roger/plugins/statusicon/gtk.c	/^static gboolean add_statusicon(gpointer user_data)$/;"	f	file:
address_book	./libroutermanager/address-book.h	/^struct address_book {$/;"	s
address_book_available	./libroutermanager/address-book.c	/^gboolean address_book_available(void)$/;"	f
address_book_can_save	./libroutermanager/address-book.c	/^gboolean address_book_can_save(void)$/;"	f
address_book_contact_process_cb	./libroutermanager/address-book.c	/^void address_book_contact_process_cb(AppObject *obj, struct contact *contact, gpointer user_data)$/;"	f
address_book_find	./libroutermanager/address-book.c	/^struct address_book *address_book_find(struct profile *profile)$/;"	f
address_book_get_contacts	./libroutermanager/address-book.c	/^GSList *address_book_get_contacts(void)$/;"	f
address_book_get_name	./libroutermanager/address-book.c	/^gchar *address_book_get_name(void)$/;"	f
address_book_get_plugins	./libroutermanager/address-book.c	/^GSList *address_book_get_plugins(void)$/;"	f
address_book_number_compare	./libroutermanager/address-book.c	/^gint address_book_number_compare(gconstpointer a, gconstpointer b)$/;"	f
address_book_plugin_combobox	./roger/settings.c	/^	GtkWidget *address_book_plugin_combobox;$/;"	m	struct:settings	file:
address_book_reload_contacts	./libroutermanager/address-book.c	/^gboolean address_book_reload_contacts(void)$/;"	f
address_book_remove_contact	./libroutermanager/address-book.c	/^gboolean address_book_remove_contact(struct contact *contact)$/;"	f
address_book_save_contact	./libroutermanager/address-book.c	/^gboolean address_book_save_contact(struct contact *contact)$/;"	f
address_book_signal_id	./libroutermanager/address-book.c	/^static guint address_book_signal_id = 0;$/;"	v	file:
address_type_changed_cb	./roger/contacts.c	/^void address_type_changed_cb(GtkWidget *combobox, gpointer user_data)$/;"	f
addressbook_activated	./roger/application.c	/^static void addressbook_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
addresses	./libroutermanager/contact.h	/^	GSList *addresses;$/;"	m	struct:contact
alaw2linear	./libroutermanager/libfaxophone/isdn-convert.c	/^static short alaw2linear(unsigned char alaw_byte)$/;"	f	file:
alaw_get_sign_mag	./libroutermanager/libfaxophone/isdn-convert.c	/^static inline void alaw_get_sign_mag(short sample, unsigned *sign, unsigned *mag)$/;"	f	file:
alignment	./roger/roger_gresource.c	/^static const SECTION union { const guint8 data[174877]; const double alignment; void * const ptr;}  roger_resource_data = { {$/;"	m	union:__anon11	file:
all_options	./roger/application.c	/^const GOptionEntry all_options[] = {$/;"	v
annex	./libroutermanager/router.h	/^	gchar *annex;$/;"	m	struct:router_info
answeringmachine_play	./roger/answeringmachine.c	/^void answeringmachine_play(const gchar *name)$/;"	f
app_assistant	./roger/assistant.c	/^void app_assistant(void)$/;"	f
app_authenticate_cb	./roger/application.c	/^void app_authenticate_cb(AppObject *app, struct auth_data *auth_data)$/;"	f
app_contacts	./roger/contacts.c	/^void app_contacts(struct contact *contact)$/;"	f
app_copy_ip	./roger/application.c	/^void app_copy_ip(void)$/;"	f
app_init	./roger/application.c	/^static void app_init(GtkApplication *app)$/;"	f	file:
app_marshal_VOID__POINTER_POINTER	./libroutermanager/appobject.c	/^void app_marshal_VOID__POINTER_POINTER(GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data)$/;"	f
app_object	./libroutermanager/appobject.c	/^GObject *app_object = NULL;$/;"	v
app_object_class_init	./libroutermanager/appobject.c	/^static void app_object_class_init(AppObjectClass *klass)$/;"	f	file:
app_object_create_signals	./libroutermanager/appobject.c	/^static void app_object_create_signals(GObjectClass *g_object_class)$/;"	f	file:
app_object_init	./libroutermanager/appobject.c	/^static void app_object_init(AppObject *self)$/;"	f	file:
app_object_message_cb	./roger/application.c	/^static void app_object_message_cb(AppObject *object, gchar *title, gchar *message)$/;"	f	file:
app_object_new	./libroutermanager/appobject.c	/^GObject *app_object_new(void)$/;"	f
app_object_signals	./libroutermanager/appobject.c	/^guint app_object_signals[ACB_MAX] = { 0 };$/;"	v
app_quit	./roger/application.c	/^void app_quit(void)$/;"	f
app_reconnect	./roger/application.c	/^void app_reconnect(void)$/;"	f
app_settings	./roger/application.c	/^GSettings *app_settings = NULL;$/;"	v
app_shortcuts	./roger/shortcuts.c	/^void app_shortcuts(void)$/;"	f
app_show_about	./roger/about.c	/^void app_show_about(void)$/;"	f
app_show_contacts	./roger/application.c	/^void app_show_contacts(void)$/;"	f
app_show_fax_window	./roger/fax.c	/^void app_show_fax_window(gchar *fax_file)$/;"	f
app_show_fax_window_idle	./roger/fax.c	/^gboolean app_show_fax_window_idle(gpointer data)$/;"	f
app_show_help	./roger/application.c	/^void app_show_help(void)$/;"	f
app_show_phone_window	./roger/phone.c	/^void app_show_phone_window(struct contact *contact, struct connection *connection)$/;"	f
app_show_preferences	./roger/application.c	/^void app_show_preferences(void)$/;"	f
app_show_settings	./roger/settings.c	/^void app_show_settings(void)$/;"	f
appl_id	./libroutermanager/libfaxophone/faxophone.h	/^	int appl_id;$/;"	m	struct:session
application_activated	./roger/application.c	/^static void application_activated(GtkApplication *app, gpointer data)$/;"	f	file:
application_command_line_cb	./roger/application.c	/^static gint application_command_line_cb(GtkApplication *app, GApplicationCommandLine *command_line, gpointer data)$/;"	f	file:
application_new	./roger/application.c	/^GtkApplication *application_new(void)$/;"	f
application_options_get_context	./roger/application.c	/^GOptionContext *application_options_get_context(void)$/;"	f
application_options_process	./roger/application.c	/^static void application_options_process(GtkApplication *app, const struct cmd_line_option_state *options)$/;"	f	file:
application_shutdown	./roger/application.c	/^static void application_shutdown(GObject *object)$/;"	f	file:
application_startup	./roger/application.c	/^static void application_startup(GtkApplication *application)$/;"	f	file:
apps_entries	./roger/application.c	/^static GActionEntry apps_entries[] = {$/;"	v	file:
area_code_entry	./roger/settings.c	/^	GtkWidget *area_code_entry;$/;"	m	struct:settings	file:
areacode	./libroutermanager/plugins/areacodes_global/csv.h	/^struct areacode {$/;"	s
areacodes_get_city	./libroutermanager/plugins/areacodes_global/areacodes_global.c	/^static gchar *areacodes_get_city(RouterManagerGlobalAreaCodesPlugin *areacodes_plugin, gchar *number)$/;"	f	file:
argv0	./roger/main_ui.c	/^gchar *argv0 = NULL;$/;"	v
ask_user_for_auth_code	./roger/plugins/google/google.c	/^gchar *ask_user_for_auth_code(const gchar *auth_uri)$/;"	f
assistant	./roger/application.c	/^	gboolean assistant;$/;"	m	struct:cmd_line_option_state	file:
assistant	./roger/assistant.c	/^static struct assistant *assistant = NULL;$/;"	v	typeref:struct:assistant	file:
assistant	./roger/assistant.c	/^struct assistant {$/;"	s	file:
assistant_activated	./roger/application.c	/^static void assistant_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
assistant_page	./roger/assistant.c	/^struct assistant_page {$/;"	s	file:
assistant_pages	./roger/assistant.c	/^struct assistant_page assistant_pages[] = {$/;"	v	typeref:struct:assistant_page
audio	./libroutermanager/audio.h	/^struct audio {$/;"	s
audio	./libroutermanager/libfaxophone/faxophone.h	/^	gpointer audio;$/;"	m	struct:capi_connection
audio	./libroutermanager/voxplay.c	/^	struct audio *audio;$/;"	m	struct:vox_playback	typeref:struct:vox_playback::audio	file:
audio_cb	./libroutermanager/plugins/portaudio/portaudio.c	/^static int audio_cb(const void *input_buffer, void *output_buffer, unsigned long frames_per_buffer, const PaStreamCallbackTimeInfo *time_info, PaStreamCallbackFlags statusFlags, void *user_data)$/;"	f	file:
audio_close	./libroutermanager/audio.c	/^gboolean audio_close(gpointer audio_priv)$/;"	f
audio_close	./libroutermanager/libfaxophone/faxophone.h	/^	gboolean (*audio_close)(gpointer audio);$/;"	m	struct:session_handlers
audio_device	./libroutermanager/audio.h	/^struct audio_device {$/;"	s
audio_get_default	./libroutermanager/audio.c	/^struct audio *audio_get_default(void)$/;"	f
audio_get_plugins	./libroutermanager/audio.c	/^GSList *audio_get_plugins(void)$/;"	f
audio_init	./libroutermanager/audio.c	/^void audio_init(struct profile *profile)$/;"	f
audio_input	./libroutermanager/libfaxophone/faxophone.h	/^	gsize (*audio_input)(gpointer audio, guchar *buf, gsize len);$/;"	m	struct:session_handlers
audio_input_combobox	./roger/settings.c	/^	GtkWidget *audio_input_combobox;$/;"	m	struct:settings	file:
audio_list	./libroutermanager/audio.c	/^static GSList *audio_list = NULL;$/;"	v	file:
audio_lut_generate	./libroutermanager/libfaxophone/ringtone.c	/^static unsigned char *audio_lut_generate = NULL;$/;"	v	file:
audio_open	./libroutermanager/audio.c	/^gpointer audio_open(void)$/;"	f
audio_open	./libroutermanager/libfaxophone/faxophone.h	/^	gpointer (*audio_open)(void);$/;"	m	struct:session_handlers
audio_output	./libroutermanager/libfaxophone/faxophone.h	/^	gsize (*audio_output)(gpointer audio, guchar *buf, gsize len);$/;"	m	struct:session_handlers
audio_output_combobox	./roger/settings.c	/^	GtkWidget *audio_output_combobox;$/;"	m	struct:settings	file:
audio_plugin_combobox	./roger/settings.c	/^	GtkWidget *audio_plugin_combobox;$/;"	m	struct:settings	file:
audio_plugin_combobox_changed_cb	./roger/settings.c	/^void audio_plugin_combobox_changed_cb(GtkComboBox *box, gpointer user_data) {$/;"	f
audio_priv	./libroutermanager/voxplay.c	/^	gpointer audio_priv;$/;"	m	struct:vox_playback	file:
audio_read	./libroutermanager/audio.c	/^gsize audio_read(gpointer audio_priv, guchar *data, gsize size)$/;"	f
audio_set_default	./libroutermanager/audio.c	/^void audio_set_default(gchar *name)$/;"	f
audio_write	./libroutermanager/audio.c	/^gsize audio_write(gpointer audio_priv, guchar *data, gsize size)$/;"	f
auth	./libroutermanager/network.h	/^	SoupAuth *auth;$/;"	m	struct:auth_data
auth_code_data	./roger/plugins/google/google.c	/^struct auth_code_data {$/;"	s	file:
auth_code_entry_changed_cb	./roger/plugins/google/google.c	/^static void auth_code_entry_changed_cb(GtkEditable *entry, gpointer data)$/;"	f	file:
auth_data	./libroutermanager/network.h	/^struct auth_data {$/;"	s
auth_response_callback	./roger/application.c	/^static void auth_response_callback(GtkDialog *dialog, gint response_id, gpointer user_data)$/;"	f	file:
auth_uri	./roger/plugins/google/google.c	/^	const gchar *auth_uri;$/;"	m	struct:auth_code_data	file:
auth_uri_link_button_clicked_cb	./roger/plugins/google/google.c	/^static void auth_uri_link_button_clicked_cb(GtkButton *button, gpointer data)$/;"	f	file:
authenticate	./libroutermanager/appobject.h	/^	void (*authenticate)(struct auth_data *auth_data);$/;"	m	struct:_AppObjectClass
authorizer	./roger/plugins/google/google.c	/^static GDataOAuth2Authorizer *authorizer = NULL;$/;"	v	file:
back_button	./roger/assistant.c	/^	GtkWidget *back_button;$/;"	m	struct:assistant	file:
back_button_clicked_cb	./roger/assistant.c	/^void back_button_clicked_cb(GtkWidget *next, gpointer user_data)$/;"	f
bad_rows	./libroutermanager/libfaxophone/fax.h	/^	gint bad_rows;$/;"	m	struct:fax_status
begin_print_cb	./roger/print.c	/^static void begin_print_cb(GtkPrintOperation *operation, GtkPrintContext *context, gpointer user_data)$/;"	f	file:
big_mask	./libroutermanager/plugins/portaudio/portaudio.c	/^	long big_mask;$/;"	m	struct:pa_util_ring_buffer	file:
bit_inverse	./libroutermanager/libfaxophone/isdn-convert.h	/^static inline guchar bit_inverse(guchar chr)$/;"	f
bitrate	./libroutermanager/libfaxophone/fax.h	/^	gint bitrate;$/;"	m	struct:fax_status
box	./roger/phone.h	/^	GtkWidget *box;$/;"	m	struct:phone_state
box_id	./libroutermanager/router.h	/^	gint box_id;$/;"	m	struct:router_info
buffer	./libroutermanager/libfaxophone/faxophone.h	/^	short buffer[RECORDING_BUFSIZE];$/;"	m	struct:record_channel
buffer	./libroutermanager/plugins/portaudio/portaudio.c	/^	char *buffer;$/;"	m	struct:pa_util_ring_buffer	file:
buffer_size	./libroutermanager/plugins/portaudio/portaudio.c	/^	long buffer_size;$/;"	m	struct:pa_util_ring_buffer	file:
buffers	./libroutermanager/libfaxophone/faxophone.h	/^	int buffers;$/;"	m	struct:capi_connection
bytes_per_frame	./libroutermanager/plugins/portaudio/portaudio.c	/^	int bytes_per_frame;$/;"	m	struct:port_private	file:
bytes_received	./libroutermanager/libfaxophone/fax.h	/^	gint bytes_received;$/;"	m	struct:fax_status
bytes_sent	./libroutermanager/libfaxophone/fax.h	/^	gint bytes_sent;$/;"	m	struct:fax_status
bytes_total	./libroutermanager/libfaxophone/fax.h	/^	gint bytes_total;$/;"	m	struct:fax_status
call	./libroutermanager/call.h	/^struct call {$/;"	s
call	./roger-cli/main_cli.c	/^static gboolean call = FALSE;$/;"	v	file:
call_add	./libroutermanager/call.c	/^GSList *call_add(GSList *journal, gint type, const gchar *date_time, const gchar *remote_name, const gchar *remote_number, const gchar *local_name, const gchar *local_number, const gchar *duration, gpointer priv)$/;"	f
call_by_call_entry	./libroutermanager/call.h	/^struct call_by_call_entry {$/;"	s
call_by_call_prefix_length	./libroutermanager/call.c	/^gint call_by_call_prefix_length(const gchar *number)$/;"	f
call_by_call_table	./libroutermanager/call.c	/^struct call_by_call_entry call_by_call_table[] = {$/;"	v	typeref:struct:call_by_call_entry
call_canonize_number	./libroutermanager/call.c	/^gchar *call_canonize_number(const gchar *number)$/;"	f
call_format_number	./libroutermanager/call.c	/^gchar *call_format_number(struct profile *profile, const gchar *number, enum number_format output_format)$/;"	f
call_frame	./roger/phone.h	/^	GtkWidget *call_frame;$/;"	m	struct:phone_state
call_free	./libroutermanager/call.c	/^void call_free(gpointer data)$/;"	f
call_full_number	./libroutermanager/call.c	/^gchar *call_full_number(const gchar *number, gboolean country_code_prefix)$/;"	f
call_scramble_number	./libroutermanager/call.c	/^gchar *call_scramble_number(const gchar *number)$/;"	f
call_sort_by_date	./libroutermanager/call.c	/^gint call_sort_by_date(gconstpointer a, gconstpointer b)$/;"	f
callmonitor_connect	./libroutermanager/plugins/callmonitor/callmonitor.c	/^gboolean callmonitor_connect(gpointer user_data)$/;"	f
callmonitor_convert	./libroutermanager/plugins/callmonitor/callmonitor.c	/^static inline void callmonitor_convert(gchar *text)$/;"	f	file:
callmonitor_disconnect	./libroutermanager/plugins/callmonitor/callmonitor.c	/^gboolean callmonitor_disconnect(gpointer user_data)$/;"	f
callmonitor_io_cb	./libroutermanager/plugins/callmonitor/callmonitor.c	/^gboolean callmonitor_io_cb(GIOChannel *source, GIOCondition condition, gpointer data)$/;"	f
cancel	./libroutermanager/voxplay.c	/^	GCancellable *cancel;$/;"	m	struct:vox_playback	file:
cancel_button	./roger/contacts.c	/^	GtkWidget *cancel_button;$/;"	m	struct:contacts	file:
capi_call	./libroutermanager/libfaxophone/faxophone.c	/^struct capi_connection *capi_call($/;"	f
capi_close	./libroutermanager/libfaxophone/faxophone.c	/^static int capi_close(void)$/;"	f	file:
capi_confirmation	./libroutermanager/libfaxophone/faxophone.c	/^static void capi_confirmation(_cmsg capi_message)$/;"	f	file:
capi_connection	./libroutermanager/libfaxophone/faxophone.h	/^struct capi_connection {$/;"	s
capi_connection_established_cb	./roger-cli/main_cli.c	/^static void capi_connection_established_cb(AppObject *object, struct capi_connection *connection, gpointer user_data)$/;"	f	file:
capi_connection_established_cb	./roger/phone.c	/^static void capi_connection_established_cb(AppObject *object, struct capi_connection *connection, gpointer user_data)$/;"	f	file:
capi_connection_set_type	./libroutermanager/libfaxophone/faxophone.c	/^static int capi_connection_set_type(struct capi_connection *connection, int type)$/;"	f	file:
capi_connection_status_cb	./roger/phone.c	/^void capi_connection_status_cb(AppObject *object, gint status, struct capi_connection *connection, gpointer user_data)$/;"	f
capi_connection_terminated_cb	./roger-cli/main_cli.c	/^static void capi_connection_terminated_cb(AppObject *object, struct capi_connection *connection, gpointer user_data)$/;"	f	file:
capi_connection_terminated_cb	./roger/phone.c	/^static void capi_connection_terminated_cb(AppObject *object, struct capi_connection *connection, gpointer user_data)$/;"	f	file:
capi_enable_dtmf	./libroutermanager/libfaxophone/faxophone.c	/^static void capi_enable_dtmf(struct capi_connection *connection)$/;"	f	file:
capi_error	./libroutermanager/libfaxophone/faxophone.c	/^static void capi_error(long error)$/;"	f	file:
capi_find_ncci	./libroutermanager/libfaxophone/faxophone.c	/^static struct capi_connection *capi_find_ncci(int ncci)$/;"	f	file:
capi_find_new	./libroutermanager/libfaxophone/faxophone.c	/^static struct capi_connection *capi_find_new(void)$/;"	f	file:
capi_find_plci	./libroutermanager/libfaxophone/faxophone.c	/^static struct capi_connection *capi_find_plci(int plci)$/;"	f	file:
capi_get_dtmf_code	./libroutermanager/libfaxophone/faxophone.c	/^static void capi_get_dtmf_code(struct capi_connection *connection, unsigned char dtmf)$/;"	f	file:
capi_get_free_connection	./libroutermanager/libfaxophone/faxophone.c	/^struct capi_connection *capi_get_free_connection(void)$/;"	f
capi_get_source_no	./libroutermanager/libfaxophone/faxophone.c	/^static void capi_get_source_no(_cmsg *cmsg, char number[256])$/;"	f	file:
capi_get_target_no	./libroutermanager/libfaxophone/faxophone.c	/^static void capi_get_target_no(_cmsg *cmsg, char number[256])$/;"	f	file:
capi_hangup	./libroutermanager/libfaxophone/faxophone.c	/^void capi_hangup(struct capi_connection *connection)$/;"	f
capi_indication	./libroutermanager/libfaxophone/faxophone.c	/^static int capi_indication(_cmsg capi_message)$/;"	f	file:
capi_init	./libroutermanager/libfaxophone/faxophone.c	/^static int capi_init(int controller)$/;"	f	file:
capi_loop	./libroutermanager/libfaxophone/faxophone.c	/^static gpointer capi_loop(void *user_data)$/;"	f	file:
capi_pickup	./libroutermanager/libfaxophone/faxophone.c	/^int capi_pickup(struct capi_connection *connection, int type)$/;"	f
capi_profile	./libroutermanager/libfaxophone/faxophone.h	/^typedef struct capi_profile {$/;"	s
capi_profile	./libroutermanager/libfaxophone/faxophone.h	/^} capi_profile;$/;"	t	typeref:struct:capi_profile
capi_resp_connection	./libroutermanager/libfaxophone/faxophone.c	/^static void capi_resp_connection(int plci, unsigned int ignore)$/;"	f	file:
capi_send_display_message	./libroutermanager/libfaxophone/faxophone.c	/^void capi_send_display_message(struct capi_connection *connection, char *text)$/;"	f
capi_send_dtmf_code	./libroutermanager/libfaxophone/faxophone.c	/^void capi_send_dtmf_code(struct capi_connection *connection, unsigned char dtmf)$/;"	f
capi_set_free	./libroutermanager/libfaxophone/faxophone.c	/^static int capi_set_free(struct capi_connection *connection)$/;"	f	file:
capi_thread	./libroutermanager/libfaxophone/faxophone.c	/^static GThread *capi_thread = NULL;$/;"	v	file:
channel	./libroutermanager/plugins/callmonitor/callmonitor.c	/^	GIOChannel *channel;$/;"	m	struct:__anon9	file:
char_width	./roger/print.c	/^	gdouble char_width;$/;"	m	struct:__anon26	file:
check_monospace	./roger/print.c	/^static gboolean check_monospace(PangoContext *pc, PangoFontDescription *desc)$/;"	f	file:
child	./libroutermanager/xml.h	/^	struct xml_node *child;$/;"	m	struct:xml_node	typeref:struct:xml_node::xml_node
child_frame	./roger/phone.h	/^	GtkWidget *child_frame;$/;"	m	struct:phone_state
chr	./roger/phone.c	/^	gchar chr;$/;"	m	struct:phone_label	file:
city	./libroutermanager/contact.h	/^	gchar *city;$/;"	m	struct:contact
city	./libroutermanager/contact.h	/^	gchar *city;$/;"	m	struct:contact_address
city	./libroutermanager/plugins/reverselookup/reverselookup.h	/^	gchar **city;$/;"	m	struct:lookup
city_entry_changed_cb	./roger/contacts.c	/^void city_entry_changed_cb(GtkWidget *entry, gpointer user_data)$/;"	f
clean	./libroutermanager/libfaxophone/faxophone.h	/^	void (*clean)(struct capi_connection *connection);$/;"	m	struct:capi_connection
clear_journal	./libroutermanager/router.h	/^	gboolean (*clear_journal)(struct profile *profile);$/;"	m	struct:router
clear_journal_activated	./roger/journal.c	/^void clear_journal_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f
close	./libroutermanager/audio.h	/^	gboolean (*close)(gpointer priv);$/;"	m	struct:audio
cmd_line_option_state	./roger/application.c	/^struct cmd_line_option_state {$/;"	s	file:
cnt	./libroutermanager/voxplay.c	/^	gint cnt;$/;"	m	struct:vox_playback	file:
code	./libroutermanager/ftp.h	/^	gint code;$/;"	m	struct:ftp
code	./libroutermanager/libfaxophone/faxophone.h	/^	void (*code)(struct capi_connection *connection, int code);$/;"	m	struct:session_handlers
company	./libroutermanager/contact.h	/^	gchar *company;$/;"	m	struct:contact
company	./roger/plugins/vcard/vcard.c	/^static GString *company = NULL;$/;"	v	file:
compare_or	./libroutermanager/filter.h	/^	gboolean compare_or;$/;"	m	struct:filter
connect	./libroutermanager/net_monitor.h	/^	net_connect_func connect;$/;"	m	struct:net_event
connect_time	./libroutermanager/libfaxophone/faxophone.h	/^	time_t connect_time;$/;"	m	struct:capi_connection
connected	./libroutermanager/libfaxophone/faxophone.h	/^	void (*connected)(struct capi_connection *connection);$/;"	m	struct:session_handlers
connection	./libroutermanager/connection.h	/^struct connection {$/;"	s
connection	./libroutermanager/libfaxophone/fax.h	/^	struct capi_connection *connection;$/;"	m	struct:fax_status	typeref:struct:fax_status::capi_connection
connection	./libroutermanager/libfaxophone/faxophone.h	/^	struct capi_connection connection[CAPI_CONNECTIONS];$/;"	m	struct:session	typeref:struct:session::capi_connection
connection	./roger/phone.h	/^	gpointer connection;$/;"	m	struct:phone_state
connection_add_call	./libroutermanager/connection.c	/^struct connection *connection_add_call(gint id, gint type, const gchar *local_number, const gchar *remote_number)$/;"	f
connection_code	./libroutermanager/fax_phone.c	/^void connection_code(struct capi_connection *connection, gint code)$/;"	f
connection_established	./libroutermanager/appobject.h	/^	void (*connection_established)(struct capi_connection *connection);$/;"	m	struct:_AppObjectClass
connection_established	./libroutermanager/fax_phone.c	/^void connection_established(struct capi_connection *connection)$/;"	f
connection_established_idle	./libroutermanager/fax_phone.c	/^gboolean connection_established_idle(gpointer data)$/;"	f
connection_find_by_id	./libroutermanager/connection.c	/^struct connection *connection_find_by_id(gint id)$/;"	f
connection_find_by_number	./libroutermanager/connection.c	/^struct connection *connection_find_by_number(const gchar *remote_number)$/;"	f
connection_list	./libroutermanager/connection.c	/^static GSList *connection_list = NULL;$/;"	v	file:
connection_notify	./libroutermanager/appobject.h	/^	void (*connection_notify)(struct connection *connection);$/;"	m	struct:_AppObjectClass
connection_remove	./libroutermanager/connection.c	/^void connection_remove(struct connection *connection)$/;"	f
connection_ring	./libroutermanager/fax_phone.c	/^void connection_ring(struct capi_connection *capi_connection)$/;"	f
connection_ring_idle	./libroutermanager/fax_phone.c	/^gboolean connection_ring_idle(gpointer data)$/;"	f
connection_set_type	./libroutermanager/connection.c	/^void connection_set_type(struct connection *connection, gint type)$/;"	f
connection_status	./libroutermanager/appobject.h	/^	void (*connection_status)(gint status, struct capi_connection *connection);$/;"	m	struct:_AppObjectClass
connection_status	./libroutermanager/fax_phone.c	/^void connection_status(struct capi_connection *connection, gint status)$/;"	f
connection_terminated	./libroutermanager/appobject.h	/^	void (*connection_terminated)(struct capi_connection *connection);$/;"	m	struct:_AppObjectClass
connection_terminated	./libroutermanager/fax_phone.c	/^void connection_terminated(struct capi_connection *connection)$/;"	f
connection_terminated_idle	./libroutermanager/fax_phone.c	/^gboolean connection_terminated_idle(gpointer data)$/;"	f
contact	./libroutermanager/contact.h	/^struct contact {$/;"	s
contact_add	./roger/plugins/fritzfon/fritzfon.c	/^static void contact_add(struct profile *profile, xmlnode *node, gint count)$/;"	f	file:
contact_add_address	./roger/contacts.c	/^void contact_add_address(struct contact *contact, gchar *street, gchar *zip, gchar *city)$/;"	f
contact_add_number	./roger/contacts.c	/^void contact_add_number(struct contact *contact, gchar *number)$/;"	f
contact_address	./libroutermanager/contact.h	/^struct contact_address {$/;"	s
contact_copy	./libroutermanager/contact.c	/^void contact_copy(struct contact *src, struct contact *dst)$/;"	f
contact_dup	./libroutermanager/contact.c	/^struct contact *contact_dup(struct contact *src)$/;"	f
contact_editor	./roger/contacts.c	/^void contact_editor(struct contact *contact)$/;"	f
contact_find_by_number	./libroutermanager/contact.c	/^struct contact *contact_find_by_number(gchar *number)$/;"	f
contact_free	./libroutermanager/contact.c	/^void contact_free(struct contact *contact)$/;"	f
contact_menu	./roger/phone.h	/^	GtkWidget *contact_menu;$/;"	m	struct:phone_state
contact_name_compare	./libroutermanager/contact.c	/^gint contact_name_compare(gconstpointer a, gconstpointer b)$/;"	f
contact_process	./libroutermanager/appobject.h	/^	void (*contact_process)(struct contact *contact);$/;"	m	struct:_AppObjectClass
contact_to_xmlnode	./roger/plugins/fritzfon/fritzfon.c	/^static xmlnode *contact_to_xmlnode(struct contact *contact)$/;"	f	file:
contacts	./roger/contacts.c	/^static struct contacts *contacts = NULL;$/;"	v	typeref:struct:contacts	file:
contacts	./roger/contacts.c	/^struct contacts {$/;"	s	file:
contacts	./roger/plugins/evolution/evolution.c	/^static GSList *contacts = NULL;$/;"	v	file:
contacts	./roger/plugins/fritzfon/fritzfon.c	/^static GSList *contacts = NULL;$/;"	v	file:
contacts	./roger/plugins/google/google.c	/^static GSList *contacts = NULL;$/;"	v	file:
contacts	./roger/plugins/osxab/osxab.c	/^static GSList *contacts = NULL;$/;"	v	file:
contacts	./roger/plugins/thunderbird/thunderbird.c	/^static GSList *contacts = NULL;$/;"	v	file:
contacts	./roger/plugins/vcard/vcard.c	/^static GSList *contacts = NULL;$/;"	v	file:
contacts_add_detail	./roger/contacts.c	/^void contacts_add_detail(gchar *detail)$/;"	f
contacts_add_detail_activated	./roger/journal.c	/^void contacts_add_detail_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f
contacts_cancel_button_clicked_cb	./roger/contacts.c	/^void contacts_cancel_button_clicked_cb(GtkComboBox *box, gpointer user_data)$/;"	f
contacts_changed	./libroutermanager/appobject.h	/^	void (*contacts_changed)(void);$/;"	m	struct:_AppObjectClass
contacts_contacts_changed_cb	./roger/contacts.c	/^static void contacts_contacts_changed_cb(AppObject *object, gpointer user_data)$/;"	f	file:
contacts_destroy_child	./roger/contacts.c	/^static void contacts_destroy_child(GtkWidget *widget, gpointer user_data)$/;"	f	file:
contacts_get_selected_contact	./roger/contacts.c	/^static struct contact *contacts_get_selected_contact(void)$/;"	f	file:
contacts_list_box_row_selected_cb	./roger/contacts.c	/^void contacts_list_box_row_selected_cb(GtkListBox *box, GtkListBoxRow *row, gpointer user_data)$/;"	f
contacts_save_button_clicked_cb	./roger/contacts.c	/^void contacts_save_button_clicked_cb(GtkComboBox *box, gpointer user_data)$/;"	f
contacts_set_contact	./roger/contacts.c	/^void contacts_set_contact(struct contacts *contacts, struct contact *contact)$/;"	f
contacts_update_details	./roger/contacts.c	/^static void contacts_update_details(struct contact *contact)$/;"	f	file:
contacts_update_list	./roger/contacts.c	/^static void contacts_update_list(void)$/;"	f	file:
contacts_window_delete_event_cb	./roger/contacts.c	/^gboolean contacts_window_delete_event_cb(GtkWidget *widget, GdkEvent event, gpointer data)$/;"	f
context_manager	./libroutermanager/ssdp.c	/^static GUPnPContextManager *context_manager;$/;"	v	file:
control	./libroutermanager/ftp.h	/^	GIOChannel *control;$/;"	m	struct:ftp
control_frame	./roger/phone.h	/^	GtkWidget *control_frame;$/;"	m	struct:phone_state
controller	./libroutermanager/libfaxophone/faxophone.h	/^	unsigned int controller;$/;"	m	struct:capi_connection
convert_audio_to_isdn	./libroutermanager/libfaxophone/isdn-convert.c	/^void convert_audio_to_isdn(struct capi_connection *connection, unsigned char *in_buf, unsigned int in_buf_len, unsigned char *out_buf, unsigned int *out_buf_len, short *rec_buf)$/;"	f
convert_date_time	./roger/plugins/webjournal/webjournal.c	/^static gchar *convert_date_time(gchar *date_time)$/;"	f	file:
convert_entities	./libroutermanager/gstring.c	/^static gchar *convert_entities(const gchar *inbuf)$/;"	f	file:
convert_fax_to_tiff	./roger-cli/main_cli.c	/^gchar *convert_fax_to_tiff(gchar *file_name)$/;"	f
convert_isdn_to_audio	./libroutermanager/libfaxophone/isdn-convert.c	/^void convert_isdn_to_audio(struct capi_connection *connection, unsigned char *in_buf, unsigned int in_buf_len, unsigned char *out_buf, unsigned int *out_buf_len, short *rec_buf)$/;"	f
convert_to_fax	./roger/fax.c	/^gchar *convert_to_fax(gchar *file_name)$/;"	f
copy_ip_activated	./roger/application.c	/^static void copy_ip_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
copy_number_04_74	./libroutermanager/plugins/fritzbox/firmware-04-74.c	/^gboolean copy_number_04_74(GSList **number_list, const gchar *data, gsize len)$/;"	f
country	./libroutermanager/plugins/areacodes_global/csv.h	/^	gchar *country;$/;"	m	struct:areacode
country_code	./libroutermanager/call.h	/^	gchar *country_code;$/;"	m	struct:call_by_call_entry
country_code_add	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static void country_code_add(xmlnode *node)$/;"	f	file:
country_code_entry	./roger/settings.c	/^	GtkWidget *country_code_entry;$/;"	m	struct:settings	file:
crash	./roger/application.c	/^	gchar *crash;$/;"	m	struct:cmd_line_option_state	file:
crash_create_debugger_file	./roger/crash.c	/^static void crash_create_debugger_file(void)$/;"	f	file:
crash_debug	./roger/crash.c	/^static void crash_debug(unsigned long crash_pid, gchar *exe_image, GString *debug_output)$/;"	f	file:
crash_dialog_show	./roger/crash.c	/^static GtkWidget *crash_dialog_show(const gchar *text, const gchar *name, const gchar *firmware, const gchar *debug_output)$/;"	f	file:
crash_handler	./roger/crash.c	/^static void crash_handler(int sig)$/;"	f	file:
crash_install_handlers	./roger/crash.c	/^void crash_install_handlers(void)$/;"	f
crash_main	./roger/crash.c	/^void crash_main(const char *arg)$/;"	f
crash_save_crash_log	./roger/crash.c	/^static void crash_save_crash_log(GtkButton *button, const gchar *text)$/;"	f	file:
create_child	./roger/phone.h	/^	GtkWidget *(*create_child)(struct phone_state *state, GtkWidget *grid);$/;"	m	struct:phone_device
create_fax_report	./roger/print.c	/^void create_fax_report(struct fax_status *status, const char *report_dir)$/;"	f
create_map	./roger/plugins/thunderbird/thunderbird.c	/^static GHashTable *create_map(GDestroyNotify notify) {$/;"	f	file:
create_menu	./roger/phone.h	/^	GtkWidget *(*create_menu)(struct profile *profile, struct phone_state *state);$/;"	m	struct:phone_device
create_phone	./roger/plugins/fritzfon/fritzfon.c	/^xmlnode *create_phone(char *type, char *number)$/;"	f
create_table_buffer	./libroutermanager/libfaxophone/isdn-convert.c	/^void create_table_buffer(void)$/;"	f
crypt_cfb_blocksize	./libroutermanager/password.c	/^gint crypt_cfb_blocksize = 8;$/;"	v
crypt_cfb_buf	./libroutermanager/password.c	/^static void crypt_cfb_buf(const char key[8], unsigned char *buf, unsigned len, unsigned chunksize, int decrypt)$/;"	f	file:
crypt_cfb_iv	./libroutermanager/password.c	/^guchar crypt_cfb_iv[64];$/;"	v
crypt_cfb_shift	./libroutermanager/password.c	/^static void crypt_cfb_shift(unsigned char *to, const unsigned char *from, unsigned len)$/;"	f	file:
crypt_cfb_xor	./libroutermanager/password.c	/^static void crypt_cfb_xor(unsigned char *to, const unsigned char *from, unsigned len)$/;"	f	file:
crypt_unpack	./libroutermanager/password.c	/^static void crypt_unpack(unsigned char *a)$/;"	f	file:
cstring	./roger/plugins/osxab/osxab.c	/^static char *cstring(CFStringRef s)$/;"	f	file:
csv_areacode_destroy	./libroutermanager/plugins/areacodes_global/csv.c	/^static void csv_areacode_destroy(gpointer data)$/;"	f	file:
csv_data_destroy	./libroutermanager/plugins/areacodes_global/csv.c	/^static void csv_data_destroy(gpointer data)$/;"	f	file:
csv_load_journal	./libroutermanager/csv.c	/^GSList *csv_load_journal(GSList *journal)$/;"	f
csv_parse_data	./libroutermanager/csv.c	/^gpointer csv_parse_data(const gchar *data, const gchar *header, csv_parse_line_func csv_parse_line, gpointer ptr)$/;"	f
csv_parse_fritzbox	./libroutermanager/plugins/fritzbox/csv.c	/^static inline gpointer csv_parse_fritzbox(gpointer ptr, gchar **split)$/;"	f	file:
csv_parse_fritzbox_journal_data	./libroutermanager/plugins/fritzbox/csv.c	/^GSList *csv_parse_fritzbox_journal_data(GSList *list, const gchar *data)$/;"	f
csv_parse_global_areacodes	./libroutermanager/plugins/areacodes_global/csv.c	/^static gpointer csv_parse_global_areacodes(gpointer ptr, gchar **split)$/;"	f	file:
csv_parse_global_areacodes_data	./libroutermanager/plugins/areacodes_global/csv.c	/^GHashTable *csv_parse_global_areacodes_data(gchar *data)$/;"	f
csv_parse_journal_data	./libroutermanager/csv.c	/^GSList *csv_parse_journal_data(GSList *list, const gchar *data)$/;"	f
csv_parse_line_func	./libroutermanager/csv.h	/^typedef gpointer (*csv_parse_line_func)(gpointer ptr, gchar **split);$/;"	t
csv_parse_routermanager	./libroutermanager/csv.c	/^static inline gpointer csv_parse_routermanager(gpointer ptr, gchar **split)$/;"	f	file:
csv_save_journal	./libroutermanager/csv.c	/^gboolean csv_save_journal(GSList *journal)$/;"	f
csv_save_journal_as	./libroutermanager/csv.c	/^gboolean csv_save_journal_as(GSList *journal, gchar *file_name)$/;"	f
csv_trim	./libroutermanager/plugins/areacodes_global/csv.c	/^static gchar *csv_trim(const gchar *str_in)$/;"	f	file:
current	./libroutermanager/xml.c	/^	xmlnode *current;$/;"	m	struct:_xmlnode_parser_data	file:
current_card_data	./roger/plugins/vcard/vcard.c	/^static struct vcard_data *current_card_data = NULL;$/;"	v	typeref:struct:vcard_data	file:
current_cells	./roger/plugins/thunderbird/thunderbird.c	/^static GHashTable *current_cells = NULL;$/;"	v	file:
current_page	./roger/assistant.c	/^	gint current_page;$/;"	m	struct:assistant	file:
current_position	./roger/plugins/vcard/vcard.c	/^static gint current_position = 0;$/;"	v	file:
current_string	./roger/plugins/vcard/vcard.c	/^static GString *current_string = NULL;$/;"	v	file:
data	./libroutermanager/ftp.h	/^	GIOChannel *data;$/;"	m	struct:ftp
data	./libroutermanager/libfaxophone/faxophone.h	/^	void (*data)(struct capi_connection *connection, _cmsg capi_message);$/;"	m	struct:capi_connection
data	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gpointer data;$/;"	m	struct:voice_box
data	./libroutermanager/voxplay.c	/^	gchar *data;$/;"	m	struct:vox_playback	file:
data	./libroutermanager/xml.h	/^	gchar *data;$/;"	m	struct:xml_node
data	./roger/answeringmachine.c	/^	gchar *data;$/;"	m	struct:journal_playback	file:
data	./roger/plugins/vcard/vcard.h	/^	GSList *data;$/;"	m	struct:vcard
data	./roger/roger_gresource.c	/^static const SECTION union { const guint8 data[174877]; const double alignment; void * const ptr;}  roger_resource_data = { {$/;"	m	union:__anon11	file:
data_size	./libroutermanager/xml.h	/^	size_t data_size;$/;"	m	struct:xml_node
date_time	./libroutermanager/call.h	/^	gchar *date_time;$/;"	m	struct:call
date_time_pos	./roger/print.c	/^	gint date_time_pos;$/;"	m	struct:__anon26	file:
day	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guchar day;$/;"	m	struct:voice_data
debug	./roger-cli/main_cli.c	/^static gboolean debug = FALSE;$/;"	v	file:
debug	./roger/application.c	/^	gboolean debug;$/;"	m	struct:cmd_line_option_state	file:
default_table_id	./roger/plugins/thunderbird/thunderbird.c	/^static gint default_table_id = 1;$/;"	v	file:
deinit	./libroutermanager/audio.h	/^	gboolean (*deinit)(void);$/;"	m	struct:audio
delete_entry_activated	./roger/journal.c	/^void delete_entry_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f
delete_fax	./libroutermanager/router.h	/^	gboolean (*delete_fax)(struct profile *profile, const gchar *filename);$/;"	m	struct:router
delete_foreach	./roger/journal.c	/^void delete_foreach(GtkTreeModel *model, GtkTreePath *path, GtkTreeIter *iter, gpointer data)$/;"	f
delete_voice	./libroutermanager/router.h	/^	gboolean (*delete_voice)(struct profile *profile, const gchar *filename);$/;"	m	struct:router
description	./libroutermanager/action.h	/^	gchar *description;$/;"	m	struct:action
description	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^	gchar description[256];$/;"	m	struct:pulse_device_list	file:
details_placeholder_box	./roger/contacts.c	/^	GtkWidget *details_placeholder_box;$/;"	m	struct:contacts	file:
device_proxy_available_cb	./libroutermanager/ssdp.c	/^static void device_proxy_available_cb(GUPnPControlPoint *cp, GUPnPDeviceProxy *proxy)$/;"	f	file:
device_proxy_unavailable_cb	./libroutermanager/ssdp.c	/^static void device_proxy_unavailable_cb(GUPnPControlPoint *cp, GUPnPDeviceProxy *proxy)$/;"	f	file:
dial_clicked_cb	./roger/contacts.c	/^static void dial_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f	file:
dial_number	./libroutermanager/router.h	/^	gboolean (*dial_number)(struct profile *profile, gint port, const gchar *number);$/;"	m	struct:router
dialnumber_activated	./roger/application.c	/^static void dialnumber_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
discard	./roger/phone.h	/^	gboolean discard;$/;"	m	struct:phone_state
disconnect	./libroutermanager/net_monitor.h	/^	net_disconnect_func disconnect;$/;"	m	struct:net_event
disconnected	./libroutermanager/libfaxophone/faxophone.h	/^	void (*disconnected)(struct capi_connection *connection);$/;"	m	struct:session_handlers
do_reverse_lookup	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static gboolean do_reverse_lookup(struct lookup *lookup, gchar *number, gchar **name, gchar **street, gchar **zip, gchar **city)$/;"	f	file:
donate_activated	./roger/application.c	/^static void donate_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
done	./libroutermanager/libfaxophone/fax.h	/^	gboolean done;$/;"	m	struct:fax_status
dragtable	./roger/plugins/webjournal/webjournal.c	/^	gchar *dragtable;$/;"	m	struct:__anon20	file:
draw_page_cb	./roger/print.c	/^static void draw_page_cb(GtkPrintOperation *operation, GtkPrintContext *context, gint nPageNr, gpointer user_data)$/;"	f	file:
dummy	./libroutermanager/appobject.c	/^	gchar dummy;$/;"	m	struct:_AppObjectPrivate	file:
dummy	./libroutermanager/plugins/fritzbox/fritzbox.c	/^	guint dummy;$/;"	m	struct:__anon4	file:
dummy	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^	guint dummy;$/;"	m	struct:__anon3	file:
duration	./libroutermanager/call.h	/^	gchar *duration;$/;"	m	struct:call
duration	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guint duration;$/;"	m	struct:voice_data
duration_pos	./roger/print.c	/^	gint duration_pos;$/;"	m	struct:__anon26	file:
e_client	./roger/plugins/evolution/evolution.c	/^static EClient *e_client = NULL;$/;"	v	file:
early_b3	./libroutermanager/libfaxophone/faxophone.h	/^	int early_b3;$/;"	m	struct:capi_connection
ebook_combobox_changed_cb	./roger/plugins/evolution/evolution.c	/^void ebook_combobox_changed_cb(GtkComboBox *widget, gpointer user_data)$/;"	f
ebook_data	./roger/plugins/evolution/ebook-sources.h	/^struct ebook_data {$/;"	s
ebook_objects_changed_cb	./roger/plugins/evolution/evolution.c	/^void ebook_objects_changed_cb(EBookClientView *view, const GSList *ids, gpointer user_data)$/;"	f
ebook_read_book	./roger/plugins/evolution/evolution.c	/^gboolean ebook_read_book(void)$/;"	f
ebook_read_book_sync	./roger/plugins/evolution/evolution.c	/^gboolean ebook_read_book_sync(void)$/;"	f
ebook_read_cb	./roger/plugins/evolution/evolution.c	/^static void ebook_read_cb(GObject *source, GAsyncResult *res, gpointer user_data)$/;"	f	file:
ebook_read_data	./roger/plugins/evolution/evolution.c	/^void ebook_read_data(EClient *e_client)$/;"	f
ebook_settings	./roger/plugins/evolution/evolution.c	/^static GSettings *ebook_settings = NULL;$/;"	v	file:
echo_cancellation	./libroutermanager/plugins/portaudio/portaudio.c	/^int echo_cancellation(struct port_private *private, short *input_buffer, int samples)$/;"	f
echo_fifo	./libroutermanager/plugins/portaudio/portaudio.c	/^	pa_util_ring_buffer echo_fifo;$/;"	m	struct:port_private	file:
echo_state	./libroutermanager/plugins/portaudio/portaudio.c	/^	SpeexEchoState *echo_state;$/;"	m	struct:port_private	file:
ecm	./libroutermanager/libfaxophone/fax.h	/^	gchar ecm;$/;"	m	struct:fax_status
edit_button	./roger/contacts.c	/^	GtkWidget *edit_button;$/;"	m	struct:contacts	file:
edit_button_clicked_cb	./roger/contacts.c	/^void edit_button_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f
effect_thread_stop	./libroutermanager/libfaxophone/ringtone.c	/^static gboolean effect_thread_stop = TRUE;$/;"	v	file:
emit_authenticate	./libroutermanager/appobject-emit.c	/^void emit_authenticate(struct auth_data *auth_data)$/;"	f
emit_connection_established	./libroutermanager/appobject-emit.c	/^void emit_connection_established(struct capi_connection *connection)$/;"	f
emit_connection_notify	./libroutermanager/appobject-emit.c	/^void emit_connection_notify(struct connection *connection)$/;"	f
emit_connection_status	./libroutermanager/appobject-emit.c	/^void emit_connection_status(gint status, struct capi_connection *connection)$/;"	f
emit_connection_terminated	./libroutermanager/appobject-emit.c	/^void emit_connection_terminated(struct capi_connection *connection)$/;"	f
emit_contact_process	./libroutermanager/appobject-emit.c	/^void emit_contact_process(struct contact *contact)$/;"	f
emit_contacts_changed	./libroutermanager/appobject-emit.c	/^void emit_contacts_changed(void)$/;"	f
emit_fax_process	./libroutermanager/appobject-emit.c	/^void emit_fax_process(const gchar *filename)$/;"	f
emit_journal_loaded	./libroutermanager/appobject-emit.c	/^void emit_journal_loaded(GSList *journal)$/;"	f
emit_message	./libroutermanager/appobject-emit.c	/^void emit_message(gchar *title, gchar *message)$/;"	f
encoding	./libroutermanager/libfaxophone/fax.h	/^	gint encoding;$/;"	m	struct:fax_status
end_print_cb	./roger/print.c	/^static void end_print_cb(GtkPrintOperation *operation, GtkPrintContext *context, gpointer user_data)$/;"	f	file:
engine	./libroutermanager/plugins.c	/^PeasEngine *engine = NULL;$/;"	v
entities_iso8859_1	./libroutermanager/gstring.c	/^static gchar *entities_iso8859_1[] = {$/;"	v	file:
entities_special	./libroutermanager/gstring.c	/^static gchar *entities_special[] = {$/;"	v	file:
entities_symbols	./libroutermanager/gstring.c	/^static gchar *entities_symbols[] = {$/;"	v	file:
entities_xml	./libroutermanager/gstring.c	/^static gchar *entities_xml[] = {$/;"	v	file:
entity_unicode_special	./libroutermanager/gstring.c	/^static guint entity_unicode_special[] = {$/;"	v	file:
entity_unicode_symbols	./libroutermanager/gstring.c	/^static guint entity_unicode_symbols[] = {$/;"	v	file:
entity_unicode_xml	./libroutermanager/gstring.c	/^static guint entity_unicode_xml[] = {$/;"	v	file:
entries	./roger-cli/main_cli.c	/^static GOptionEntry entries[] = {$/;"	v	file:
entry	./libroutermanager/filter.h	/^	gchar *entry;$/;"	m	struct:filter_rule
entry	./roger/plugins/google/google.c	/^	GtkWidget *entry;$/;"	m	struct:auth_code_data	file:
entry	./roger/plugins/vcard/vcard.h	/^	gchar *entry;$/;"	m	struct:vcard_data
entry	./roger/plugins/webjournal/webjournal.c	/^	gchar *entry;$/;"	m	struct:__anon20	file:
entry_changed_cb	./roger/settings.c	/^static void entry_changed_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
entry_icon_released	./roger/journal.c	/^void entry_icon_released(GtkEntry *entry, GtkEntryIconPosition icon_pos, GdkEvent *event, gpointer user_data)$/;"	f
error	./libroutermanager/xml.c	/^	gboolean error;$/;"	m	struct:_xmlnode_parser_data	file:
error_code	./libroutermanager/libfaxophone/fax.h	/^	gint error_code;$/;"	m	struct:fax_status
event	./libroutermanager/fax_spooler.c	/^	GFileMonitorEvent event;$/;"	m	struct:event_translate	file:
event_to_text	./libroutermanager/fax_spooler.c	/^static const char *event_to_text(GFileMonitorEvent event)$/;"	f	file:
event_translate	./libroutermanager/fax_spooler.c	/^struct event_translate {$/;"	s	file:
event_translation_table	./libroutermanager/fax_spooler.c	/^struct event_translate event_translation_table[] = {$/;"	v	typeref:struct:event_translate
evolution_book	./roger/plugins/evolution/evolution.c	/^struct address_book evolution_book = {$/;"	v	typeref:struct:address_book
evolution_get_active_book_name	./roger/plugins/evolution/evolution.c	/^gchar *evolution_get_active_book_name(void)$/;"	f
evolution_get_contacts	./roger/plugins/evolution/evolution.c	/^GSList *evolution_get_contacts(void)$/;"	f
evolution_reload	./roger/plugins/evolution/evolution.c	/^gboolean evolution_reload(void)$/;"	f
evolution_remove_contact	./roger/plugins/evolution/evolution.c	/^gboolean evolution_remove_contact(struct contact *contact)$/;"	f
evolution_save_contact	./roger/plugins/evolution/evolution.c	/^gboolean evolution_save_contact(struct contact *contact)$/;"	f
evolution_set_image	./roger/plugins/evolution/evolution.c	/^static void evolution_set_image(EContact *e_contact, struct contact *contact)$/;"	f	file:
exec	./libroutermanager/action.h	/^	gchar *exec;$/;"	m	struct:action
export_journal_activated	./roger/journal.c	/^void export_journal_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f
exten	./libroutermanager/plugins.c	/^static PeasExtensionSet *exten = NULL;$/;"	v	file:
extract_element	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static gboolean extract_element(gchar **in, xmlNode *a_node, gchar **out)$/;"	f	file:
extract_number_04_74	./libroutermanager/plugins/fritzbox/firmware-04-74.c	/^gboolean extract_number_04_74(GSList **number_list, const gchar *data, gchar *msn_str)$/;"	f
extract_number_05_50	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^gboolean extract_number_05_50(GSList **number_list, const gchar *data, gchar *msn_str)$/;"	f
fax_clean	./libroutermanager/libfaxophone/fax.c	/^void fax_clean(struct capi_connection *connection)$/;"	f
fax_connection_status_cb	./roger-cli/main_cli.c	/^void fax_connection_status_cb(AppObject *object, gint status, struct capi_connection *connection, gpointer user_data)$/;"	f
fax_controller_combobox	./roger/settings.c	/^	GtkWidget *fax_controller_combobox;$/;"	m	struct:settings	file:
fax_dial	./libroutermanager/fax_phone.c	/^struct capi_connection *fax_dial(gchar *tiff, const gchar *trg_no, gboolean suppress)$/;"	f
fax_ecm_switch	./roger/settings.c	/^	GtkWidget *fax_ecm_switch;$/;"	m	struct:settings	file:
fax_header_entry	./roger/settings.c	/^	GtkWidget *fax_header_entry;$/;"	m	struct:settings	file:
fax_ident_entry	./roger/settings.c	/^	GtkWidget *fax_ident_entry;$/;"	m	struct:settings	file:
fax_information_frame	./roger/fax.c	/^GtkWidget *fax_information_frame(struct phone_state *state)$/;"	f
fax_msn_combobox	./roger/settings.c	/^	GtkWidget *fax_msn_combobox;$/;"	m	struct:settings	file:
fax_phase	./libroutermanager/libfaxophone/fax.h	/^enum fax_phase {$/;"	g
fax_printer_init	./libroutermanager/fax_server.c	/^gboolean fax_printer_init(GError **error)$/;"	f
fax_printer_init	./libroutermanager/fax_spooler.c	/^gboolean fax_printer_init(GError **error)$/;"	f
fax_process	./libroutermanager/appobject.h	/^	void (*fax_process)(const gchar *filename);$/;"	m	struct:_AppObjectClass
fax_process_cb	./roger/fax.c	/^void fax_process_cb(GtkWidget *widget, gchar *file_name, gpointer user_data)$/;"	f
fax_process_init	./roger/fax.c	/^void fax_process_init(void)$/;"	f
fax_receive	./libroutermanager/libfaxophone/fax.c	/^gint fax_receive(struct capi_connection *connection, const gchar *tiff_file, gint modem, gint ecm, const gchar *src_no, gchar *trg_no, gint manual_hookup)$/;"	f
fax_report_directory_chooser	./roger/settings.c	/^	GtkWidget *fax_report_directory_chooser;$/;"	m	struct:settings	file:
fax_report_directory_chooser_file_set_cb	./roger/settings.c	/^void fax_report_directory_chooser_file_set_cb(GtkFileChooserButton *chooser, gpointer user_data)$/;"	f
fax_report_switch	./roger/settings.c	/^	GtkWidget *fax_report_switch;$/;"	m	struct:settings	file:
fax_report_switch_activate_cb	./roger/settings.c	/^void fax_report_switch_activate_cb(GtkSwitch *report_switch, gboolean state, gpointer user_data)$/;"	f
fax_resolution_combobox	./roger/settings.c	/^	GtkWidget *fax_resolution_combobox;$/;"	m	struct:settings	file:
fax_send	./libroutermanager/libfaxophone/fax.c	/^struct capi_connection *fax_send(gchar *tiff_file, gint modem, gint ecm, gint controller, gint cip, const gchar *src_no, const gchar *trg_no, const gchar *lsi, const gchar *local_header_info, gint call_anonymous)$/;"	f
fax_service_combobox	./roger/settings.c	/^	GtkWidget *fax_service_combobox;$/;"	m	struct:settings	file:
fax_set_log_level	./libroutermanager/libfaxophone/fax.c	/^void fax_set_log_level(gint level)$/;"	f
fax_setup_file_monitor	./libroutermanager/fax_spooler.c	/^static gboolean fax_setup_file_monitor(const gchar *dir_name, GError **error)$/;"	f	file:
fax_spandsp_workaround	./libroutermanager/libfaxophone/fax.c	/^void fax_spandsp_workaround(struct capi_connection *connection)$/;"	f
fax_spooler_new_file_cb	./libroutermanager/fax_spooler.c	/^static void fax_spooler_new_file_cb(GFileMonitor *monitor, GFile *file, GFile *other_file, GFileMonitorEvent event_type, gpointer user_data)$/;"	f	file:
fax_state	./libroutermanager/libfaxophone/fax.h	/^	fax_state_t *fax_state;$/;"	m	struct:fax_status
fax_status	./libroutermanager/libfaxophone/fax.h	/^struct fax_status {$/;"	s
fax_transfer	./libroutermanager/libfaxophone/fax.c	/^void fax_transfer(struct capi_connection *connection, _cmsg capi_message)$/;"	f
fax_ui	./roger/fax.h	/^struct fax_ui {$/;"	s
fax_update_ui	./roger/fax.c	/^gboolean fax_update_ui(gpointer user_data)$/;"	f
fax_window_clear	./roger/fax.c	/^void fax_window_clear(gpointer priv)$/;"	f
faxophone_close	./libroutermanager/libfaxophone/faxophone.c	/^int faxophone_close(int force)$/;"	f
faxophone_connect	./libroutermanager/fax_phone.c	/^gboolean faxophone_connect(gpointer user_data)$/;"	f
faxophone_disconnect	./libroutermanager/fax_phone.c	/^gboolean faxophone_disconnect(gpointer user_data)$/;"	f
faxophone_get_session	./libroutermanager/libfaxophone/faxophone.c	/^struct session *faxophone_get_session(void)$/;"	f
faxophone_init	./libroutermanager/libfaxophone/faxophone.c	/^struct session *faxophone_init(struct session_handlers *handlers, const char *host, gint controller)$/;"	f
faxophone_quit	./libroutermanager/libfaxophone/faxophone.c	/^static unsigned char faxophone_quit = 1;$/;"	v	file:
faxophone_reconnect	./libroutermanager/libfaxophone/faxophone.c	/^static void faxophone_reconnect(struct session *session)$/;"	f	file:
faxophone_setup	./libroutermanager/fax_phone.c	/^void faxophone_setup(void)$/;"	f
file	./libroutermanager/filter.h	/^	gchar *file;$/;"	m	struct:filter
file	./libroutermanager/libfaxophone/faxophone.h	/^	SNDFILE *file;$/;"	m	struct:recorder
file	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gchar file[32];$/;"	m	struct:voice_data
file	./roger/fax.h	/^	gchar *file;$/;"	m	struct:fax_ui
file_load	./libroutermanager/file.c	/^gchar *file_load(gchar *name, gsize *size)$/;"	f
file_monitor	./roger/plugins/vcard/vcard.c	/^static GFileMonitor *file_monitor = NULL;$/;"	v	file:
file_name	./libroutermanager/libfaxophone/faxophone.h	/^	char *file_name;$/;"	m	struct:recorder
file_name	./roger-cli/main_cli.c	/^static gchar *file_name = NULL;$/;"	v	file:
file_save	./libroutermanager/file.c	/^void file_save(gchar *name, const gchar *data, gsize len)$/;"	f
filename_button_clicked_cb	./roger/plugins/thunderbird/thunderbird.c	/^void filename_button_clicked_cb(GtkButton *button, gpointer user_data)$/;"	f
filename_button_clicked_cb	./roger/plugins/vcard/vcard.c	/^void filename_button_clicked_cb(GtkButton *button, gpointer user_data)$/;"	f
filename_button_clicked_cb	./roger/plugins/webjournal/webjournal.c	/^void filename_button_clicked_cb(GtkButton *button, gpointer user_data)$/;"	f
filter	./libroutermanager/filter.h	/^struct filter {$/;"	s
filter	./roger/phone.h	/^	const gchar *filter;$/;"	m	struct:phone_state
filter_add	./libroutermanager/filter.c	/^void filter_add(struct filter *filter)$/;"	f
filter_add_button_clicked_cb	./roger/settings.c	/^void filter_add_button_clicked_cb(GtkWidget *widget, gpointer data)$/;"	f
filter_box_changed	./roger/journal.c	/^void filter_box_changed(GtkComboBox *box, gpointer user_data)$/;"	f
filter_compare	./libroutermanager/filter.c	/^static inline gboolean filter_compare(struct filter_rule *rule, const gchar *compare)$/;"	f	file:
filter_edit_button_clicked_cb	./roger/settings.c	/^void filter_edit_button_clicked_cb(GtkWidget *widget, gpointer data)$/;"	f
filter_free	./libroutermanager/filter.c	/^void filter_free(gpointer data)$/;"	f
filter_get_list	./libroutermanager/filter.c	/^GSList *filter_get_list(void)$/;"	f
filter_init	./libroutermanager/filter.c	/^void filter_init(void)$/;"	f
filter_list	./libroutermanager/filter.c	/^static GSList *filter_list = NULL;$/;"	v	file:
filter_liststore	./roger/settings.c	/^	GtkListStore *filter_liststore;$/;"	m	struct:settings	file:
filter_load	./libroutermanager/filter.c	/^static void filter_load(void)$/;"	f	file:
filter_new	./libroutermanager/filter.c	/^struct filter *filter_new(const gchar *name)$/;"	f
filter_refresh_list	./roger/settings.c	/^void filter_refresh_list(GtkListStore *list_store)$/;"	f
filter_remove	./libroutermanager/filter.c	/^void filter_remove(struct filter *filter)$/;"	f
filter_remove_button_clicked_cb	./roger/settings.c	/^void filter_remove_button_clicked_cb(GtkWidget *widget, gpointer data)$/;"	f
filter_rule	./libroutermanager/filter.h	/^struct filter_rule {$/;"	s
filter_rule_add	./libroutermanager/filter.c	/^void filter_rule_add(struct filter *filter, gint type, gint sub_type, gchar *entry)$/;"	f
filter_rule_match	./libroutermanager/filter.c	/^gboolean filter_rule_match(struct filter *filter, struct call *call)$/;"	f
filter_rules_free	./libroutermanager/filter.c	/^static void filter_rules_free(gpointer data)$/;"	f	file:
filter_save	./libroutermanager/filter.c	/^void filter_save(void)$/;"	f
filter_shutdown	./libroutermanager/filter.c	/^void filter_shutdown(void)$/;"	f
filter_sort_by_name	./libroutermanager/filter.c	/^gint filter_sort_by_name(gconstpointer a, gconstpointer b)$/;"	f
filter_to_data	./libroutermanager/filter.c	/^static inline gchar *filter_to_data(struct filter *filter)$/;"	f	file:
find_button_pressed_cb	./roger/journal.c	/^void find_button_pressed_cb(GtkWidget *widget, gpointer user_data)$/;"	f
find_card_data	./roger/plugins/vcard/vcard.c	/^struct vcard_data *find_card_data(GList *list, gchar *header, gchar *option)$/;"	f
find_map_entry	./roger/plugins/thunderbird/thunderbird.c	/^static inline void *find_map_entry(GHashTable *table, int key) {$/;"	f	file:
find_thunderbird_dir	./roger/plugins/thunderbird/thunderbird.c	/^static gchar *find_thunderbird_dir(void) {$/;"	f	file:
finish_post	./roger/assistant.c	/^static gboolean finish_post(struct assistant *assistant)$/;"	f	file:
finish_pre	./roger/assistant.c	/^static void finish_pre(struct assistant *assistant)$/;"	f	file:
first_name	./roger/plugins/vcard/vcard.c	/^static GString *first_name = NULL;$/;"	v	file:
flags	./libroutermanager/action.h	/^	guchar flags;$/;"	m	struct:action
font_width	./roger/print.c	/^	gdouble font_width;$/;"	m	struct:__anon26	file:
footer	./roger/plugins/webjournal/webjournal.c	/^	gchar *footer;$/;"	m	struct:__anon20	file:
forum_activated	./roger/application.c	/^static void forum_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
fraction	./libroutermanager/voxplay.c	/^	gint fraction;$/;"	m	struct:vox_playback	file:
fraction	./roger/answeringmachine.c	/^	gint fraction;$/;"	m	struct:journal_playback	file:
free_auth_data	./libroutermanager/network.c	/^static void free_auth_data(struct auth_data *auth_data)$/;"	f	file:
free_ebook_data	./roger/plugins/evolution/evolution.c	/^static void free_ebook_data(struct ebook_data *ebook_data)$/;"	f	file:
free_ebook_list	./roger/plugins/evolution/evolution.c	/^void free_ebook_list(GList *ebook_list)$/;"	f
free_phone_list	./libroutermanager/router.c	/^static void free_phone_list(gpointer data)$/;"	f	file:
fritzbox	./libroutermanager/plugins/fritzbox/fritzbox.c	/^static struct router fritzbox = {$/;"	v	typeref:struct:router	file:
fritzbox_check_login_blocked	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^static gboolean fritzbox_check_login_blocked(const gchar *data, struct profile *profile)$/;"	f	file:
fritzbox_clear_journal	./libroutermanager/plugins/fritzbox/fritzbox.c	/^gboolean fritzbox_clear_journal(struct profile *profile)$/;"	f
fritzbox_clear_journal_04_74	./libroutermanager/plugins/fritzbox/firmware-04-74.c	/^gboolean fritzbox_clear_journal_04_74(struct profile *profile)$/;"	f
fritzbox_clear_journal_05_50	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^gboolean fritzbox_clear_journal_05_50(struct profile *profile)$/;"	f
fritzbox_delete_fax	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gboolean fritzbox_delete_fax(struct profile *profile, const gchar *filename)$/;"	f
fritzbox_delete_voice	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gboolean fritzbox_delete_voice(struct profile *profile, const gchar *filename)$/;"	f
fritzbox_detect_controller_05_50	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^static void fritzbox_detect_controller_05_50(struct profile *profile, const gchar *data)$/;"	f	file:
fritzbox_detect_controller_06_35	./libroutermanager/plugins/fritzbox/firmware-06-35.c	/^static void fritzbox_detect_controller_06_35(struct profile *profile, const gchar *data)$/;"	f	file:
fritzbox_dial_number	./libroutermanager/plugins/fritzbox/fritzbox.c	/^gboolean fritzbox_dial_number(struct profile *profile, gint port, const gchar *number)$/;"	f
fritzbox_dial_number_04_00	./libroutermanager/plugins/fritzbox/firmware-04-00.c	/^gboolean fritzbox_dial_number_04_00(struct profile *profile, gint port, const gchar *number)$/;"	f
fritzbox_dial_number_06_35	./libroutermanager/plugins/fritzbox/firmware-06-35.c	/^gboolean fritzbox_dial_number_06_35(struct profile *profile, gint port, const gchar *number)$/;"	f
fritzbox_extract_dect_05_50	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^static void fritzbox_extract_dect_05_50(struct profile *profile, const gchar *data)$/;"	f	file:
fritzbox_extract_numbers_04_74	./libroutermanager/plugins/fritzbox/firmware-04-74.c	/^void fritzbox_extract_numbers_04_74(struct profile *profile, const gchar *data)$/;"	f
fritzbox_extract_phone_names_06_35	./libroutermanager/plugins/fritzbox/firmware-06-35.c	/^void fritzbox_extract_phone_names_06_35(struct profile *profile, const gchar *data, gsize read)$/;"	f
fritzbox_find_phone_port	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gint fritzbox_find_phone_port(gint dial_port)$/;"	f
fritzbox_get_dial_port	./libroutermanager/plugins/fritzbox/firmware-06-35.c	/^static gint fritzbox_get_dial_port(struct profile *profile)$/;"	f	file:
fritzbox_get_dialport	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gint fritzbox_get_dialport(gint type)$/;"	f
fritzbox_get_fax_information_05_50	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^gboolean fritzbox_get_fax_information_05_50(struct profile *profile)$/;"	f
fritzbox_get_fax_information_06_00	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^gboolean fritzbox_get_fax_information_06_00(struct profile *profile)$/;"	f
fritzbox_get_fax_information_06_35	./libroutermanager/plugins/fritzbox/firmware-06-35.c	/^gboolean fritzbox_get_fax_information_06_35(struct profile *profile)$/;"	f
fritzbox_get_ip	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gchar *fritzbox_get_ip(struct profile *profile)$/;"	f
fritzbox_get_settings	./libroutermanager/plugins/fritzbox/fritzbox.c	/^gboolean fritzbox_get_settings(struct profile *profile)$/;"	f
fritzbox_get_settings_04_74	./libroutermanager/plugins/fritzbox/firmware-04-74.c	/^gboolean fritzbox_get_settings_04_74(struct profile *profile)$/;"	f
fritzbox_get_settings_05_50	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^gboolean fritzbox_get_settings_05_50(struct profile *profile)$/;"	f
fritzbox_get_settings_06_35	./libroutermanager/plugins/fritzbox/firmware-06-35.c	/^gboolean fritzbox_get_settings_06_35(struct profile *profile)$/;"	f
fritzbox_get_settings_query	./libroutermanager/plugins/fritzbox/firmware-query.c	/^gboolean fritzbox_get_settings_query(struct profile *profile)$/;"	f
fritzbox_hangup	./libroutermanager/plugins/fritzbox/fritzbox.c	/^gboolean fritzbox_hangup(struct profile *profile, gint port, const gchar *number)$/;"	f
fritzbox_hangup_04_00	./libroutermanager/plugins/fritzbox/firmware-04-00.c	/^gboolean fritzbox_hangup_04_00(struct profile *profile, gint port, const gchar *number)$/;"	f
fritzbox_hangup_06_35	./libroutermanager/plugins/fritzbox/firmware-06-35.c	/^gboolean fritzbox_hangup_06_35(struct profile *profile, gint port, const gchar *number)$/;"	f
fritzbox_journal_04_74_cb	./libroutermanager/plugins/fritzbox/firmware-04-74.c	/^void fritzbox_journal_04_74_cb(SoupSession *session, SoupMessage *msg, gpointer user_data)$/;"	f
fritzbox_journal_05_50_cb	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^void fritzbox_journal_05_50_cb(SoupSession *session, SoupMessage *msg, gpointer user_data)$/;"	f
fritzbox_load_fax	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gchar *fritzbox_load_fax(struct profile *profile, const gchar *filename, gsize *len)$/;"	f
fritzbox_load_faxbox	./libroutermanager/plugins/fritzbox/firmware-common.c	/^GSList *fritzbox_load_faxbox(GSList *journal)$/;"	f
fritzbox_load_journal	./libroutermanager/plugins/fritzbox/fritzbox.c	/^gboolean fritzbox_load_journal(struct profile *profile, gchar **data_ptr)$/;"	f
fritzbox_load_journal_04_74	./libroutermanager/plugins/fritzbox/firmware-04-74.c	/^gboolean fritzbox_load_journal_04_74(struct profile *profile, gchar **data_ptr)$/;"	f
fritzbox_load_journal_05_50	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^gboolean fritzbox_load_journal_05_50(struct profile *profile, gchar **data_ptr)$/;"	f
fritzbox_load_voice	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gchar *fritzbox_load_voice(struct profile *profile, const gchar *name, gsize *len)$/;"	f
fritzbox_load_voicebox	./libroutermanager/plugins/fritzbox/firmware-common.c	/^GSList *fritzbox_load_voicebox(GSList *journal)$/;"	f
fritzbox_login_04_00	./libroutermanager/plugins/fritzbox/firmware-04-00.c	/^gboolean fritzbox_login_04_00(struct profile *profile)$/;"	f
fritzbox_login_04_74	./libroutermanager/plugins/fritzbox/firmware-04-74.c	/^gboolean fritzbox_login_04_74(struct profile *profile)$/;"	f
fritzbox_login_05_50	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^gboolean fritzbox_login_05_50(struct profile *profile)$/;"	f
fritzbox_logout	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gboolean fritzbox_logout(struct profile *profile, gboolean force)$/;"	f
fritzbox_parse_voice_data	./libroutermanager/plugins/fritzbox/firmware-common.c	/^static GSList *fritzbox_parse_voice_data(GSList *journal, const gchar *data, gsize len)$/;"	f	file:
fritzbox_phone_ports	./libroutermanager/plugins/fritzbox/firmware-common.c	/^struct phone_port fritzbox_phone_ports[PORT_MAX] = {$/;"	v	typeref:struct:phone_port
fritzbox_present	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gboolean fritzbox_present(struct router_info *router_info)$/;"	f
fritzbox_present_04_00	./libroutermanager/plugins/fritzbox/firmware-04-00.c	/^gboolean fritzbox_present_04_00(struct router_info *router_info)$/;"	f
fritzbox_read_msn	./libroutermanager/plugins/fritzbox/firmware-common.c	/^void fritzbox_read_msn(struct profile *profile, const gchar *data)$/;"	f
fritzbox_reconnect	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gboolean fritzbox_reconnect(struct profile *profile)$/;"	f
fritzfon_book	./roger/plugins/fritzfon/fritzfon.c	/^struct address_book fritzfon_book = {$/;"	v	typeref:struct:address_book
fritzfon_book	./roger/plugins/fritzfon/fritzfon.c	/^struct fritzfon_book {$/;"	s	file:
fritzfon_books	./roger/plugins/fritzfon/fritzfon.c	/^static GSList *fritzfon_books = NULL;$/;"	v	file:
fritzfon_combobox_changed_cb	./roger/plugins/fritzfon/fritzfon.c	/^void fritzfon_combobox_changed_cb(GtkComboBox *widget, gpointer user_data)$/;"	f
fritzfon_get_active_book_name	./roger/plugins/fritzfon/fritzfon.c	/^gchar *fritzfon_get_active_book_name(void)$/;"	f
fritzfon_get_books	./roger/plugins/fritzfon/fritzfon.c	/^static gint fritzfon_get_books(void)$/;"	f	file:
fritzfon_get_contacts	./roger/plugins/fritzfon/fritzfon.c	/^GSList *fritzfon_get_contacts(void)$/;"	f
fritzfon_priv	./roger/plugins/fritzfon/fritzfon.c	/^struct fritzfon_priv {$/;"	s	file:
fritzfon_read_book	./roger/plugins/fritzfon/fritzfon.c	/^static gint fritzfon_read_book(void)$/;"	f	file:
fritzfon_reload_contacts	./roger/plugins/fritzfon/fritzfon.c	/^gboolean fritzfon_reload_contacts(void)$/;"	f
fritzfon_remove_contact	./roger/plugins/fritzfon/fritzfon.c	/^gboolean fritzfon_remove_contact(struct contact *contact)$/;"	f
fritzfon_save	./roger/plugins/fritzfon/fritzfon.c	/^gboolean fritzfon_save(void)$/;"	f
fritzfon_save_contact	./roger/plugins/fritzfon/fritzfon.c	/^gboolean fritzfon_save_contact(struct contact *contact)$/;"	f
fritzfon_set_image	./roger/plugins/fritzfon/fritzfon.c	/^void fritzfon_set_image(struct contact *contact)$/;"	f
fritzfon_settings	./roger/plugins/fritzfon/fritzfon.c	/^static GSettings *fritzfon_settings = NULL;$/;"	v	file:
ftp	./libroutermanager/ftp.h	/^struct ftp {$/;"	s
ftp_delete_file	./libroutermanager/ftp.c	/^gboolean ftp_delete_file(struct ftp *client, const gchar *filename)$/;"	f
ftp_get_file	./libroutermanager/ftp.c	/^gchar *ftp_get_file(struct ftp *client, const gchar *file, gsize *len)$/;"	f
ftp_init	./libroutermanager/ftp.c	/^struct ftp *ftp_init(const gchar *server)$/;"	f
ftp_list_dir	./libroutermanager/ftp.c	/^gchar *ftp_list_dir(struct ftp *client, const gchar *dir)$/;"	f
ftp_login	./libroutermanager/ftp.c	/^gboolean ftp_login(struct ftp *client, const gchar *user, const gchar *password)$/;"	f
ftp_login_check_button_clicked_cb	./roger/settings.c	/^void ftp_login_check_button_clicked_cb(GtkButton *button, gpointer user_data)$/;"	f
ftp_open_port	./libroutermanager/ftp.c	/^static GIOChannel *ftp_open_port(gchar *server, gint port)$/;"	f	file:
ftp_passive	./libroutermanager/ftp.c	/^gboolean ftp_passive(struct ftp *client)$/;"	f
ftp_password	./roger/assistant.c	/^	GtkWidget *ftp_password;$/;"	m	struct:assistant	file:
ftp_password_entry	./roger/settings.c	/^	GtkWidget *ftp_password_entry;$/;"	m	struct:settings	file:
ftp_password_entry_changed_cb	./roger/settings.c	/^void ftp_password_entry_changed_cb(GtkEntry *entry, gpointer user_data)$/;"	f
ftp_password_post	./roger/assistant.c	/^static gboolean ftp_password_post(struct assistant *assistant)$/;"	f	file:
ftp_password_pre	./roger/assistant.c	/^static void ftp_password_pre(struct assistant *assistant)$/;"	f	file:
ftp_put_file	./libroutermanager/ftp.c	/^gboolean ftp_put_file(struct ftp *client, const gchar *file, const gchar *path, gchar *data, gsize size)$/;"	f
ftp_read_control_response	./libroutermanager/ftp.c	/^gboolean ftp_read_control_response(struct ftp *client)$/;"	f
ftp_read_data_response	./libroutermanager/ftp.c	/^gchar *ftp_read_data_response(GIOChannel *channel, gsize *len)$/;"	f
ftp_send_command	./libroutermanager/ftp.c	/^gboolean ftp_send_command(struct ftp *client, gchar *command)$/;"	f
ftp_shutdown	./libroutermanager/ftp.c	/^gboolean ftp_shutdown(struct ftp *client)$/;"	f
ftp_user	./roger/assistant.c	/^	GtkWidget *ftp_user;$/;"	m	struct:assistant	file:
ftp_user_entry	./roger/settings.c	/^	GtkWidget *ftp_user_entry;$/;"	m	struct:settings	file:
fx_generate	./libroutermanager/libfaxophone/ringtone.c	/^unsigned char fx_generate(gint type, int index, double seconds)$/;"	f
g_convert_utf8	./libroutermanager/gstring.c	/^gchar *g_convert_utf8(const gchar *text, gssize len)$/;"	f
g_marshal_value_peek_pointer	./libroutermanager/appobject.c	42;"	d	file:
g_strcasestr	./libroutermanager/gstring.c	/^gchar *g_strcasestr(const gchar *haystack, const gchar *needle)$/;"	f
get_active_book_name	./libroutermanager/address-book.h	/^	gchar *(*get_active_book_name)(void);$/;"	m	struct:address_book
get_call_type_string	./roger/plugins/webjournal/webjournal.c	/^gchar *get_call_type_string(gint type)$/;"	f
get_capi_profile	./libroutermanager/libfaxophone/faxophone.c	/^static int get_capi_profile(unsigned controller, struct capi_profile *host)$/;"	f	file:
get_column	./roger/plugins/thunderbird/thunderbird.c	/^static inline gchar *get_column(int key) {$/;"	f	file:
get_contacts	./libroutermanager/address-book.h	/^	GSList *(*get_contacts)(void);$/;"	m	struct:address_book
get_country_code	./libroutermanager/plugins/reverselookup/reverselookup.c	/^gchar *get_country_code(const gchar *full_number)$/;"	f
get_date_time	./roger/print.c	/^static gchar *get_date_time(const gchar *format)$/;"	f	file:
get_devices	./libroutermanager/audio.h	/^	GSList *(*get_devices)(void);$/;"	m	struct:audio
get_directory	./libroutermanager/routermanager.c	/^gchar *get_directory(gchar *type)$/;"	f
get_ebook_list	./roger/plugins/evolution/evolution.c	/^GList *get_ebook_list(void)$/;"	f
get_font_width	./roger/print.c	/^static gint get_font_width(GtkPrintContext *context, PangoFontDescription *desc)$/;"	f	file:
get_ip	./libroutermanager/router.h	/^	gchar *(*get_ip)(struct profile *profile);$/;"	m	struct:router
get_lib_version	./roger/crash.c	/^static const gchar *get_lib_version(void)$/;"	f	file:
get_line_level_in	./libroutermanager/libfaxophone/isdn-convert.c	/^double get_line_level_in(struct capi_connection *connection)$/;"	f
get_line_level_out	./libroutermanager/libfaxophone/isdn-convert.c	/^double get_line_level_out(struct capi_connection *connection)$/;"	f
get_lookup_list	./libroutermanager/plugins/reverselookup/reverselookup.c	/^GSList *get_lookup_list(const gchar *country_code)$/;"	f
get_operating_system	./roger/crash.c	/^static const gchar *get_operating_system(void)$/;"	f	file:
get_page_count	./roger/print.c	/^static int get_page_count(GtkPrintContext *context, PrintData *print_data)$/;"	f	file:
get_password	./libroutermanager/password.h	/^	gchar *(*get_password)(struct profile *profile, const gchar *name);$/;"	m	struct:password_manager
get_plugin_dir	./libroutermanager/routermanager.c	/^static gchar *get_plugin_dir(void)$/;"	f	file:
get_selected_ebook_esource	./roger/plugins/evolution/evolution.c	/^static ESource *get_selected_ebook_esource(void)$/;"	f	file:
get_selected_ebook_id	./roger/plugins/evolution/evolution.c	/^const gchar *get_selected_ebook_id(void)$/;"	f
get_settings	./libroutermanager/router.h	/^	gboolean (*get_settings)(struct profile *profile);$/;"	m	struct:router
get_source_registry	./roger/plugins/evolution/evolution.c	/^static ESourceRegistry *get_source_registry(void)$/;"	f	file:
get_tiff_total_pages	./libroutermanager/libfaxophone/fax.c	/^static int get_tiff_total_pages(const char *file)$/;"	f	file:
get_title	./roger/phone.h	/^	gchar *(*get_title)(void);$/;"	m	struct:phone_device
get_value	./roger/plugins/thunderbird/thunderbird.c	/^static inline gchar *get_value(int key) {$/;"	f	file:
get_win32_error_message	./roger/winmain.c	/^static const wchar_t *get_win32_error_message(DWORD err)$/;"	f	file:
global_areacodes_contact_process_cb	./libroutermanager/plugins/areacodes_global/areacodes_global.c	/^static void global_areacodes_contact_process_cb(AppObject *obj, struct contact *contact, gpointer user_data)$/;"	f	file:
gnotification_close	./roger/plugins/gnotification/gnotification.c	/^static gboolean gnotification_close(gpointer notification)$/;"	f	file:
gnotification_incoming_toggle_cb	./roger/plugins/gnotification/gnotification.c	/^static void gnotification_incoming_toggle_cb(GtkCellRendererToggle *toggle, gchar *path_str, gpointer user_data)$/;"	f	file:
gnotification_outgoing_toggle_cb	./roger/plugins/gnotification/gnotification.c	/^static void gnotification_outgoing_toggle_cb(GtkCellRendererToggle *toggle, gchar *path_str, gpointer user_data)$/;"	f	file:
gnotification_settings	./roger/plugins/gnotification/gnotification.c	/^static GSettings *gnotification_settings = NULL;$/;"	v	file:
gnotification_settings_refresh_list	./roger/plugins/gnotification/gnotification.c	/^void gnotification_settings_refresh_list(GtkListStore *list_store)$/;"	f
gnotification_show	./roger/plugins/gnotification/gnotification.c	/^gboolean gnotification_show(struct connection *connection, struct contact *contact)$/;"	f
gnotification_show_missed_calls	./roger/plugins/gnotification/gnotification.c	/^void gnotification_show_missed_calls(void)$/;"	f
gnotifications_connection_notify_cb	./roger/plugins/gnotification/gnotification.c	/^void gnotifications_connection_notify_cb(AppObject *obj, struct connection *connection, gpointer unused_pointer)$/;"	f
google_book	./roger/plugins/google/google.c	/^struct address_book google_book = {$/;"	v	typeref:struct:address_book
google_get_active_book_name	./roger/plugins/google/google.c	/^gchar *google_get_active_book_name(void)$/;"	f
google_get_contacts	./roger/plugins/google/google.c	/^GSList *google_get_contacts(void)$/;"	f
google_init	./roger/plugins/google/google.c	/^static int google_init(void)$/;"	f	file:
google_interactive_auth	./roger/plugins/google/google.c	/^static void google_interactive_auth(void)$/;"	f	file:
google_read_book	./roger/plugins/google/google.c	/^static int google_read_book(void) {$/;"	f	file:
google_settings	./roger/plugins/google/google.c	/^static GSettings *google_settings = NULL;$/;"	v	file:
google_shutdown	./roger/plugins/google/google.c	/^static int google_shutdown(void) {$/;"	f	file:
goptions	./libroutermanager/libfaxophone/faxophone.h	/^	uint32_t goptions;$/;"	m	struct:capi_profile
gstreamer	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^struct audio gstreamer = {$/;"	v	typeref:struct:audio
gstreamer_bits_per_sample	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static gint gstreamer_bits_per_sample = 16;$/;"	v	file:
gstreamer_channels	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static gint gstreamer_channels = 2;$/;"	v	file:
gstreamer_close	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^int gstreamer_close(void *priv)$/;"	f
gstreamer_detect_devices	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static GSList *gstreamer_detect_devices(void)$/;"	f	file:
gstreamer_init	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static int gstreamer_init(unsigned char channels, unsigned short sample_rate, unsigned char bits_per_sample)$/;"	f	file:
gstreamer_open	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static void *gstreamer_open(void)$/;"	f	file:
gstreamer_read	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static gsize gstreamer_read(void *priv, guchar *data, gsize size)$/;"	f	file:
gstreamer_sample_rate	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static gint gstreamer_sample_rate = 8000;$/;"	v	file:
gstreamer_set_buffer_input_size	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static void gstreamer_set_buffer_input_size(gpointer priv, unsigned buffer_size)$/;"	f	file:
gstreamer_set_buffer_output_size	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static void gstreamer_set_buffer_output_size(gpointer priv, unsigned buffer_size)$/;"	f	file:
gstreamer_shutdown	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^int gstreamer_shutdown(void)$/;"	f
gstreamer_write	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static gsize gstreamer_write(void *priv, guchar *data, gsize size)$/;"	f	file:
gtk_label_new	./libroutermanager/osdep.h	34;"	d
gtk_widget_set_margin	./roger/uitools.c	/^void gtk_widget_set_margin(GtkWidget *widget, gint x1, gint y1, gint x2, gint y2)$/;"	f
handlers	./libroutermanager/libfaxophone/faxophone.h	/^	struct session_handlers *handlers;$/;"	m	struct:session	typeref:struct:session::session_handlers
hangup	./libroutermanager/router.h	/^	gboolean (*hangup)(struct profile *profile, gint port, const gchar *number);$/;"	m	struct:router
hangup_activated	./roger/application.c	/^static void hangup_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
hangup_button	./roger/phone.h	/^	GtkWidget *hangup_button;$/;"	m	struct:phone_state
hangup_button_clicked_cb	./roger/phone.c	/^static void hangup_button_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f	file:
has_file_extension	./libroutermanager/fax_spooler.c	/^gboolean has_file_extension(const char *file, const char *ext)$/;"	f
hash_destroy	./roger/plugins/thunderbird/thunderbird.c	/^void hash_destroy(void *data) {$/;"	f
header	./libroutermanager/libfaxophone/fax.h	/^	gchar header[64];$/;"	m	struct:fax_status
header	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gint header;$/;"	m	struct:voice_data
header	./roger/assistant.c	/^	GtkWidget *header;$/;"	m	struct:assistant	file:
header	./roger/plugins/vcard/vcard.h	/^	gchar *header;$/;"	m	struct:vcard_data
header	./roger/plugins/webjournal/webjournal.c	/^	gchar *header;$/;"	m	struct:__anon20	file:
header_bar	./roger/phone.h	/^	GtkWidget *header_bar;$/;"	m	struct:phone_state
header_bar_title	./roger/contacts.c	/^	GtkWidget *header_bar_title;$/;"	m	struct:contacts	file:
headerbar	./roger/settings.c	/^	GtkWidget *headerbar;$/;"	m	struct:settings	file:
hold	./libroutermanager/libfaxophone/faxophone.h	/^	int hold;$/;"	m	struct:capi_connection
hold_button	./roger/phone.h	/^	GtkWidget *hold_button;$/;"	m	struct:phone_state
host	./libroutermanager/router.h	/^	gchar *host;$/;"	m	struct:router_info
host_entry	./roger/settings.c	/^	GtkWidget *host_entry;$/;"	m	struct:settings	file:
hour	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guchar hour;$/;"	m	struct:voice_data
html_extract_assignment	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gchar *html_extract_assignment(const gchar *data, gchar *tag, gboolean p)$/;"	f
icon_blocked	./roger/journal.c	/^static GdkPixbuf *icon_blocked = NULL;$/;"	v	file:
icon_call_in	./roger/journal.c	/^static GdkPixbuf *icon_call_in = NULL;$/;"	v	file:
icon_call_missed	./roger/journal.c	/^static GdkPixbuf *icon_call_missed = NULL;$/;"	v	file:
icon_call_out	./roger/journal.c	/^static GdkPixbuf *icon_call_out = NULL;$/;"	v	file:
icon_fax	./roger/journal.c	/^static GdkPixbuf *icon_fax = NULL;$/;"	v	file:
icon_fax_report	./roger/journal.c	/^static GdkPixbuf *icon_fax_report = NULL;$/;"	v	file:
icon_record	./roger/journal.c	/^static GdkPixbuf *icon_record = NULL;$/;"	v	file:
icon_voice	./roger/journal.c	/^static GdkPixbuf *icon_voice = NULL;$/;"	v	file:
id	./libroutermanager/connection.h	/^	guint id;$/;"	m	struct:connection
id	./libroutermanager/libfaxophone/faxophone.c	/^static unsigned int id = 0;$/;"	v	file:
id	./libroutermanager/libfaxophone/faxophone.h	/^	unsigned int id;$/;"	m	struct:capi_connection
id	./libroutermanager/plugins/callmonitor/callmonitor.c	/^	guint id;$/;"	m	struct:__anon9	file:
id	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^	guint id;$/;"	m	struct:__anon7	file:
id	./libroutermanager/plugins/portaudio/portaudio.c	/^	guint id;$/;"	m	struct:__anon1	file:
id	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^	guint id;$/;"	m	struct:__anon10	file:
id	./roger/plugins/evolution/ebook-sources.h	/^	gchar *id;$/;"	m	struct:ebook_data
id	./roger/plugins/fritzfon/fritzfon.c	/^	gchar *id;$/;"	m	struct:fritzfon_book	file:
ident	./libroutermanager/libfaxophone/fax.h	/^	gchar ident[64];$/;"	m	struct:fax_status
image	./libroutermanager/contact.h	/^	gpointer image;$/;"	m	struct:contact
image_get_scaled	./roger/icons.c	/^GdkPixbuf *image_get_scaled(GdkPixbuf *image, gint req_width, gint req_height)$/;"	f
image_len	./libroutermanager/contact.h	/^	gsize image_len;$/;"	m	struct:contact
image_uri	./libroutermanager/contact.h	/^	gchar *image_uri;$/;"	m	struct:contact
image_url	./roger/plugins/fritzfon/fritzfon.c	/^	gchar *image_url;$/;"	m	struct:fritzfon_priv	file:
impl_activate	./libroutermanager/plugins/areacodes_global/areacodes_global.c	/^static void impl_activate(PeasActivatable *plugin)$/;"	f	file:
impl_activate	./libroutermanager/plugins/callmonitor/callmonitor.c	/^static void impl_activate(PeasActivatable *plugin)$/;"	f	file:
impl_activate	./libroutermanager/plugins/fritzbox/fritzbox.c	/^static void impl_activate(PeasActivatable *plugin)$/;"	f	file:
impl_activate	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static void impl_activate(PeasActivatable *plugin)$/;"	f	file:
impl_activate	./libroutermanager/plugins/portaudio/portaudio.c	/^static void impl_activate(PeasActivatable *plugin)$/;"	f	file:
impl_activate	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static void impl_activate(PeasActivatable *plugin)$/;"	f	file:
impl_activate	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static void impl_activate(PeasActivatable *plugin)$/;"	f	file:
impl_activate	./libroutermanager/plugins/secret/secret.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./libroutermanager/plugins/wincred/wincred.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/evolution/evolution.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/fritzfon/fritzfon.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/gnotification/gnotification.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/google/google.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/gtknotify/gtknotify.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/indicator/indicator.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/keychain/keychain.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/notification/notification.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/osxab/osxab.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/statusicon/gtk.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/thunderbird/thunderbird.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/vcard/vcard.c	/^void impl_activate(PeasActivatable *plugin)$/;"	f
impl_activate	./roger/plugins/webjournal/webjournal.c	/^static void impl_activate(PeasActivatable *plugin)$/;"	f	file:
impl_create_configure_widget	./roger/plugins/evolution/evolution.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_create_configure_widget	./roger/plugins/fritzfon/fritzfon.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_create_configure_widget	./roger/plugins/gnotification/gnotification.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_create_configure_widget	./roger/plugins/google/google.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_create_configure_widget	./roger/plugins/gtknotify/gtknotify.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_create_configure_widget	./roger/plugins/indicator/indicator.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_create_configure_widget	./roger/plugins/notification/notification.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_create_configure_widget	./roger/plugins/statusicon/gtk.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_create_configure_widget	./roger/plugins/thunderbird/thunderbird.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_create_configure_widget	./roger/plugins/vcard/vcard.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_create_configure_widget	./roger/plugins/webjournal/webjournal.c	/^GtkWidget *impl_create_configure_widget(PeasGtkConfigurable *config)$/;"	f
impl_deactivate	./libroutermanager/plugins/areacodes_global/areacodes_global.c	/^static void impl_deactivate(PeasActivatable *plugin)$/;"	f	file:
impl_deactivate	./libroutermanager/plugins/callmonitor/callmonitor.c	/^static void impl_deactivate(PeasActivatable *plugin)$/;"	f	file:
impl_deactivate	./libroutermanager/plugins/fritzbox/fritzbox.c	/^static void impl_deactivate(PeasActivatable *plugin)$/;"	f	file:
impl_deactivate	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static void impl_deactivate(PeasActivatable *plugin)$/;"	f	file:
impl_deactivate	./libroutermanager/plugins/portaudio/portaudio.c	/^static void impl_deactivate(PeasActivatable *plugin)$/;"	f	file:
impl_deactivate	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static void impl_deactivate(PeasActivatable *plugin)$/;"	f	file:
impl_deactivate	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static void impl_deactivate(PeasActivatable *plugin)$/;"	f	file:
impl_deactivate	./libroutermanager/plugins/secret/secret.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./libroutermanager/plugins/wincred/wincred.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/evolution/evolution.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/fritzfon/fritzfon.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/gnotification/gnotification.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/google/google.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/gtknotify/gtknotify.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/indicator/indicator.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/keychain/keychain.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/notification/notification.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/osxab/osxab.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/statusicon/gtk.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/thunderbird/thunderbird.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/vcard/vcard.c	/^void impl_deactivate(PeasActivatable *plugin)$/;"	f
impl_deactivate	./roger/plugins/webjournal/webjournal.c	/^static void impl_deactivate(PeasActivatable *plugin)$/;"	f	file:
in_bin	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^	GstElement *in_bin;$/;"	m	struct:pipes	file:
in_fifo	./libroutermanager/plugins/portaudio/portaudio.c	/^	pa_util_ring_buffer in_fifo;$/;"	m	struct:port_private	file:
in_pipe	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^	GstElement *in_pipe;$/;"	m	struct:pipes	file:
in_stream	./libroutermanager/plugins/portaudio/portaudio.c	/^	PaStream *in_stream;$/;"	m	struct:port_private	file:
incoming_call_begins_checkbutton	./roger/settings.c	/^	GtkWidget *incoming_call_begins_checkbutton;$/;"	m	struct:settings	file:
incoming_call_ends_checkbutton	./roger/settings.c	/^	GtkWidget *incoming_call_ends_checkbutton;$/;"	m	struct:settings	file:
incoming_call_missed_checkbutton	./roger/settings.c	/^	GtkWidget *incoming_call_missed_checkbutton;$/;"	m	struct:settings	file:
incoming_call_rings_checkbutton	./roger/settings.c	/^	GtkWidget *incoming_call_rings_checkbutton;$/;"	m	struct:settings	file:
index	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gint index;$/;"	m	struct:voice_data
index	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^	gint index;$/;"	m	struct:pulse_device_list	file:
index_in_array	./libroutermanager/gstring.c	/^static gint index_in_array(gchar **arr, gchar *string)$/;"	f	file:
indicator	./roger/plugins/indicator/indicator.c	/^static AppIndicator *indicator = NULL;$/;"	v	file:
indicator_combobox_default_changed_cb	./roger/plugins/indicator/indicator.c	/^void indicator_combobox_default_changed_cb(GtkComboBox *widget, gpointer user_data)$/;"	f
indicator_combobox_notify_changed_cb	./roger/plugins/indicator/indicator.c	/^void indicator_combobox_notify_changed_cb(GtkComboBox *widget, gpointer user_data)$/;"	f
indicator_connection_notify_cb	./roger/plugins/indicator/indicator.c	/^void indicator_connection_notify_cb(AppObject *obj, struct connection *connection, gpointer unused_pointer)$/;"	f
indicator_dial_number_cb	./roger/plugins/indicator/indicator.c	/^void indicator_dial_number_cb(GtkMenuItem *item, gpointer user_data)$/;"	f
indicator_journal_cb	./roger/plugins/indicator/indicator.c	/^void indicator_journal_cb(void)$/;"	f
indicator_last_calls_cb	./roger/plugins/indicator/indicator.c	/^void indicator_last_calls_cb(GtkMenuItem *item)$/;"	f
indicator_menu	./roger/plugins/indicator/indicator.c	/^GtkWidget *indicator_menu(void)$/;"	f
indicator_menu_functions	./roger/plugins/indicator/indicator.c	/^GtkWidget *indicator_menu_functions(void)$/;"	f
indicator_menu_last_calls	./roger/plugins/indicator/indicator.c	/^GtkWidget *indicator_menu_last_calls(void)$/;"	f
indicator_menu_last_calls_group	./roger/plugins/indicator/indicator.c	/^void indicator_menu_last_calls_group(GtkWidget *menu, gchar *label, int call_type)$/;"	f
indicator_phone_cb	./roger/plugins/indicator/indicator.c	/^void indicator_phone_cb(GtkWidget *widget, gpointer user_data)$/;"	f
indicator_settings	./roger/plugins/indicator/indicator.c	/^static GSettings *indicator_settings = NULL;$/;"	v	file:
init	./libroutermanager/audio.h	/^	gboolean (*init)(guchar channels, gushort rate, guchar bits);$/;"	m	struct:audio
init	./roger/phone.h	/^	gboolean (*init)(struct contact *contact, struct connection *connection);$/;"	m	struct:phone_device
init_data	./libroutermanager/libfaxophone/faxophone.h	/^	void (*init_data)(struct capi_connection *connection);$/;"	m	struct:capi_connection
init_directory_paths	./libroutermanager/routermanager.c	/^void init_directory_paths(void)$/;"	f
init_fifo	./libroutermanager/plugins/portaudio/portaudio.c	/^PaError init_fifo(pa_util_ring_buffer *ring_buffer, long frames, long bytes_per_frame)$/;"	f
initialized	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^	gchar initialized;$/;"	m	struct:pulse_device_list	file:
input_device_list	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^struct pulse_device_list input_device_list[16];$/;"	v	typeref:struct:pulse_device_list
input_thread_state	./libroutermanager/libfaxophone/faxophone.h	/^	int input_thread_state;$/;"	m	struct:session
insert_map	./roger/plugins/thunderbird/thunderbird.c	/^static inline void insert_map(GHashTable *table, long key, void *value) {$/;"	f	file:
internal_audio	./libroutermanager/audio.c	/^static struct audio *internal_audio = NULL;$/;"	v	typeref:struct:audio	file:
internal_name	./libroutermanager/audio.h	/^	gchar *internal_name;$/;"	m	struct:audio_device
international_call_prefix_entry	./roger/settings.c	/^	GtkWidget *international_call_prefix_entry;$/;"	m	struct:settings	file:
is_connected	./libroutermanager/net_monitor.h	/^	gboolean is_connected;$/;"	m	struct:net_event
is_crash_dialog_allowed	./roger/crash.c	/^static gboolean is_crash_dialog_allowed(void)$/;"	f	file:
is_whitespace	./roger/plugins/thunderbird/thunderbird.c	/^static gboolean is_whitespace(gchar character) {$/;"	f	file:
isdn_lock	./libroutermanager/libfaxophone/faxophone.h	70;"	d
isdn_lock	./libroutermanager/libfaxophone/faxophone.h	73;"	d
isdn_mutex	./libroutermanager/libfaxophone/faxophone.h	/^	GMutex isdn_mutex;$/;"	m	struct:session
isdn_unlock	./libroutermanager/libfaxophone/faxophone.h	71;"	d
isdn_unlock	./libroutermanager/libfaxophone/faxophone.h	74;"	d
journal	./roger-cli/main_cli.c	/^static gboolean journal = FALSE;$/;"	v	file:
journal_activated	./roger/application.c	/^static void journal_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
journal_add_contact	./roger/journal.c	/^void journal_add_contact(struct call *call)$/;"	f
journal_application	./roger/journal.c	/^GApplication *journal_application = NULL;$/;"	v
journal_button_add_clicked_cb	./roger/journal.c	/^void journal_button_add_clicked_cb(GtkWidget *button, GtkWidget *view)$/;"	f
journal_button_clear_clicked_cb	./roger/journal.c	/^void journal_button_clear_clicked_cb(GtkWidget *button, GtkWidget *view)$/;"	f
journal_button_delete_clicked_cb	./roger/journal.c	/^void journal_button_delete_clicked_cb(GtkWidget *button, GtkWidget *view)$/;"	f
journal_button_press_event_cb	./roger/journal.c	/^gboolean journal_button_press_event_cb(GtkWidget *treeview, GdkEventButton *event, gpointer user_data)$/;"	f
journal_button_print_clicked_cb	./roger/journal.c	/^void journal_button_print_clicked_cb(GtkWidget *button, GtkWidget *view)$/;"	f
journal_button_refresh_clicked_cb	./roger/journal.c	/^void journal_button_refresh_clicked_cb(GtkWidget *button, GtkWidget *window)$/;"	f
journal_button_refresh_idle	./roger/journal.c	/^gboolean journal_button_refresh_idle(gpointer data)$/;"	f
journal_clear	./roger/journal.c	/^void journal_clear(void)$/;"	f
journal_column_fixed_width_cb	./roger/journal.c	/^static void journal_column_fixed_width_cb(GtkWidget *widget, gpointer user_data)$/;"	f	file:
journal_column_header_button_pressed_cb	./roger/journal.c	/^static gboolean journal_column_header_button_pressed_cb(GtkTreeViewColumn *column, GdkEventButton *event, gpointer user_data)$/;"	f	file:
journal_column_restore_default	./roger/journal.c	/^void journal_column_restore_default(GtkMenuItem *item, gpointer user_data)$/;"	f
journal_configure_event_cb	./roger/journal.c	/^static gboolean journal_configure_event_cb(GtkWidget *window, GdkEvent *event, gpointer user_data)$/;"	f	file:
journal_connection_notify_cb	./roger/journal.c	/^static void journal_connection_notify_cb(AppObject *obj, struct connection *connection, gpointer user_data)$/;"	f	file:
journal_contacts_changed_cb	./roger/journal.c	/^static void journal_contacts_changed_cb(AppObject *app, gpointer user_data)$/;"	f	file:
journal_delete_event_cb	./roger/journal.c	/^gint journal_delete_event_cb(GtkWidget *widget, GdkEvent *event, gpointer data)$/;"	f
journal_export_cb	./roger/journal.c	/^static void journal_export_cb(GtkWidget *dialog, gint response, gpointer user_data)$/;"	f	file:
journal_filter	./roger/journal.c	/^static struct filter *journal_filter = NULL;$/;"	v	typeref:struct:filter	file:
journal_filter_box	./roger/journal.c	/^GtkWidget *journal_filter_box = NULL;$/;"	v
journal_get_call_icon	./roger/journal.c	/^GdkPixbuf *journal_get_call_icon(gint type)$/;"	f
journal_get_window	./roger/journal.c	/^GtkWidget *journal_get_window(void)$/;"	f
journal_hide_on_quit	./roger/journal.c	/^static gboolean journal_hide_on_quit = FALSE;$/;"	v	file:
journal_hide_on_start	./roger/journal.c	/^static gboolean journal_hide_on_start = FALSE;$/;"	v	file:
journal_init_call_icon	./roger/journal.c	/^void journal_init_call_icon(void)$/;"	f
journal_list	./roger/journal.c	/^GSList *journal_list = NULL;$/;"	v
journal_loaded	./libroutermanager/appobject.h	/^	void (*journal_loaded)(GSList *journal);$/;"	m	struct:_AppObjectClass
journal_loaded_cb	./roger-cli/main_cli.c	/^void journal_loaded_cb(AppObject *obj, GSList *journal, gpointer unused)$/;"	f
journal_loaded_cb	./roger/journal.c	/^void journal_loaded_cb(AppObject *obj, GSList *journal, gpointer unused)$/;"	f
journal_mutex	./roger/journal.c	/^static GMutex journal_mutex;$/;"	v	file:
journal_playback	./roger/answeringmachine.c	/^struct journal_playback {$/;"	s	file:
journal_popup_add_contact	./roger/journal.c	/^void journal_popup_add_contact(GtkWidget *widget, struct call *call)$/;"	f
journal_popup_call_number	./roger/journal.c	/^void journal_popup_call_number(GtkWidget *widget, struct call *call)$/;"	f
journal_popup_copy_number	./roger/journal.c	/^void journal_popup_copy_number(GtkWidget *widget, struct call *call)$/;"	f
journal_popup_delete_entry	./roger/journal.c	/^void journal_popup_delete_entry(GtkWidget *widget, struct call *call)$/;"	f
journal_popup_menu	./roger/journal.c	/^void journal_popup_menu(GtkWidget *treeview, GdkEventButton *event, gpointer user_data)$/;"	f
journal_print	./roger/print.c	/^void journal_print(GtkWidget *view_widget)$/;"	f
journal_quit	./roger/journal.c	/^void journal_quit(void)$/;"	f
journal_redraw	./roger/journal.c	/^void journal_redraw(void)$/;"	f
journal_row_activated_cb	./roger/journal.c	/^void journal_row_activated_cb(GtkTreeView *view, GtkTreePath *path, GtkTreeViewColumn *column, gpointer user_data)$/;"	f
journal_search_filter	./roger/journal.c	/^static struct filter *journal_search_filter = NULL;$/;"	v	typeref:struct:filter	file:
journal_set_hide_on_quit	./roger/journal.c	/^void journal_set_hide_on_quit(gboolean hide)$/;"	f
journal_set_hide_on_start	./roger/journal.c	/^void journal_set_hide_on_start(gboolean hide)$/;"	f
journal_set_visible	./roger/journal.c	/^void journal_set_visible(gboolean state)$/;"	f
journal_sort_by_date	./roger/journal.c	/^gint journal_sort_by_date(GtkTreeModel *model, GtkTreeIter *a, GtkTreeIter *b, gpointer data)$/;"	f
journal_sort_by_type	./roger/journal.c	/^gint journal_sort_by_type(GtkTreeModel *model, GtkTreeIter *a, GtkTreeIter *b, gpointer data)$/;"	f
journal_startup	./roger/journal.c	/^static void journal_startup(GApplication *application)$/;"	f	file:
journal_update_filter	./roger/journal.c	/^void journal_update_filter(void)$/;"	f
journal_view	./roger/journal.c	/^GtkWidget *journal_view = NULL;$/;"	v
journal_win	./roger/journal.c	/^GtkWidget *journal_win = NULL;$/;"	v
journal_window	./roger/journal.c	/^void journal_window(GApplication *app)$/;"	f
journal_window_state_event_cb	./roger/journal.c	/^static gboolean journal_window_state_event_cb(GtkWidget *window, GdkEventWindowState *event)$/;"	f	file:
keychain	./roger/plugins/keychain/keychain.c	/^struct password_manager keychain = {$/;"	v	typeref:struct:password_manager
keychain_get	./roger/plugins/keychain/keychain.c	/^OSStatus keychain_get(gchar *pwd_name, void **password, UInt32 *pwd_len, SecKeychainItemRef *item_ref)$/;"	f
keychain_get_password	./roger/plugins/keychain/keychain.c	/^static gchar *keychain_get_password(struct profile *profile, const gchar *type)$/;"	f	file:
keychain_remove_password	./roger/plugins/keychain/keychain.c	/^static gboolean keychain_remove_password(struct profile *profile, const gchar *type) {$/;"	f	file:
keychain_store_password	./roger/plugins/keychain/keychain.c	/^static void keychain_store_password(struct profile *profile, const gchar *type, const gchar *password) {$/;"	f	file:
lang	./libroutermanager/router.h	/^	gchar *lang;$/;"	m	struct:router_info
last_child	./libroutermanager/xml.h	/^	struct xml_node *last_child;$/;"	m	struct:xml_node	typeref:struct:xml_node::xml_node
last_name	./roger/plugins/vcard/vcard.c	/^static GString *last_name = NULL;$/;"	v	file:
last_write	./libroutermanager/libfaxophone/faxophone.h	/^	gint64 last_write;$/;"	m	struct:recorder
law_2_linear16	./libroutermanager/libfaxophone/isdn-convert.c	/^unsigned short law_2_linear16[256];$/;"	v
layout	./roger/print.c	/^	PangoLayout *layout;$/;"	m	struct:__anon26	file:
len	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gsize len;$/;"	m	struct:voice_box
len	./libroutermanager/voxplay.c	/^	gsize len;$/;"	m	struct:vox_playback	file:
len	./roger/answeringmachine.c	/^	gsize len;$/;"	m	struct:journal_playback	file:
line_access_code_entry	./roger/settings.c	/^	GtkWidget *line_access_code_entry;$/;"	m	struct:settings	file:
line_height	./roger/print.c	/^	gdouble line_height;$/;"	m	struct:__anon26	file:
line_level_in_state	./libroutermanager/libfaxophone/faxophone.h	/^	double line_level_in_state;$/;"	m	struct:capi_connection
line_level_out_state	./libroutermanager/libfaxophone/faxophone.h	/^	double line_level_out_state;$/;"	m	struct:capi_connection
linear16_2_law	./libroutermanager/libfaxophone/isdn-convert.c	/^signed char linear16_2_law[65536];$/;"	v
linear2alaw	./libroutermanager/libfaxophone/isdn-convert.c	/^static unsigned char linear2alaw(short sample)$/;"	f	file:
linear2alaw	./libroutermanager/libfaxophone/ringtone.c	/^static unsigned char linear2alaw(int val)$/;"	f	file:
lines_per_page	./roger/print.c	/^	gint lines_per_page;$/;"	m	struct:__anon26	file:
list_box	./roger/contacts.c	/^	GtkWidget *list_box;$/;"	m	struct:contacts	file:
load_fax	./libroutermanager/router.h	/^	gchar *(*load_fax)(struct profile *profile, const gchar *filename, gsize *len);$/;"	m	struct:router
load_journal	./libroutermanager/router.h	/^	gboolean (*load_journal)(struct profile *profile, gchar **data);$/;"	m	struct:router
load_tiff_page	./roger/print.c	/^GdkPixbuf *load_tiff_page(TIFF *tiff_file)$/;"	f
load_voice	./libroutermanager/router.h	/^	gchar *(*load_voice)(struct profile *profile, const gchar *filename, gsize *len);$/;"	m	struct:router
local	./libroutermanager/call.h	/^	struct contact *local;$/;"	m	struct:call	typeref:struct:call::contact
local	./libroutermanager/libfaxophone/faxophone.h	/^	struct record_channel local;$/;"	m	struct:recorder	typeref:struct:recorder::record_channel
local_name_pos	./roger/print.c	/^	gint local_name_pos;$/;"	m	struct:__anon26	file:
local_number	./libroutermanager/connection.h	/^	gchar *local_number;$/;"	m	struct:connection
local_number	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gchar local_number[24];$/;"	m	struct:voice_data
local_number_pos	./roger/print.c	/^	gint local_number_pos;$/;"	m	struct:__anon26	file:
log_func	./libroutermanager/logging.c	/^static void log_func(const gchar *log_domain, GLogLevelFlags log_level, const gchar *message, gpointer user_data)$/;"	f	file:
log_init	./libroutermanager/logging.c	/^void log_init(gboolean debug)$/;"	f
log_level	./libroutermanager/libfaxophone/fax.c	/^static gint log_level = 0;$/;"	v	file:
log_level	./libroutermanager/logging.c	/^static GLogLevelFlags log_level = G_LOG_LEVEL_DEBUG;$/;"	v	file:
log_save_data	./libroutermanager/logging.c	/^void log_save_data(gchar *name, const gchar *data, gsize len)$/;"	f
log_set_level	./libroutermanager/logging.c	/^void log_set_level(GLogLevelFlags level)$/;"	f
log_shutdown	./libroutermanager/logging.c	/^void log_shutdown(void)$/;"	f
logging	./libroutermanager/libfaxophone/fax.c	/^static void (*logging)(gint level, const gchar *text) = NULL;$/;"	v	file:
login	./libroutermanager/router.h	/^	gboolean (*login)(struct profile *profile);$/;"	m	struct:router
login_check_button_clicked_cb	./roger/settings.c	/^void login_check_button_clicked_cb(GtkButton *button, gpointer user_data)$/;"	f
login_password_entry	./roger/settings.c	/^	GtkWidget *login_password_entry;$/;"	m	struct:settings	file:
login_password_entry_changed_cb	./roger/settings.c	/^void login_password_entry_changed_cb(GtkEntry *entry, gpointer user_data)$/;"	f
login_user_entry	./roger/settings.c	/^	GtkWidget *login_user_entry;$/;"	m	struct:settings	file:
logo_pos	./roger/print.c	/^	gint logo_pos;$/;"	m	struct:__anon26	file:
logout	./libroutermanager/router.h	/^	gboolean (*logout)(struct profile *profile, gboolean force);$/;"	m	struct:router
lookup	./libroutermanager/contact.h	/^	gboolean lookup;$/;"	m	struct:contact
lookup	./libroutermanager/plugins/reverselookup/reverselookup.h	/^struct lookup {$/;"	s
lookup_active	./libroutermanager/lookup.c	/^static lookup_func lookup_active = NULL;$/;"	v	file:
lookup_add	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static void lookup_add(xmlnode *node)$/;"	f	file:
lookup_func	./libroutermanager/lookup.h	/^typedef gboolean (*lookup_func)(gchar *number, gchar **name, gchar **address, gchar **zip, gchar **city);$/;"	t
lookup_journal	./roger/journal.c	/^gpointer lookup_journal(gpointer user_data)$/;"	f
lookup_list	./libroutermanager/lookup.c	/^static GSList *lookup_list = NULL;$/;"	v	file:
lookup_list	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static GSList *lookup_list = NULL;$/;"	v	file:
lookup_read_cache	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static void lookup_read_cache(gchar *dir_name)$/;"	f	file:
lookup_table	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static GHashTable *lookup_table = NULL;$/;"	v	file:
lut_a2s	./libroutermanager/libfaxophone/isdn-convert.c	/^static short *lut_a2s = NULL;$/;"	v	file:
lut_analyze	./libroutermanager/libfaxophone/isdn-convert.c	/^static unsigned char *lut_analyze = NULL;$/;"	v	file:
lut_in	./libroutermanager/libfaxophone/isdn-convert.c	/^static unsigned char *lut_in = NULL;$/;"	v	file:
lut_out	./libroutermanager/libfaxophone/isdn-convert.c	/^static unsigned char *lut_out = NULL;$/;"	v	file:
main	./roger-cli/main_cli.c	/^int main(int argc, char **argv)$/;"	f
main_loop	./roger-cli/main_cli.c	/^GMainLoop *main_loop = NULL;$/;"	v
maj_ver_id	./libroutermanager/router.h	/^	gint maj_ver_id;$/;"	m	struct:router_info
make_dots	./libroutermanager/plugins/fritzbox/firmware-common.h	/^static inline gchar *make_dots(const gchar *str)$/;"	f
make_lut	./libroutermanager/libfaxophone/ringtone.c	/^static int make_lut(unsigned char **lut_generate)$/;"	f	file:
manu	./libroutermanager/libfaxophone/faxophone.h	/^	uint32_t manu[5];$/;"	m	struct:capi_profile
manual_hookup	./libroutermanager/libfaxophone/fax.h	/^	gboolean manual_hookup;$/;"	m	struct:fax_status
master_node	./roger/plugins/fritzfon/fritzfon.c	/^static xmlnode *master_node = NULL;$/;"	v	file:
max_page	./roger/assistant.c	/^	gint max_page;$/;"	m	struct:assistant	file:
md5	./libroutermanager/plugins/fritzbox/firmware-common.h	/^static inline gchar *md5(gchar *input)$/;"	f
media_button	./roger/answeringmachine.c	/^	GtkWidget *media_button;$/;"	m	struct:journal_playback	file:
message	./libroutermanager/appobject.h	/^	void (*message)(gchar *title, gchar *message);$/;"	m	struct:_AppObjectClass
message_number	./libroutermanager/libfaxophone/faxophone.h	/^	int message_number;$/;"	m	struct:session
microsec_time	./libroutermanager/libfaxophone/phone.c	/^guint64 microsec_time(void)$/;"	f
min_ver_id	./libroutermanager/router.h	/^	gint min_ver_id;$/;"	m	struct:router_info
minute	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guchar minute;$/;"	m	struct:voice_data
missed_calls	./roger/plugins/gnotification/gnotification.c	/^static guint missed_calls = 0;$/;"	v	file:
modem	./libroutermanager/libfaxophone/fax.h	/^	gchar modem;$/;"	m	struct:fax_status
monitor	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static GstDeviceMonitor *monitor = NULL;$/;"	v	file:
month	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guchar month;$/;"	m	struct:voice_data
mork_columns	./roger/plugins/thunderbird/thunderbird.c	/^static GHashTable *mork_columns = NULL;$/;"	v	file:
mork_data	./roger/plugins/thunderbird/thunderbird.c	/^static gchar *mork_data = NULL;$/;"	v	file:
mork_next_add_value_id	./roger/plugins/thunderbird/thunderbird.c	/^static gint mork_next_add_value_id = MAX_VAL;$/;"	v	file:
mork_now_parsing	./roger/plugins/thunderbird/thunderbird.c	/^static gint mork_now_parsing = PARSE_VALUES;$/;"	v	file:
mork_pos	./roger/plugins/thunderbird/thunderbird.c	/^static gint mork_pos = 0;$/;"	v	file:
mork_size	./roger/plugins/thunderbird/thunderbird.c	/^static gint mork_size = 0;$/;"	v	file:
mork_values	./roger/plugins/thunderbird/thunderbird.c	/^static GHashTable *mork_values = NULL;$/;"	v	file:
msg	./libroutermanager/network.h	/^	SoupMessage *msg;$/;"	m	struct:auth_data
mute	./libroutermanager/libfaxophone/faxophone.h	/^	int mute;$/;"	m	struct:capi_connection
mute_button	./roger/phone.h	/^	GtkWidget *mute_button;$/;"	m	struct:phone_state
name	./libroutermanager/action.h	/^	gchar *name;$/;"	m	struct:action
name	./libroutermanager/address-book.h	/^	gchar *name;$/;"	m	struct:address_book
name	./libroutermanager/audio.h	/^	const gchar *name;$/;"	m	struct:audio
name	./libroutermanager/audio.h	/^	gchar *name;$/;"	m	struct:audio_device
name	./libroutermanager/contact.h	/^	gchar *name;$/;"	m	struct:contact
name	./libroutermanager/filter.h	/^	gchar *name;$/;"	m	struct:filter
name	./libroutermanager/password.h	/^	const gchar *name;$/;"	m	struct:password_manager
name	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^	gchar name[512];$/;"	m	struct:pulse_device_list	file:
name	./libroutermanager/plugins/reverselookup/reverselookup.h	/^	gchar **name;$/;"	m	struct:lookup
name	./libroutermanager/profile.h	/^	gchar *name;$/;"	m	struct:profile
name	./libroutermanager/router.h	/^	const gchar *name;$/;"	m	struct:router
name	./libroutermanager/router.h	/^	gchar *name;$/;"	m	struct:phone
name	./libroutermanager/router.h	/^	gchar *name;$/;"	m	struct:phone_port
name	./libroutermanager/router.h	/^	gchar *name;$/;"	m	struct:router_info
name	./libroutermanager/xml.h	/^	gchar *name;$/;"	m	struct:xml_node
name	./roger/assistant.c	/^	gchar *name;$/;"	m	struct:assistant_page	file:
name	./roger/plugins/evolution/ebook-sources.h	/^	gchar *name;$/;"	m	struct:ebook_data
name	./roger/plugins/fritzfon/fritzfon.c	/^	gchar *name;$/;"	m	struct:fritzfon_book	file:
name_column_cell_data_func	./roger/journal.c	/^void name_column_cell_data_func(GtkTreeViewColumn *column, GtkCellRenderer *renderer, GtkTreeModel *model, GtkTreeIter *iter, gpointer user_data)$/;"	f
name_entry_changed_cb	./roger/contacts.c	/^void name_entry_changed_cb(GtkWidget *entry, gpointer user_data)$/;"	f
name_pos	./roger/print.c	/^	gint name_pos;$/;"	m	struct:__anon26	file:
namespace_map	./libroutermanager/xml.h	/^	GHashTable *namespace_map;$/;"	m	struct:xml_node
national_call_prefix_entry	./roger/settings.c	/^	GtkWidget *national_call_prefix_entry;$/;"	m	struct:settings	file:
nbchannel	./libroutermanager/libfaxophone/faxophone.h	/^	uint16_t nbchannel;$/;"	m	struct:capi_profile
ncci	./libroutermanager/libfaxophone/faxophone.h	/^	unsigned long int ncci;$/;"	m	struct:capi_connection
ncontroller	./libroutermanager/libfaxophone/faxophone.h	/^	uint16_t ncontroller;$/;"	m	struct:capi_profile
ncpi	./libroutermanager/libfaxophone/faxophone.h	/^	gchar *ncpi;$/;"	m	struct:capi_connection
net_add_event	./libroutermanager/net_monitor.c	/^gconstpointer net_add_event(net_connect_func connect, net_disconnect_func disconnect, gpointer user_data)$/;"	f
net_connect_func	./libroutermanager/net_monitor.h	/^typedef gboolean (*net_connect_func)(gpointer user_data);$/;"	t
net_disconnect_func	./libroutermanager/net_monitor.h	/^typedef gboolean (*net_disconnect_func)(gpointer user_data);$/;"	t
net_event	./libroutermanager/fax_phone.c	/^static gconstpointer net_event;$/;"	v	file:
net_event	./libroutermanager/net_monitor.h	/^struct net_event {$/;"	s
net_event_id	./libroutermanager/plugins/callmonitor/callmonitor.c	/^	gconstpointer net_event_id;$/;"	m	struct:__anon9	file:
net_event_list	./libroutermanager/net_monitor.c	/^static GSList *net_event_list = NULL;$/;"	v	file:
net_init	./libroutermanager/network.c	/^gboolean net_init(void)$/;"	f
net_is_online	./libroutermanager/net_monitor.c	/^gboolean net_is_online(void)$/;"	f
net_monitor_changed_cb	./libroutermanager/net_monitor.c	/^void net_monitor_changed_cb(GNetworkMonitor *monitor, gboolean available, gpointer unused)$/;"	f
net_monitor_init	./libroutermanager/net_monitor.c	/^gboolean net_monitor_init(void)$/;"	f
net_monitor_reconnect	./libroutermanager/net_monitor.c	/^void net_monitor_reconnect(void)$/;"	f
net_monitor_shutdown	./libroutermanager/net_monitor.c	/^void net_monitor_shutdown(void)$/;"	f
net_monitor_state_changed	./libroutermanager/net_monitor.c	/^void net_monitor_state_changed(gboolean state)$/;"	f
net_online	./libroutermanager/net_monitor.c	/^static gboolean net_online = FALSE;$/;"	v	file:
net_remove_event	./libroutermanager/net_monitor.c	/^void net_remove_event(gconstpointer net_event_id)$/;"	f
net_shutdown	./libroutermanager/network.c	/^void net_shutdown(void)$/;"	f
net_state	./libroutermanager/net_monitor.c	/^static inline gchar *net_state(gboolean state)$/;"	f	file:
network_authenticate	./libroutermanager/network.c	/^void network_authenticate(gboolean auth_set, struct auth_data *auth_data)$/;"	f
network_authenticate_cb	./libroutermanager/network.c	/^static void network_authenticate_cb(SoupSession *session, SoupMessage *msg, SoupAuth *auth, gboolean retrying, gpointer user_data)$/;"	f	file:
new_contact	./roger/contacts.c	/^	struct contact *new_contact;$/;"	m	struct:contacts	typeref:struct:contacts::contact	file:
new_node	./libroutermanager/xml.c	/^xmlnode *new_node(const gchar *name, xml_node_type type)$/;"	f
next	./libroutermanager/xml.h	/^	struct xml_node *next;$/;"	m	struct:xml_node	typeref:struct:xml_node::xml_node
next_button	./roger/assistant.c	/^	GtkWidget *next_button;$/;"	m	struct:assistant	file:
next_button_clicked_cb	./roger/assistant.c	/^void next_button_clicked_cb(GtkWidget *next, gpointer user_data)$/;"	f
next_char	./roger/plugins/thunderbird/thunderbird.c	/^static inline gchar next_char(void) {$/;"	f	file:
nodes	./roger/plugins/fritzfon/fritzfon.c	/^	GSList *nodes;$/;"	m	struct:fritzfon_priv	file:
notification	./libroutermanager/connection.h	/^	void *notification;$/;"	m	struct:connection
notification_close	./roger/plugins/notification/notification.c	/^static gboolean notification_close(gpointer window)$/;"	f	file:
notification_gtk_close	./roger/plugins/gtknotify/gtknotify.c	/^static gboolean notification_gtk_close(gpointer window)$/;"	f	file:
notification_gtk_connection_notify_cb	./roger/plugins/gtknotify/gtknotify.c	/^void notification_gtk_connection_notify_cb(AppObject *obj, struct connection *connection, gpointer unused_pointer)$/;"	f
notification_gtk_incoming_toggle_cb	./roger/plugins/gtknotify/gtknotify.c	/^static void notification_gtk_incoming_toggle_cb(GtkCellRendererToggle *toggle, gchar *path_str, gpointer user_data)$/;"	f	file:
notification_gtk_outgoing_toggle_cb	./roger/plugins/gtknotify/gtknotify.c	/^static void notification_gtk_outgoing_toggle_cb(GtkCellRendererToggle *toggle, gchar *path_str, gpointer user_data)$/;"	f	file:
notification_gtk_settings	./roger/plugins/gtknotify/gtknotify.c	/^static GSettings *notification_gtk_settings = NULL;$/;"	v	file:
notification_gtk_settings_refresh_list	./roger/plugins/gtknotify/gtknotify.c	/^void notification_gtk_settings_refresh_list(GtkListStore *list_store)$/;"	f
notification_incoming_toggle_cb	./roger/plugins/notification/notification.c	/^static void notification_incoming_toggle_cb(GtkCellRendererToggle *toggle, gchar *path_str, gpointer user_data)$/;"	f	file:
notification_outgoing_toggle_cb	./roger/plugins/notification/notification.c	/^static void notification_outgoing_toggle_cb(GtkCellRendererToggle *toggle, gchar *path_str, gpointer user_data)$/;"	f	file:
notification_reverse_lookup_thread	./roger/plugins/gtknotify/gtknotify.c	/^static gpointer notification_reverse_lookup_thread(gpointer data)$/;"	f	file:
notification_reverse_lookup_thread	./roger/plugins/notification/notification.c	/^static gpointer notification_reverse_lookup_thread(gpointer data)$/;"	f	file:
notification_settings	./roger/plugins/notification/notification.c	/^static GSettings *notification_settings = NULL;$/;"	v	file:
notification_settings_refresh_list	./roger/plugins/notification/notification.c	/^void notification_settings_refresh_list(GtkListStore *list_store)$/;"	f
notification_update	./roger/plugins/notification/notification.c	/^gboolean notification_update(gpointer data) {$/;"	f
notifications_connection_notify_cb	./roger/plugins/notification/notification.c	/^void notifications_connection_notify_cb(AppObject *obj, struct connection *connection, gpointer unused_pointer)$/;"	f
notify_accept_clicked_cb	./roger/plugins/gtknotify/gtknotify.c	/^static void notify_accept_clicked_cb(GtkWidget *notify, gpointer user_data)$/;"	f	file:
notify_accept_clicked_cb	./roger/plugins/notification/notification.c	/^static void notify_accept_clicked_cb(NotifyNotification *notify, gchar *action, gpointer user_data)$/;"	f	file:
notify_deny_clicked_cb	./roger/plugins/gtknotify/gtknotify.c	/^static void notify_deny_clicked_cb(GtkWidget *notify, gpointer user_data)$/;"	f	file:
notify_deny_clicked_cb	./roger/plugins/notification/notification.c	/^static void notify_deny_clicked_cb(NotifyNotification *notify, gchar *action, gpointer user_data)$/;"	f	file:
num_cnt	./libroutermanager/voxplay.c	/^	gint num_cnt;$/;"	m	struct:vox_playback	file:
num_lines	./roger/print.c	/^	gint num_lines;$/;"	m	struct:__anon26	file:
num_pages	./roger/print.c	/^	gint num_pages;$/;"	m	struct:__anon26	file:
num_persons	./roger/plugins/thunderbird/thunderbird.c	/^static gint num_persons = 0;$/;"	v	file:
num_possible	./roger/plugins/thunderbird/thunderbird.c	/^static gint num_possible = 0;$/;"	v	file:
number	./libroutermanager/contact.h	/^	gchar *number;$/;"	m	struct:contact
number	./libroutermanager/router.h	/^	gchar *number;$/;"	m	struct:phone_number
number	./libroutermanager/router.h	/^	gint number;$/;"	m	struct:phone_port
number	./roger-cli/main_cli.c	/^static gchar *number = NULL;$/;"	v	file:
number	./roger/application.c	/^	gchar *number;$/;"	m	struct:cmd_line_option_state	file:
number	./roger/phone.h	/^	const gchar *number;$/;"	m	struct:phone_state
number_compare	./libroutermanager/plugins/fritzbox/firmware-05-50.c	/^gint number_compare(gconstpointer a, gconstpointer b)$/;"	f
number_compare_04_74	./libroutermanager/plugins/fritzbox/firmware-04-74.c	/^gint number_compare_04_74(gconstpointer a, gconstpointer b)$/;"	f
number_entry_changed_cb	./roger/contacts.c	/^void number_entry_changed_cb(GtkWidget *entry, gpointer user_data)$/;"	f
number_format	./libroutermanager/call.h	/^enum number_format {$/;"	g
number_pos	./roger/print.c	/^	gint number_pos;$/;"	m	struct:__anon26	file:
number_type_changed_cb	./roger/contacts.c	/^void number_type_changed_cb(GtkWidget *combobox, gpointer user_data)$/;"	f
numbers	./libroutermanager/action.h	/^	gchar **numbers;$/;"	m	struct:action
numbers	./libroutermanager/contact.h	/^	GSList *numbers;$/;"	m	struct:contact
offset	./libroutermanager/voxplay.c	/^	gsize offset;$/;"	m	struct:vox_playback	file:
on_context_available	./libroutermanager/ssdp.c	/^static void on_context_available(GUPnPContextManager *manager, GUPnPContext *context, gpointer user_data)$/;"	f	file:
on_match_selected_cb	./roger/phone.c	/^static gboolean on_match_selected_cb(GtkEntryCompletion *completion, GtkTreeModel *model, GtkTreeIter *iter, gpointer user_data)$/;"	f	file:
open	./libroutermanager/audio.h	/^	gpointer (*open)(void);$/;"	m	struct:audio
option_state	./roger/application.c	/^static struct cmd_line_option_state option_state;$/;"	v	typeref:struct:cmd_line_option_state	file:
option_version_cb	./roger/application.c	/^G_GNUC_NORETURN static gboolean option_version_cb(const gchar *option_name, const gchar *value, gpointer data, GError **error)$/;"	f	file:
options	./roger/plugins/vcard/vcard.h	/^	gchar *options;$/;"	m	struct:vcard_data
os_execute	./libroutermanager/osdep.c	/^void os_execute(const gchar *uri)$/;"	f
osxab_book	./roger/plugins/osxab/osxab.c	/^struct address_book osxab_book = {$/;"	v	typeref:struct:address_book
osxab_get_active_book_name	./roger/plugins/osxab/osxab.c	/^gchar *osxab_get_active_book_name(void)$/;"	f
osxab_get_contacts	./roger/plugins/osxab/osxab.c	/^GSList *osxab_get_contacts(void)$/;"	f
osxab_read_book	./roger/plugins/osxab/osxab.c	/^static int osxab_read_book(void) {$/;"	f	file:
osxab_reload_contacts	./roger/plugins/osxab/osxab.c	/^gboolean osxab_reload_contacts(void)$/;"	f
osxab_remove_contact	./roger/plugins/osxab/osxab.c	/^static gboolean osxab_remove_contact(struct contact *contact)$/;"	f	file:
osxab_save_contact	./roger/plugins/osxab/osxab.c	/^static gboolean osxab_save_contact(struct contact *contact)$/;"	f	file:
out_bin	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^	GstElement *out_bin;$/;"	m	struct:pipes	file:
out_fifo	./libroutermanager/plugins/portaudio/portaudio.c	/^	pa_util_ring_buffer out_fifo;$/;"	m	struct:port_private	file:
out_pipe	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^	GstElement *out_pipe;$/;"	m	struct:pipes	file:
out_stream	./libroutermanager/plugins/portaudio/portaudio.c	/^	PaStream *out_stream;$/;"	m	struct:port_private	file:
outgoing_call_begins_checkbutton	./roger/settings.c	/^	GtkWidget *outgoing_call_begins_checkbutton;$/;"	m	struct:settings	file:
outgoing_call_dial_checkbutton	./roger/settings.c	/^	GtkWidget *outgoing_call_dial_checkbutton;$/;"	m	struct:settings	file:
outgoing_call_ends_checkbutton	./roger/settings.c	/^	GtkWidget *outgoing_call_ends_checkbutton;$/;"	m	struct:settings	file:
output_device_list	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^struct pulse_device_list output_device_list[16];$/;"	v	typeref:struct:pulse_device_list
pa_util_advance_ring_buffer_read_index	./libroutermanager/plugins/portaudio/portaudio.c	/^long pa_util_advance_ring_buffer_read_index(pa_util_ring_buffer *ring_buffer, long bytes)$/;"	f
pa_util_advance_ring_buffer_write_index	./libroutermanager/plugins/portaudio/portaudio.c	/^long pa_util_advance_ring_buffer_write_index(pa_util_ring_buffer *ring_buffer, long bytes)$/;"	f
pa_util_flush_ring_buffer	./libroutermanager/plugins/portaudio/portaudio.c	/^void pa_util_flush_ring_buffer(pa_util_ring_buffer *ring_buffer)$/;"	f
pa_util_get_ring_buffer_read_available	./libroutermanager/plugins/portaudio/portaudio.c	/^long pa_util_get_ring_buffer_read_available(pa_util_ring_buffer *ring_buffer)$/;"	f
pa_util_get_ring_buffer_read_regions	./libroutermanager/plugins/portaudio/portaudio.c	/^long pa_util_get_ring_buffer_read_regions(pa_util_ring_buffer *ring_buffer, long bytes, void **data_ptr1, long *size_ptr1, void **data_ptr2, long *size_ptr2)$/;"	f
pa_util_get_ring_buffer_write_available	./libroutermanager/plugins/portaudio/portaudio.c	/^long pa_util_get_ring_buffer_write_available(pa_util_ring_buffer *ring_buffer)$/;"	f
pa_util_get_ring_buffer_write_regions	./libroutermanager/plugins/portaudio/portaudio.c	/^long pa_util_get_ring_buffer_write_regions(pa_util_ring_buffer *ring_buffer, long bytes, void **data_ptr1, long *size_ptr1, void **data_ptr2, long *size_ptr2)$/;"	f
pa_util_initialize_ring_buffer	./libroutermanager/plugins/portaudio/portaudio.c	/^long pa_util_initialize_ring_buffer(pa_util_ring_buffer *ring_buffer, long bytes, void *data)$/;"	f
pa_util_read_memory_barrier	./libroutermanager/plugins/portaudio/portaudio.c	59;"	d	file:
pa_util_read_memory_barrier	./libroutermanager/plugins/portaudio/portaudio.c	62;"	d	file:
pa_util_read_ring_buffer	./libroutermanager/plugins/portaudio/portaudio.c	/^long pa_util_read_ring_buffer(pa_util_ring_buffer *ring_buffer, void *data, long bytes)$/;"	f
pa_util_ring_buffer	./libroutermanager/plugins/portaudio/portaudio.c	/^struct pa_util_ring_buffer {$/;"	s	file:
pa_util_ring_buffer	./libroutermanager/plugins/portaudio/portaudio.c	/^typedef struct pa_util_ring_buffer pa_util_ring_buffer;$/;"	t	typeref:struct:pa_util_ring_buffer	file:
pa_util_write_memory_barrier	./libroutermanager/plugins/portaudio/portaudio.c	60;"	d	file:
pa_util_write_memory_barrier	./libroutermanager/plugins/portaudio/portaudio.c	63;"	d	file:
pa_util_write_ring_buffer	./libroutermanager/plugins/portaudio/portaudio.c	/^long pa_util_write_ring_buffer(pa_util_ring_buffer *ring_buffer, const void *data, long bytes)$/;"	f
page	./roger/assistant.c	/^	gint page;$/;"	m	struct:assistant	file:
page_current	./libroutermanager/libfaxophone/fax.h	/^	gint page_current;$/;"	m	struct:fax_status
page_total	./libroutermanager/libfaxophone/fax.h	/^	gint page_total;$/;"	m	struct:fax_status
parent	./libroutermanager/appobject.h	/^	GObject parent;$/;"	m	struct:_AppObject
parent	./libroutermanager/xml.h	/^	struct xml_node *parent;$/;"	m	struct:xml_node	typeref:struct:xml_node::xml_node
parent_class	./libroutermanager/appobject.h	/^	GObjectClass parent_class;$/;"	m	struct:_AppObjectClass
parse_cell	./roger/plugins/thunderbird/thunderbird.c	/^static gboolean parse_cell(void) {$/;"	f	file:
parse_char	./roger/plugins/vcard/vcard.c	/^void parse_char(int chr)$/;"	f
parse_comment	./roger/plugins/thunderbird/thunderbird.c	/^static inline gboolean parse_comment(void) {$/;"	f	file:
parse_dict	./roger/plugins/thunderbird/thunderbird.c	/^static gboolean parse_dict(void) {$/;"	f	file:
parse_group	./roger/plugins/thunderbird/thunderbird.c	/^static gchar parse_group(void) {$/;"	f	file:
parse_meta	./roger/plugins/thunderbird/thunderbird.c	/^static gchar parse_meta(gchar character) {$/;"	f	file:
parse_mork	./roger/plugins/thunderbird/thunderbird.c	/^static gboolean parse_mork(void) {$/;"	f	file:
parse_person	./roger/plugins/fritzfon/fritzfon.c	/^static void parse_person(struct contact *contact, xmlnode *person)$/;"	f	file:
parse_person	./roger/plugins/thunderbird/thunderbird.c	/^static void parse_person(GHashTable *map, gpointer pId) {$/;"	f	file:
parse_row	./roger/plugins/thunderbird/thunderbird.c	/^static gchar parse_row(int table_id, int table_scope) {$/;"	f	file:
parse_scope_id	./roger/plugins/thunderbird/thunderbird.c	/^static void parse_scope_id(GString *text, gint *id, gint *scope) {$/;"	f	file:
parse_table	./roger/plugins/thunderbird/thunderbird.c	/^static gboolean parse_table(void) {$/;"	f	file:
parse_tables	./roger/plugins/thunderbird/thunderbird.c	/^static void parse_tables(void) {$/;"	f	file:
parse_telephony	./roger/plugins/fritzfon/fritzfon.c	/^static void parse_telephony(struct contact *contact, xmlnode *telephony)$/;"	f	file:
password	./libroutermanager/network.h	/^	gchar *password;$/;"	m	struct:auth_data
password	./libroutermanager/router.h	/^	gchar *password;$/;"	m	struct:router_info
password	./roger/assistant.c	/^	GtkWidget *password;$/;"	m	struct:assistant	file:
password_decode	./libroutermanager/password.c	/^guchar *password_decode(const gchar *in)$/;"	f
password_decrypt	./libroutermanager/password.c	/^static void password_decrypt(gchar *password, guint len)$/;"	f	file:
password_encode	./libroutermanager/password.c	/^gchar *password_encode(const gchar *in)$/;"	f
password_encrypt	./libroutermanager/password.c	/^static void password_encrypt(gchar *password, guint len)$/;"	f	file:
password_manager	./libroutermanager/password.h	/^struct password_manager {$/;"	s
password_manager_find	./libroutermanager/password.c	/^struct password_manager *password_manager_find(struct profile *profile)$/;"	f
password_manager_get_password	./libroutermanager/password.c	/^gchar *password_manager_get_password(struct profile *profile, const gchar *name)$/;"	f
password_manager_get_plugins	./libroutermanager/password.c	/^GSList *password_manager_get_plugins(void)$/;"	f
password_manager_register	./libroutermanager/password.c	/^void password_manager_register(struct password_manager *manager)$/;"	f
password_manager_remove_password	./libroutermanager/password.c	/^gboolean password_manager_remove_password(struct profile *profile, const gchar *name)$/;"	f
password_manager_set_password	./libroutermanager/password.c	/^void password_manager_set_password(struct profile *profile, const gchar *name, const gchar *password)$/;"	f
password_post	./roger/assistant.c	/^static gboolean password_post(struct assistant *assistant)$/;"	f	file:
password_pre	./roger/assistant.c	/^static void password_pre(struct assistant *assistant)$/;"	f	file:
path	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gchar path[128];$/;"	m	struct:voice_data
pattern	./libroutermanager/plugins/reverselookup/reverselookup.h	/^	gchar *pattern;$/;"	m	struct:lookup
phase	./libroutermanager/libfaxophone/fax.h	/^	enum fax_phase phase;$/;"	m	struct:fax_status	typeref:enum:fax_status::fax_phase
phase_handler_b	./libroutermanager/libfaxophone/fax.c	/^static gint phase_handler_b(t30_state_t *state, void *user_data, gint result)$/;"	f	file:
phase_handler_d	./libroutermanager/libfaxophone/fax.c	/^static gint phase_handler_d(t30_state_t *state, void *user_data, gint result)$/;"	f	file:
phase_handler_e	./libroutermanager/libfaxophone/fax.c	/^static void phase_handler_e(t30_state_t *state, void *user_data, gint result)$/;"	f	file:
phone	./libroutermanager/router.h	/^struct phone {$/;"	s
phone_active_call_dialog	./roger/phone.c	/^static void phone_active_call_dialog(GtkWidget *window)$/;"	f	file:
phone_button_new	./roger/phone.c	/^static inline GtkWidget *phone_button_new(const gchar *text_hi, const gchar *text_lo, GtkWidget *icon)$/;"	f	file:
phone_call	./libroutermanager/libfaxophone/phone.c	/^struct capi_connection *phone_call(guchar controller, const char *source, const char *target, gboolean anonymous)$/;"	f
phone_conference	./libroutermanager/libfaxophone/phone.c	/^void phone_conference(struct capi_connection *active, struct capi_connection *hold)$/;"	f
phone_connection_failed	./roger/phone.c	/^static void phone_connection_failed(struct phone_state *state)$/;"	f	file:
phone_contact_menu_closed_cb	./roger/phone.c	/^static void phone_contact_menu_closed_cb(GtkWidget *widget, gpointer user_data)$/;"	f	file:
phone_control_button_clear_clicked_cb	./roger/phone.c	/^static void phone_control_button_clear_clicked_cb(GtkWidget *widget, gpointer user_data)$/;"	f	file:
phone_control_button_hold_clicked_cb	./roger/phone.c	/^static void phone_control_button_hold_clicked_cb(GtkWidget *widget, gpointer user_data)$/;"	f	file:
phone_control_button_mute_clicked_cb	./roger/phone.c	/^static void phone_control_button_mute_clicked_cb(GtkWidget *widget, gpointer user_data)$/;"	f	file:
phone_control_button_record_clicked_cb	./roger/phone.c	/^static void phone_control_button_record_clicked_cb(GtkWidget *widget, gpointer user_data)$/;"	f	file:
phone_control_buttons_new	./roger/phone.c	/^GtkWidget *phone_control_buttons_new(struct phone_state *state)$/;"	f
phone_control_buttons_reset	./roger/phone.c	/^static void phone_control_buttons_reset(struct phone_state *state)$/;"	f	file:
phone_control_buttons_set_sensitive	./roger/phone.c	/^static void phone_control_buttons_set_sensitive(struct phone_state *state, gboolean status)$/;"	f	file:
phone_destroy_contacts	./roger/phone.c	/^static void phone_destroy_contacts(GtkWidget *widget, gpointer user_data)$/;"	f	file:
phone_device	./roger/phone.h	/^struct phone_device {$/;"	s
phone_device_fax	./roger/fax.c	/^struct phone_device phone_device_fax = {$/;"	v	typeref:struct:phone_device
phone_device_voice	./roger/phone.c	/^struct phone_device phone_device_voice = {$/;"	v	typeref:struct:phone_device
phone_devices	./roger/phone.c	/^struct phone_device *phone_devices[2] = { &phone_device_voice, &phone_device_fax };$/;"	v	typeref:struct:phone_device
phone_dial	./libroutermanager/fax_phone.c	/^struct capi_connection *phone_dial(const gchar *trg_no, gboolean suppress)$/;"	f
phone_dial_buttons_new	./roger/phone.c	/^GtkWidget *phone_dial_buttons_new(GtkWidget *window, struct phone_state *state)$/;"	f
phone_dial_buttons_set_dial	./roger/phone.c	/^void phone_dial_buttons_set_dial(struct phone_state *state, gboolean allow_dial)$/;"	f
phone_dialpad_new	./roger/phone.c	/^GtkWidget *phone_dialpad_new(struct phone_state *state)$/;"	f
phone_dtmf_clicked_cb	./roger/phone.c	/^static void phone_dtmf_clicked_cb(GtkWidget *widget, gpointer user_data)$/;"	f	file:
phone_fax_create_child	./roger/fax.c	/^GtkWidget *phone_fax_create_child(struct phone_state *state, GtkWidget *grid)$/;"	f
phone_fax_create_menu	./roger/fax.c	/^GtkWidget *phone_fax_create_menu(struct profile *profile, struct phone_state *state)$/;"	f
phone_fax_delete	./roger/fax.c	/^void phone_fax_delete(struct phone_state *state)$/;"	f
phone_fax_get_title	./roger/fax.c	/^gchar *phone_fax_get_title(void)$/;"	f
phone_fax_init	./roger/fax.c	/^gboolean phone_fax_init(struct contact *contact, struct connection *connection)$/;"	f
phone_fax_status	./roger/fax.c	/^void phone_fax_status(struct phone_state *state, struct capi_connection *connection)$/;"	f
phone_fax_terminated	./roger/fax.c	/^void phone_fax_terminated(struct phone_state *state, struct capi_connection *connection)$/;"	f
phone_flush	./libroutermanager/libfaxophone/phone.c	/^void phone_flush(struct capi_connection *connection)$/;"	f
phone_get_active_name	./roger/phone.c	/^static gchar *phone_get_active_name(void)$/;"	f	file:
phone_hangup	./libroutermanager/libfaxophone/phone.c	/^void phone_hangup(struct capi_connection *connection)$/;"	f
phone_hold	./libroutermanager/libfaxophone/phone.c	/^void phone_hold(struct capi_connection *connection, guchar hold)$/;"	f
phone_init_data	./libroutermanager/libfaxophone/phone.c	/^void phone_init_data(struct capi_connection *connection)$/;"	f
phone_input_thread	./libroutermanager/libfaxophone/phone.c	/^gpointer phone_input_thread(gpointer data)$/;"	f
phone_item_toggled_cb	./roger/phone.c	/^void phone_item_toggled_cb(GtkCheckMenuItem *item, gpointer user_data)$/;"	f
phone_label	./roger/phone.c	/^static struct phone_label {$/;"	s	file:
phone_labels	./roger/phone.c	/^} phone_labels[] = {$/;"	v	typeref:struct:phone_label	file:
phone_list_box_activated_cb	./roger/phone.c	/^static void phone_list_box_activated_cb(GtkListBox *box, GtkListBoxRow *row, gpointer user_data)$/;"	f	file:
phone_list_box_set_focus	./roger/phone.c	/^static void phone_list_box_set_focus(GtkWidget *scrolled_win, GtkWidget *box, GtkListBoxRow *row)$/;"	f	file:
phone_mute	./libroutermanager/libfaxophone/phone.c	/^void phone_mute(struct capi_connection *connection, guchar mute)$/;"	f
phone_number	./libroutermanager/router.h	/^struct phone_number {$/;"	s
phone_number_type	./libroutermanager/router.h	/^enum phone_number_type {$/;"	g
phone_number_type_to_string	./roger/phone.c	/^static gchar *phone_number_type_to_string(enum phone_number_type type)$/;"	f	file:
phone_pickup	./libroutermanager/libfaxophone/phone.c	/^int phone_pickup(struct capi_connection *connection)$/;"	f
phone_pickup_incoming	./roger/phone.c	/^static void phone_pickup_incoming(struct phone_state *state, struct connection *connection)$/;"	f	file:
phone_port	./libroutermanager/router.h	/^struct phone_port {$/;"	s
phone_ports	./libroutermanager/router.h	/^enum phone_ports {$/;"	g
phone_record	./libroutermanager/libfaxophone/phone.c	/^void phone_record(struct capi_connection *connection, guchar record, const char *dir)$/;"	f
phone_remove_timer	./roger/phone.c	/^void phone_remove_timer(struct phone_state *state)$/;"	f
phone_search_entry_filter_cb	./roger/phone.c	/^static gboolean phone_search_entry_filter_cb(GtkListBoxRow *row, gpointer user_data)$/;"	f	file:
phone_search_entry_icon_press_cb	./roger/phone.c	/^static void phone_search_entry_icon_press_cb(GtkEntry *entry, GtkEntryIconPosition icon_pos, GdkEvent *event, gpointer user_data)$/;"	f	file:
phone_search_entry_key_press_event_cb	./roger/phone.c	/^static gboolean phone_search_entry_key_press_event_cb(GtkWidget *entry, GdkEvent *event, gpointer user_data)$/;"	f	file:
phone_search_entry_new	./roger/phone.c	/^GtkWidget *phone_search_entry_new(GtkWidget *window, struct contact *contact, struct phone_state *state)$/;"	f
phone_search_entry_search_changed_cb	./roger/phone.c	/^static void phone_search_entry_search_changed_cb(GtkSearchEntry *entry, gpointer user_data)$/;"	f	file:
phone_search_entry_set_contact	./roger/phone.c	/^static void phone_search_entry_set_contact(struct phone_state *state, struct contact *contact, gboolean identify)$/;"	f	file:
phone_search_entry_set_contact_by_row	./roger/phone.c	/^static void phone_search_entry_set_contact_by_row(struct phone_state *state, GtkListBoxRow *row)$/;"	f	file:
phone_send_dtmf_code	./libroutermanager/libfaxophone/phone.c	/^void phone_send_dtmf_code(struct capi_connection *connection, guchar code)$/;"	f
phone_session_timer	./roger/phone.h	/^	GTimer *phone_session_timer;$/;"	m	struct:phone_state
phone_session_timer_id	./roger/phone.h	/^	gint phone_session_timer_id;$/;"	m	struct:phone_state
phone_setup_timer	./roger/phone.c	/^void phone_setup_timer(struct phone_state *state)$/;"	f
phone_state	./roger/phone.h	/^struct phone_state {$/;"	s
phone_status_timer_cb	./roger/phone.c	/^static gboolean phone_status_timer_cb(gpointer data)$/;"	f	file:
phone_transfer	./libroutermanager/libfaxophone/phone.c	/^void phone_transfer(struct capi_connection *connection, _cmsg capi_message)$/;"	f
phone_type	./roger/phone.h	/^enum phone_type {$/;"	g
phone_voice_create_child	./roger/phone.c	/^GtkWidget *phone_voice_create_child(struct phone_state *state, GtkWidget *grid)$/;"	f
phone_voice_delete	./roger/phone.c	/^void phone_voice_delete(struct phone_state *state)$/;"	f
phone_voice_get_title	./roger/phone.c	/^gchar *phone_voice_get_title(void)$/;"	f
phone_voice_init	./roger/phone.c	/^gboolean phone_voice_init(struct contact *contact, struct connection *connection)$/;"	f
phone_voice_status	./roger/phone.c	/^void phone_voice_status(struct phone_state *state, struct capi_connection *connection)$/;"	f
phone_voice_terminated	./roger/phone.c	/^void phone_voice_terminated(struct phone_state *state, struct capi_connection *connection)$/;"	f
phone_window	./roger/phone.c	/^static GtkWidget *phone_window = NULL;$/;"	v	file:
phone_window_create_menu	./roger/phone.c	/^static GtkWidget *phone_window_create_menu(struct profile *profile, struct phone_state *state)$/;"	f	file:
phone_window_delete_event_cb	./roger/phone.c	/^static gboolean phone_window_delete_event_cb(GtkWidget *window, GdkEvent *event, gpointer data)$/;"	f	file:
phone_window_new	./roger/phone.c	/^GtkWidget *phone_window_new(enum phone_type type, struct contact *contact, struct connection *connection, gpointer priv)$/;"	f
phonebook_add	./roger/plugins/fritzfon/fritzfon.c	/^static void phonebook_add(struct profile *profile, xmlnode *node)$/;"	f	file:
phonebook_to_xmlnode	./roger/plugins/fritzfon/fritzfon.c	/^xmlnode *phonebook_to_xmlnode(void)$/;"	f
photo_button_clicked_cb	./roger/contacts.c	/^void photo_button_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f
pickup_activated	./roger/application.c	/^static void pickup_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
pickup_button	./roger/phone.h	/^	GtkWidget *pickup_button;$/;"	m	struct:phone_state
pickup_button_clicked_cb	./roger/phone.c	/^static void pickup_button_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f	file:
pipeline_cleaner	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static gboolean pipeline_cleaner(GstBus *bus, GstMessage *message, gpointer pipeline)$/;"	f	file:
pipes	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^struct pipes {$/;"	s	file:
pixbuf_copy_mirror	./roger/journal.c	/^GdkPixbuf *pixbuf_copy_mirror(GdkPixbuf *src)$/;"	f
playback_data	./roger/answeringmachine.c	/^static struct journal_playback *playback_data = NULL;$/;"	v	typeref:struct:journal_playback	file:
playback_thread	./libroutermanager/voxplay.c	/^static gpointer playback_thread(gpointer user_data)$/;"	f	file:
plci	./libroutermanager/libfaxophone/faxophone.h	/^	unsigned long int plci;$/;"	m	struct:capi_connection
plugin_dir	./libroutermanager/routermanager.c	/^static gchar *plugin_dir = NULL;$/;"	v	file:
plugins_extension_added_cb	./libroutermanager/plugins.c	/^static void plugins_extension_added_cb(PeasExtensionSet *set, PeasPluginInfo *info, PeasExtension *exten, gpointer unused)$/;"	f	file:
plugins_extension_removed_cb	./libroutermanager/plugins.c	/^static void plugins_extension_removed_cb(PeasExtensionSet *set, PeasPluginInfo *info, PeasExtension *exten, gpointer unused)$/;"	f	file:
plugins_init	./libroutermanager/plugins.c	/^void plugins_init(void)$/;"	f
plugins_shutdown	./libroutermanager/plugins.c	/^void plugins_shutdown(void)$/;"	f
plugins_user_plugins	./libroutermanager/plugins.c	/^void plugins_user_plugins(void)$/;"	f
pm_plugins	./libroutermanager/password.c	/^static GSList *pm_plugins = NULL;$/;"	v	file:
port_audio	./libroutermanager/plugins/portaudio/portaudio.c	/^struct audio port_audio = {$/;"	v	typeref:struct:audio
port_audio_close	./libroutermanager/plugins/portaudio/portaudio.c	/^int port_audio_close(void *priv)$/;"	f
port_audio_detect_devices	./libroutermanager/plugins/portaudio/portaudio.c	/^static GSList *port_audio_detect_devices(void)$/;"	f	file:
port_audio_init	./libroutermanager/plugins/portaudio/portaudio.c	/^static int port_audio_init(unsigned char channels, unsigned short sample_rate, unsigned char bits_per_sample)$/;"	f	file:
port_audio_open	./libroutermanager/plugins/portaudio/portaudio.c	/^static void *port_audio_open(void)$/;"	f	file:
port_audio_read	./libroutermanager/plugins/portaudio/portaudio.c	/^static gsize port_audio_read(void *priv, guchar *data, gsize size)$/;"	f	file:
port_audio_shutdown	./libroutermanager/plugins/portaudio/portaudio.c	/^int port_audio_shutdown(void)$/;"	f
port_audio_write	./libroutermanager/plugins/portaudio/portaudio.c	/^static gsize port_audio_write(void *priv, guchar *data, gsize size)$/;"	f	file:
port_bits_per_sample	./libroutermanager/plugins/portaudio/portaudio.c	/^static gint port_bits_per_sample = 16;$/;"	v	file:
port_channels	./libroutermanager/plugins/portaudio/portaudio.c	/^static gint port_channels = 1;$/;"	v	file:
port_private	./libroutermanager/plugins/portaudio/portaudio.c	/^struct port_private {$/;"	s	file:
port_sample_rate	./libroutermanager/plugins/portaudio/portaudio.c	/^static gint port_sample_rate = 8000;$/;"	v	file:
position	./libroutermanager/libfaxophone/faxophone.h	/^	gint64 position;$/;"	m	struct:record_channel
post	./roger/assistant.c	/^	gboolean (*post)(struct assistant *assistant);$/;"	m	struct:assistant_page	file:
pre	./roger/assistant.c	/^	void (*pre)(struct assistant *assistant);$/;"	m	struct:assistant_page	file:
pref_filters_add_rule	./roger/settings.c	/^static void pref_filters_add_rule(gpointer grid_ptr, struct filter_rule *rule)$/;"	f	file:
pref_filters_current_rules	./roger/settings.c	/^static GSList *pref_filters_current_rules;$/;"	v	file:
pref_group_create	./roger/settings.c	/^GtkWidget *pref_group_create(GtkWidget *box, gchar *title_str, gboolean hexpand, gboolean vexpand)$/;"	f
preferences_activated	./roger/application.c	/^static void preferences_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
prefix	./libroutermanager/call.h	/^	gchar *prefix;$/;"	m	struct:call_by_call_entry
prefix	./libroutermanager/plugins/reverselookup/reverselookup.h	/^	gboolean prefix;$/;"	m	struct:lookup
prefix	./libroutermanager/xml.h	/^	gchar *prefix;$/;"	m	struct:xml_node
prefix_length	./libroutermanager/call.h	/^	gint prefix_length;$/;"	m	struct:call_by_call_entry
preprocess_state	./libroutermanager/plugins/portaudio/portaudio.c	/^	SpeexPreprocessState *preprocess_state;$/;"	m	struct:port_private	file:
present	./libroutermanager/router.h	/^	gboolean (*present)(struct router_info *router_info);$/;"	m	struct:router
print_journal_activated	./roger/journal.c	/^void print_journal_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f
print_server_thread	./libroutermanager/fax_server.c	/^gpointer print_server_thread(gpointer data)$/;"	f
priv	./libroutermanager/call.h	/^	gchar *priv;$/;"	m	struct:call
priv	./libroutermanager/connection.h	/^	void *priv;$/;"	m	struct:connection
priv	./libroutermanager/contact.h	/^	gpointer priv;$/;"	m	struct:contact
priv	./libroutermanager/libfaxophone/faxophone.h	/^	void *priv;$/;"	m	struct:capi_connection
priv	./roger/phone.h	/^	gpointer priv;$/;"	m	struct:phone_state
process_address	./roger/plugins/vcard/vcard.c	/^static void process_address(struct vcard_data *card_data, struct contact *contact)$/;"	f	file:
process_card_end	./roger/plugins/vcard/vcard.c	/^static void process_card_end(struct contact *contact)$/;"	f	file:
process_data	./roger/plugins/vcard/vcard.c	/^static void process_data(struct vcard_data *card_data)$/;"	f	file:
process_first_last_name	./roger/plugins/vcard/vcard.c	/^static void process_first_last_name(struct vcard_data *card_data)$/;"	f	file:
process_formatted_name	./roger/plugins/vcard/vcard.c	/^static void process_formatted_name(struct vcard_data *card_data, struct contact *contact)$/;"	f	file:
process_organization	./roger/plugins/vcard/vcard.c	/^static void process_organization(struct vcard_data *card_data)$/;"	f	file:
process_photo	./roger/plugins/vcard/vcard.c	/^static void process_photo(struct vcard_data *card_data, struct contact *contact)$/;"	f	file:
process_telephone	./roger/plugins/vcard/vcard.c	/^static void process_telephone(struct vcard_data *card_data, struct contact *contact)$/;"	f	file:
process_title	./roger/plugins/vcard/vcard.c	/^static void process_title(struct vcard_data *card_data)$/;"	f	file:
process_uid	./roger/plugins/vcard/vcard.c	/^static void process_uid(struct vcard_data *card_data, struct contact *contact)$/;"	f	file:
profile	./libroutermanager/profile.h	/^struct profile {$/;"	s
profile	./roger/application.c	/^	gchar *profile;$/;"	m	struct:cmd_line_option_state	file:
profile	./roger/assistant.c	/^	struct profile *profile;$/;"	m	struct:assistant	typeref:struct:assistant::profile	file:
profile_active	./libroutermanager/profile.c	/^static struct profile *profile_active = NULL;$/;"	v	typeref:struct:profile	file:
profile_add	./libroutermanager/profile.c	/^void profile_add(struct profile *profile)$/;"	f
profile_commit	./libroutermanager/profile.c	/^void profile_commit(void)$/;"	f
profile_detect_active	./libroutermanager/profile.c	/^gboolean profile_detect_active(void)$/;"	f
profile_entry_changed	./roger/assistant.c	/^void profile_entry_changed(GtkEditable *entry, gpointer user_data)$/;"	f
profile_free_entry	./libroutermanager/profile.c	/^static void profile_free_entry(gpointer data)$/;"	f	file:
profile_get_active	./libroutermanager/profile.c	/^struct profile *profile_get_active(void)$/;"	f
profile_get_list	./libroutermanager/profile.c	/^GSList *profile_get_list(void)$/;"	f
profile_init	./libroutermanager/profile.c	/^gboolean profile_init(void)$/;"	f
profile_list	./libroutermanager/profile.c	/^static GSList *profile_list = NULL;$/;"	v	file:
profile_load	./libroutermanager/profile.c	/^static void profile_load(const gchar *name)$/;"	f	file:
profile_name	./roger/assistant.c	/^	GtkWidget *profile_name;$/;"	m	struct:assistant	file:
profile_new	./libroutermanager/profile.c	/^struct profile *profile_new(const gchar *name)$/;"	f
profile_post	./roger/assistant.c	/^static gboolean profile_post(struct assistant *assistant)$/;"	f	file:
profile_pre	./roger/assistant.c	/^static void profile_pre(struct assistant *assistant)$/;"	f	file:
profile_remove	./libroutermanager/profile.c	/^void profile_remove(struct profile *profile)$/;"	f
profile_set_active	./libroutermanager/profile.c	/^void profile_set_active(struct profile *profile)$/;"	f
profile_set_host	./libroutermanager/profile.c	/^void profile_set_host(struct profile *profile, const gchar *host)$/;"	f
profile_set_login_password	./libroutermanager/profile.c	/^void profile_set_login_password(struct profile *profile, const gchar *password)$/;"	f
profile_set_login_user	./libroutermanager/profile.c	/^void profile_set_login_user(struct profile *profile, const gchar *user)$/;"	f
profile_shutdown	./libroutermanager/profile.c	/^void profile_shutdown(void)$/;"	f
progress_bar	./roger/fax.h	/^	GtkWidget *progress_bar;$/;"	m	struct:fax_ui
progress_status	./libroutermanager/libfaxophone/fax.h	/^	gboolean progress_status;$/;"	m	struct:fax_status
ptr	./roger/roger_gresource.c	/^static const SECTION union { const guint8 data[174877]; const double alignment; void * const ptr;}  roger_resource_data = { {$/;"	m	union:__anon11	file:
pulse_audio	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^struct audio pulse_audio = {$/;"	v	typeref:struct:audio
pulse_audio_close	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static int pulse_audio_close(void *priv)$/;"	f	file:
pulse_audio_detect_devices	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^GSList *pulse_audio_detect_devices(void)$/;"	f
pulse_audio_init	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static int pulse_audio_init(unsigned char channels, unsigned short sample_rate, unsigned char bits_per_sample)$/;"	f	file:
pulse_audio_open	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static void *pulse_audio_open(void)$/;"	f	file:
pulse_audio_read	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static gsize pulse_audio_read(void *priv, guchar *buf, gsize len)$/;"	f	file:
pulse_audio_shutdown	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static int pulse_audio_shutdown(void)$/;"	f	file:
pulse_audio_write	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static gsize pulse_audio_write(void *priv, guchar *buf, gsize len)$/;"	f	file:
pulse_bits_per_sample	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static gint pulse_bits_per_sample = 16;$/;"	v	file:
pulse_channels	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static gint pulse_channels = 1;$/;"	v	file:
pulse_device_list	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^struct pulse_device_list {$/;"	s	file:
pulse_get_device_list	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static int pulse_get_device_list(struct pulse_device_list *input, struct pulse_device_list *output)$/;"	f	file:
pulse_sample_rate	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static gint pulse_sample_rate = 8000;$/;"	v	file:
pulse_sink_list_cb	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static void pulse_sink_list_cb(pa_context *context, const pa_sink_info *sink_info, int eol, void *user_data)$/;"	f	file:
pulse_source_list_cb	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static void pulse_source_list_cb(pa_context *context, const pa_source_info *source_info, int eol, void *user_data)$/;"	f	file:
pulse_state_cb	./libroutermanager/plugins/pulseaudio/pulseaudio.c	/^static void pulse_state_cb(pa_context *context, void *user_data)$/;"	f	file:
quit	./roger/application.c	/^	gboolean quit;$/;"	m	struct:cmd_line_option_state	file:
quit_activated	./roger/application.c	/^static void quit_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
read	./libroutermanager/audio.h	/^	gsize (*read)(gpointer priv, guchar *buffer, gsize max_len);$/;"	m	struct:audio
read_index	./libroutermanager/plugins/portaudio/portaudio.c	/^	long read_index;$/;"	m	struct:pa_util_ring_buffer	file:
read_xml_from_file	./libroutermanager/xml.c	/^xmlnode *read_xml_from_file(const gchar *file_name)$/;"	f
real_time_frame_handler	./libroutermanager/libfaxophone/fax.c	/^static void real_time_frame_handler(t30_state_t *state, void *user_data, gint direction, const uint8_t *msg, gint len)$/;"	f	file:
reason	./libroutermanager/libfaxophone/faxophone.h	/^	unsigned int reason;$/;"	m	struct:capi_connection
reason_b3	./libroutermanager/libfaxophone/faxophone.h	/^	unsigned int reason_b3;$/;"	m	struct:capi_connection
reconnect	./libroutermanager/router.h	/^	gboolean (*reconnect)(struct profile *profile);$/;"	m	struct:router
reconnect_activated	./roger/application.c	/^static void reconnect_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
record_button	./roger/phone.h	/^	GtkWidget *record_button;$/;"	m	struct:phone_state
record_channel	./libroutermanager/libfaxophone/faxophone.h	/^struct record_channel {$/;"	s
recorder	./libroutermanager/libfaxophone/faxophone.h	/^	struct recorder recorder;$/;"	m	struct:capi_connection	typeref:struct:capi_connection::recorder
recorder	./libroutermanager/libfaxophone/faxophone.h	/^struct recorder {$/;"	s
recording	./libroutermanager/libfaxophone/faxophone.h	/^	int recording;$/;"	m	struct:capi_connection
recording	./libroutermanager/libfaxophone/faxophone.h	/^enum recording {$/;"	g
recording_close	./libroutermanager/libfaxophone/phone.c	/^int recording_close(struct recorder *recorder)$/;"	f
recording_flush	./libroutermanager/libfaxophone/phone.c	/^int recording_flush(struct recorder *recorder, guint last)$/;"	f
recording_init	./libroutermanager/libfaxophone/phone.c	/^int recording_init(struct recorder *recorder)$/;"	f
recording_open	./libroutermanager/libfaxophone/phone.c	/^int recording_open(struct recorder *recorder, char *file)$/;"	f
recording_write	./libroutermanager/libfaxophone/phone.c	/^int recording_write(struct recorder *recorder, short *buf, int size, int channel)$/;"	f
refresh_edit_dialog	./roger/contacts.c	/^void refresh_edit_dialog(struct contact *contact)$/;"	f
refresh_journal_activated	./roger/journal.c	/^void refresh_journal_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f
reload_button_clicked_cb	./roger/settings.c	/^void reload_button_clicked_cb(GtkButton *button, gpointer user_data)$/;"	f
reload_contacts	./libroutermanager/address-book.h	/^	gboolean (*reload_contacts)(void);$/;"	m	struct:address_book
reload_journal	./roger/journal.c	/^static gboolean reload_journal(gpointer user_data)$/;"	f	file:
remote	./libroutermanager/call.h	/^	struct contact *remote;$/;"	m	struct:call	typeref:struct:call::contact
remote	./libroutermanager/libfaxophone/faxophone.h	/^	struct record_channel remote;$/;"	m	struct:recorder	typeref:struct:recorder::record_channel
remote_ident	./libroutermanager/libfaxophone/fax.h	/^	gchar remote_ident[64];$/;"	m	struct:fax_status
remote_label	./roger/fax.h	/^	GtkWidget *remote_label;$/;"	m	struct:fax_ui
remote_number	./libroutermanager/connection.h	/^	gchar *remote_number;$/;"	m	struct:connection
remote_number	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gchar remote_number[54];$/;"	m	struct:voice_data
remove_address_clicked_cb	./roger/contacts.c	/^void remove_address_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f
remove_button	./roger/contacts.c	/^	GtkWidget *remove_button;$/;"	m	struct:contacts	file:
remove_button_clicked_cb	./roger/contacts.c	/^void remove_button_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f
remove_button_clicked_cb	./roger/settings.c	/^static void remove_button_clicked_cb(GtkWidget *widget, gpointer grid_ptr)$/;"	f	file:
remove_contact	./libroutermanager/address-book.h	/^	gboolean (*remove_contact)(struct contact *contact);$/;"	m	struct:address_book
remove_password	./libroutermanager/password.h	/^	gboolean (*remove_password)(struct profile *profile, const gchar *name);$/;"	m	struct:password_manager
remove_phone_clicked_cb	./roger/contacts.c	/^void remove_phone_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f
replace_number	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static gchar *replace_number(gchar *url, gchar *full_number)$/;"	f	file:
requested_profile	./libroutermanager/routermanager.c	/^static gchar *requested_profile = NULL;$/;"	v	file:
reserved	./libroutermanager/libfaxophone/faxophone.h	/^	uint32_t reserved[6];$/;"	m	struct:capi_profile
resource_constructor	./roger/roger_gresource.c	/^static void resource_constructor (void)$/;"	f	file:
resource_destructor	./roger/roger_gresource.c	/^static void resource_destructor (void)$/;"	f	file:
response	./libroutermanager/ftp.h	/^	gchar *response;$/;"	m	struct:ftp
retry	./libroutermanager/network.h	/^	gboolean retry;$/;"	m	struct:auth_data
reverse_lookup	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static gboolean reverse_lookup(gchar *number, gchar **name, gchar **street, gchar **zip, gchar **city)$/;"	f	file:
ring	./libroutermanager/libfaxophone/faxophone.h	/^	void (*ring)(struct capi_connection *connection);$/;"	m	struct:session_handlers
ringtone_play	./libroutermanager/libfaxophone/ringtone.c	/^void ringtone_play(gint type)$/;"	f
ringtone_stop	./libroutermanager/libfaxophone/ringtone.c	/^void ringtone_stop(void)$/;"	f
ringtone_thread	./libroutermanager/libfaxophone/ringtone.c	/^static gpointer ringtone_thread(gpointer user_data)$/;"	f	file:
rm_error	./libroutermanager/routermanager.h	/^} rm_error;$/;"	t	typeref:enum:__anon27
rm_print_error_quark	./libroutermanager/routermanager.c	/^GQuark rm_print_error_quark(void)$/;"	f
rm_settings_new	./libroutermanager/settings.c	/^GSettings *rm_settings_new(gchar *scheme, gchar *root_path, gchar *file)$/;"	f
rm_settings_new_with_path	./libroutermanager/settings.c	/^GSettings *rm_settings_new_with_path(gchar *scheme, gchar *settings_path, gchar *file)$/;"	f
rm_settings_plugin_new	./libroutermanager/settings.c	/^GSettings *rm_settings_plugin_new(gchar *scheme, gchar *name)$/;"	f
roger_app	./roger/application.c	/^GtkApplication *roger_app;$/;"	v
roger_get_resource	./roger/roger_gresource.c	/^GResource *roger_get_resource (void)$/;"	f
roger_main	./roger/main_ui.c	/^int roger_main(HINSTANCE hint, int argc, char **argv)$/;"	f
roger_resource_data	./roger/roger_gresource.c	/^static const SECTION union { const guint8 data[174877]; const double alignment; void * const ptr;}  roger_resource_data = { {$/;"	v	typeref:union:__anon11	file:
roger_uses_headerbar	./roger/journal.c	/^gboolean roger_uses_headerbar(void)$/;"	f
router	./libroutermanager/router.h	/^struct router {$/;"	s
router_clear_journal	./libroutermanager/router.c	/^gboolean router_clear_journal(struct profile *profile)$/;"	f
router_delete_fax	./libroutermanager/router.c	/^gboolean router_delete_fax(struct profile *profile, const gchar *filename)$/;"	f
router_delete_voice	./libroutermanager/router.c	/^gboolean router_delete_voice(struct profile *profile, const gchar *filename)$/;"	f
router_dial_number	./libroutermanager/router.c	/^gboolean router_dial_number(struct profile *profile, gint port, const gchar *number)$/;"	f
router_dial_port	./libroutermanager/router.h	/^enum router_dial_port {$/;"	g
router_entry_changed	./roger/assistant.c	/^void router_entry_changed(GtkEditable *entry, gpointer user_data)$/;"	f
router_free_phone_list	./libroutermanager/router.c	/^void router_free_phone_list(GSList *phone_list)$/;"	f
router_get_area_code	./libroutermanager/router.c	/^gchar *router_get_area_code(struct profile *profile)$/;"	f
router_get_country_code	./libroutermanager/router.c	/^gchar *router_get_country_code(struct profile *profile)$/;"	f
router_get_ftp_password	./libroutermanager/router.c	/^gchar *router_get_ftp_password(struct profile *profile)$/;"	f
router_get_ftp_user	./libroutermanager/router.c	/^gchar *router_get_ftp_user(struct profile *profile)$/;"	f
router_get_host	./libroutermanager/router.c	/^gchar *router_get_host(struct profile *profile)$/;"	f
router_get_international_prefix	./libroutermanager/router.c	/^gchar *router_get_international_prefix(struct profile *profile)$/;"	f
router_get_ip	./libroutermanager/router.c	/^gchar *router_get_ip(struct profile *profile)$/;"	f
router_get_login_password	./libroutermanager/router.c	/^gchar *router_get_login_password(struct profile *profile)$/;"	f
router_get_login_user	./libroutermanager/router.c	/^gchar *router_get_login_user(struct profile *profile)$/;"	f
router_get_name	./libroutermanager/router.c	/^const gchar *router_get_name(struct profile *profile)$/;"	f
router_get_national_prefix	./libroutermanager/router.c	/^gchar *router_get_national_prefix(struct profile *profile)$/;"	f
router_get_numbers	./libroutermanager/router.c	/^gchar **router_get_numbers(struct profile *profile)$/;"	f
router_get_phone_list	./libroutermanager/router.c	/^GSList *router_get_phone_list(struct profile *profile)$/;"	f
router_get_phone_port	./libroutermanager/router.c	/^gint router_get_phone_port(struct profile *profile)$/;"	f
router_get_settings	./libroutermanager/router.c	/^gboolean router_get_settings(struct profile *profile)$/;"	f
router_get_suppress_state	./libroutermanager/router.c	/^gboolean router_get_suppress_state(struct profile *profile)$/;"	f
router_get_version	./libroutermanager/router.c	/^const gchar *router_get_version(struct profile *profile)$/;"	f
router_hangup	./libroutermanager/router.c	/^gboolean router_hangup(struct profile *profile, gint port, const gchar *number)$/;"	f
router_info	./libroutermanager/profile.h	/^	struct router_info *router_info;$/;"	m	struct:profile	typeref:struct:profile::router_info
router_info	./libroutermanager/router.h	/^struct router_info {$/;"	s
router_info_free	./libroutermanager/router.c	/^gboolean router_info_free(struct router_info *info)$/;"	f
router_init	./libroutermanager/router.c	/^gboolean router_init(void)$/;"	f
router_is_cable	./libroutermanager/router.c	/^gboolean router_is_cable(struct profile *profile)$/;"	f
router_is_locked	./libroutermanager/router.c	/^gboolean router_is_locked(void)$/;"	f
router_list	./libroutermanager/router.c	/^static GSList *router_list = NULL;$/;"	v	file:
router_listbox	./roger/assistant.c	/^	GtkWidget *router_listbox;$/;"	m	struct:assistant	file:
router_listbox_destroy	./roger/assistant.c	/^static void router_listbox_destroy(GtkWidget *widget, gpointer user_data)$/;"	f	file:
router_listbox_row_activated_cb	./roger/assistant.c	/^void router_listbox_row_activated_cb(GtkListBox *box, GtkListBoxRow *row, gpointer user_data)$/;"	f
router_load_fax	./libroutermanager/router.c	/^gchar *router_load_fax(struct profile *profile, const gchar *filename, gsize *len)$/;"	f
router_load_fax_reports	./libroutermanager/router.c	/^GSList *router_load_fax_reports(struct profile *profile, GSList *journal)$/;"	f
router_load_journal	./libroutermanager/router.c	/^gboolean router_load_journal(struct profile *profile)$/;"	f
router_load_voice	./libroutermanager/router.c	/^gchar *router_load_voice(struct profile *profile, const gchar *name, gsize *len)$/;"	f
router_load_voice_records	./libroutermanager/router.c	/^GSList *router_load_voice_records(struct profile *profile, GSList *journal)$/;"	f
router_login	./libroutermanager/router.c	/^gboolean router_login(struct profile *profile)$/;"	f
router_login_blocked	./libroutermanager/router.c	/^static gboolean router_login_blocked = FALSE;$/;"	v	file:
router_logout	./libroutermanager/router.c	/^gboolean router_logout(struct profile *profile)$/;"	f
router_phone_ports	./libroutermanager/router.c	/^struct phone_port router_phone_ports[PORT_MAX] = {$/;"	v	typeref:struct:phone_port
router_post	./roger/assistant.c	/^static gboolean router_post(struct assistant *assistant)$/;"	f	file:
router_pre	./roger/assistant.c	/^static void router_pre(struct assistant *assistant)$/;"	f	file:
router_present	./libroutermanager/router.c	/^gboolean router_present(struct router_info *router_info)$/;"	f
router_process_journal	./libroutermanager/router.c	/^void router_process_journal(GSList *journal)$/;"	f
router_reconnect	./libroutermanager/router.c	/^gboolean router_reconnect(struct profile *profile)$/;"	f
router_release_lock	./libroutermanager/router.c	/^void router_release_lock(void)$/;"	f
router_row_selected_cb	./roger/assistant.c	/^void router_row_selected_cb(GtkListBox *box, GtkListBoxRow *row, gpointer user_data)$/;"	f
router_set_phone_port	./libroutermanager/router.c	/^void router_set_phone_port(struct profile *profile, gint port)$/;"	f
router_shutdown	./libroutermanager/router.c	/^void router_shutdown(void)$/;"	f
router_stack	./roger/assistant.c	/^	GtkWidget *router_stack;$/;"	m	struct:assistant	file:
router_stack_changed_cb	./roger/assistant.c	/^static void router_stack_changed_cb(GtkEditable *entry, gpointer user_data)$/;"	f	file:
routermanager_address_book_register	./libroutermanager/address-book.c	/^void routermanager_address_book_register(struct address_book *book)$/;"	f
routermanager_address_book_unregister	./libroutermanager/address-book.c	/^void routermanager_address_book_unregister(struct address_book *book)$/;"	f
routermanager_audio_register	./libroutermanager/audio.c	/^void routermanager_audio_register(struct audio *audio)$/;"	f
routermanager_get_requested_profile	./libroutermanager/routermanager.c	/^gchar *routermanager_get_requested_profile(void)$/;"	f
routermanager_init	./libroutermanager/routermanager.c	/^gboolean routermanager_init(GError **error)$/;"	f
routermanager_lookup	./libroutermanager/lookup.c	/^gboolean routermanager_lookup(gchar *number, gchar **name, gchar **address, gchar **zip, gchar **city)$/;"	f
routermanager_lookup_register	./libroutermanager/lookup.c	/^gboolean routermanager_lookup_register(lookup_func lookup)$/;"	f
routermanager_new	./libroutermanager/routermanager.c	/^gboolean routermanager_new(gboolean debug, GError **error)$/;"	f
routermanager_plugins_add_search_path	./libroutermanager/plugins.c	/^void routermanager_plugins_add_search_path(gchar *path)$/;"	f
routermanager_router_register	./libroutermanager/router.c	/^gboolean routermanager_router_register(struct router *router)$/;"	f
routermanager_set_requested_profile	./libroutermanager/routermanager.c	/^void routermanager_set_requested_profile(gchar *name)$/;"	f
routermanager_shutdown	./libroutermanager/routermanager.c	/^void routermanager_shutdown(void)$/;"	f
routers	./libroutermanager/ssdp.c	/^static GList *routers = NULL;$/;"	v	file:
row_activated_foreach	./roger/journal.c	/^void row_activated_foreach(GtkTreeModel *model, GtkTreePath *path, GtkTreeIter *iter, gpointer data)$/;"	f
rules	./libroutermanager/filter.h	/^	GSList *rules;$/;"	m	struct:filter
save_button	./roger/contacts.c	/^	GtkWidget *save_button;$/;"	m	struct:contacts	file:
save_column_state	./roger/journal.c	/^static gboolean save_column_state(gpointer data)$/;"	f	file:
save_contact	./libroutermanager/address-book.h	/^	gboolean (*save_contact)(struct contact *contact);$/;"	m	struct:address_book
save_password_callback	./libroutermanager/network.c	/^static void save_password_callback(SoupMessage* msg, struct auth_data *auth_data)$/;"	f	file:
scale	./roger/answeringmachine.c	/^	GtkWidget *scale;$/;"	m	struct:journal_playback	file:
scan	./roger/assistant.c	/^static gboolean scan(gpointer user_data)$/;"	f	file:
scrolled_win	./roger/phone.h	/^	GtkWidget *scrolled_win;$/;"	m	struct:phone_state
search	./libroutermanager/libfaxophone/ringtone.c	/^static int search(int val, short *table, int size)$/;"	f	file:
search_active	./roger/journal.c	/^static gboolean search_active = FALSE;$/;"	v	file:
search_entry	./roger/contacts.c	/^	GtkWidget *search_entry;$/;"	m	struct:contacts	file:
search_entry	./roger/phone.h	/^	GtkWidget *search_entry;$/;"	m	struct:phone_state
search_entry_changed	./roger/journal.c	/^void search_entry_changed(GtkEditable *entry, GtkTreeView *view)$/;"	f
search_entry_search_changed_cb	./roger/contacts.c	/^void search_entry_search_changed_cb(GtkSearchEntry *entry, gpointer user_data)$/;"	f
search_path_list	./libroutermanager/plugins.c	/^static GSList *search_path_list = NULL;$/;"	v	file:
seconds	./libroutermanager/voxplay.c	/^	gfloat seconds;$/;"	m	struct:vox_playback	file:
secret	./libroutermanager/plugins/secret/secret.c	/^struct password_manager secret = {$/;"	v	typeref:struct:password_manager
secret_get_password	./libroutermanager/plugins/secret/secret.c	/^static gchar *secret_get_password(struct profile *profile, const gchar *name)$/;"	f	file:
secret_remove_password	./libroutermanager/plugins/secret/secret.c	/^static gboolean secret_remove_password(struct profile *profile, const gchar *name)$/;"	f	file:
secret_store_password	./libroutermanager/plugins/secret/secret.c	/^static void secret_store_password(struct profile *profile, const gchar *name, const gchar *password)$/;"	f	file:
security_plugin_combobox	./roger/settings.c	/^	GtkWidget *security_plugin_combobox;$/;"	m	struct:settings	file:
seg_end	./libroutermanager/libfaxophone/ringtone.c	/^static short seg_end[8] = {0xFF, 0x1FF, 0x3FF, 0x7FF, 0xFFF, 0x1FFF, 0x3FFF, 0x7FFF};$/;"	v	file:
selected_action	./roger/settings.c	/^static struct action *selected_action = NULL;$/;"	v	typeref:struct:action	file:
selected_incoming_numbers	./roger/plugins/gnotification/gnotification.c	/^static gchar **selected_incoming_numbers = NULL;$/;"	v	file:
selected_incoming_numbers	./roger/plugins/gtknotify/gtknotify.c	/^static gchar **selected_incoming_numbers = NULL;$/;"	v	file:
selected_incoming_numbers	./roger/plugins/notification/notification.c	/^static gchar **selected_incoming_numbers = NULL;$/;"	v	file:
selected_numbers	./roger/settings.c	/^static gchar **selected_numbers = NULL;$/;"	v	file:
selected_outgoing_numbers	./roger/plugins/gnotification/gnotification.c	/^static gchar **selected_outgoing_numbers = NULL;$/;"	v	file:
selected_outgoing_numbers	./roger/plugins/gtknotify/gtknotify.c	/^static gchar **selected_outgoing_numbers = NULL;$/;"	v	file:
selected_outgoing_numbers	./roger/plugins/notification/notification.c	/^static gchar **selected_outgoing_numbers = NULL;$/;"	v	file:
sendfax	./roger-cli/main_cli.c	/^static gboolean sendfax = FALSE;$/;"	v	file:
sending	./libroutermanager/libfaxophone/fax.h	/^	gboolean sending;$/;"	m	struct:fax_status
serial	./libroutermanager/router.h	/^	gchar *serial;$/;"	m	struct:router_info
server	./libroutermanager/ftp.h	/^	gchar *server;$/;"	m	struct:ftp
server	./roger/assistant.c	/^	GtkWidget *server;$/;"	m	struct:assistant	file:
service	./libroutermanager/plugins/reverselookup/reverselookup.h	/^	gchar *service;$/;"	m	struct:lookup
service	./roger/plugins/google/google.c	/^static GDataContactsService *service = NULL;$/;"	v	file:
session	./libroutermanager/fax_phone.c	/^static struct session *session = NULL;$/;"	v	typeref:struct:session	file:
session	./libroutermanager/libfaxophone/faxophone.c	/^static struct session *session = NULL;$/;"	v	typeref:struct:session	file:
session	./libroutermanager/libfaxophone/faxophone.h	/^struct session {$/;"	s
session	./libroutermanager/network.h	/^	SoupSession *session;$/;"	m	struct:auth_data
session_handlers	./libroutermanager/fax_phone.c	/^struct session_handlers session_handlers = {$/;"	v	typeref:struct:session_handlers
session_handlers	./libroutermanager/libfaxophone/faxophone.h	/^struct session_handlers {$/;"	s
session_id	./libroutermanager/router.h	/^	gchar *session_id;$/;"	m	struct:router_info
session_timer	./libroutermanager/router.h	/^	GTimer *session_timer;$/;"	m	struct:router_info
session_type	./libroutermanager/libfaxophone/faxophone.h	/^enum session_type {$/;"	g
set_checkbutton_buttons	./roger/settings.c	/^static void set_checkbutton_buttons(gboolean state)$/;"	f	file:
set_current_row	./roger/plugins/thunderbird/thunderbird.c	/^static inline void set_current_row(int table_scope, int table_id, int row_scope, int row_id) {$/;"	f	file:
set_password	./libroutermanager/password.h	/^	void (*set_password)(struct profile *profile, const gchar *name, const gchar *password);$/;"	m	struct:password_manager
settings	./libroutermanager/action.h	/^	GSettings *settings;$/;"	m	struct:action
settings	./libroutermanager/profile.c	/^static GSettings *settings = NULL;$/;"	v	file:
settings	./libroutermanager/profile.h	/^	GSettings *settings;$/;"	m	struct:profile
settings	./roger/settings.c	/^static struct settings *settings = NULL;$/;"	v	typeref:struct:settings	file:
settings	./roger/settings.c	/^struct settings {$/;"	s	file:
settings_destroy_cb	./roger/settings.c	/^void settings_destroy_cb(GtkWidget *widget, gpointer user_data)$/;"	f
settings_fill_address_book_plugin_combobox	./roger/settings.c	/^void settings_fill_address_book_plugin_combobox(struct settings *settings)$/;"	f
settings_get_window	./roger/settings.c	/^GtkWindow *settings_get_window(void)$/;"	f
settings_notebook_switch_page_cb	./roger/settings.c	/^void settings_notebook_switch_page_cb(GtkNotebook *notebook, GtkWidget *page, guint page_num, gpointer user_data)$/;"	f
settings_refresh_list	./roger/settings.c	/^void settings_refresh_list(GtkListStore *list_store)$/;"	f
sff_clean	./libroutermanager/libfaxophone/sff.c	/^void sff_clean(struct capi_connection *connection)$/;"	f
sff_data	./libroutermanager/libfaxophone/sff.c	/^static gchar *sff_data = NULL;$/;"	v	file:
sff_init_data	./libroutermanager/libfaxophone/sff.c	/^void sff_init_data(struct capi_connection *connection)$/;"	f
sff_len	./libroutermanager/libfaxophone/sff.c	/^static gsize sff_len = 0;$/;"	v	file:
sff_pos	./libroutermanager/libfaxophone/sff.c	/^static gsize sff_pos = 0;$/;"	v	file:
sff_send	./libroutermanager/libfaxophone/sff.c	/^struct capi_connection *sff_send(gchar *sff_file, gint modem, gint ecm, gint controller, const gchar *src_no, const gchar *trg_no, const gchar *ident, const gchar *header, gint call_anonymous)$/;"	f
sff_transfer	./libroutermanager/libfaxophone/sff.c	/^static inline void sff_transfer(struct capi_connection *connection, _cmsg capi_message)$/;"	f	file:
sff_transfer_thread	./libroutermanager/libfaxophone/sff.c	/^gpointer sff_transfer_thread(gpointer data)$/;"	f
shortcuts_activated	./roger/application.c	/^static void shortcuts_activated(GSimpleAction *action, GVariant *parameter, gpointer user_data)$/;"	f	file:
show_text	./roger/print.c	/^void show_text(cairo_t *cairo, PangoLayout *layout, gchar *text, gint width)$/;"	f
signal_id	./libroutermanager/plugins/areacodes_global/areacodes_global.c	/^	guint signal_id;$/;"	m	struct:__anon6	file:
signal_id	./libroutermanager/plugins/reverselookup/reverselookup.c	/^	guint signal_id;$/;"	m	struct:__anon5	file:
signal_id	./libroutermanager/plugins/secret/secret.c	/^	guint signal_id;$/;"	m	struct:__anon2	file:
signal_id	./libroutermanager/plugins/wincred/wincred.c	/^	guint signal_id;$/;"	m	struct:__anon8	file:
signal_id	./roger/plugins/evolution/evolution.c	/^	guint signal_id;$/;"	m	struct:__anon19	file:
signal_id	./roger/plugins/fritzfon/fritzfon.c	/^	guint signal_id;$/;"	m	struct:__anon18	file:
signal_id	./roger/plugins/gnotification/gnotification.c	/^	guint signal_id;$/;"	m	struct:__anon24	file:
signal_id	./roger/plugins/google/google.c	/^	guint signal_id;$/;"	m	struct:__anon25	file:
signal_id	./roger/plugins/gtknotify/gtknotify.c	/^	guint signal_id;$/;"	m	struct:__anon13	file:
signal_id	./roger/plugins/indicator/indicator.c	/^	guint signal_id;$/;"	m	struct:__anon23	file:
signal_id	./roger/plugins/keychain/keychain.c	/^	guint signal_id;$/;"	m	struct:__anon12	file:
signal_id	./roger/plugins/notification/notification.c	/^	guint signal_id;$/;"	m	struct:__anon15	file:
signal_id	./roger/plugins/osxab/osxab.c	/^	guint signal_id;$/;"	m	struct:__anon22	file:
signal_id	./roger/plugins/statusicon/gtk.c	/^	guint signal_id;$/;"	m	struct:__anon14	file:
signal_id	./roger/plugins/thunderbird/thunderbird.c	/^	guint signal_id;$/;"	m	struct:__anon16	file:
signal_id	./roger/plugins/vcard/vcard.c	/^	guint signal_id;$/;"	m	struct:__anon21	file:
signal_id	./roger/plugins/webjournal/webjournal.c	/^	guint signal_id;$/;"	m	struct:__anon20	file:
simple_pwd	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^struct password_manager simple_pwd = {$/;"	v	typeref:struct:password_manager
simple_pwd_file	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^static gchar *simple_pwd_file = NULL;$/;"	v	file:
simple_pwd_get_password	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^static gchar *simple_pwd_get_password(struct profile *profile, const gchar *name)$/;"	f	file:
simple_pwd_group	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^static gchar *simple_pwd_group = NULL;$/;"	v	file:
simple_pwd_keyfile	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^static GKeyFile *simple_pwd_keyfile = NULL;$/;"	v	file:
simple_pwd_remove_password	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^static gboolean simple_pwd_remove_password(struct profile *profile, const gchar *name)$/;"	f	file:
simple_pwd_store_password	./libroutermanager/plugins/simple_pwd/simple_pwd.c	/^static void simple_pwd_store_password(struct profile *profile, const gchar *name, const gchar *password)$/;"	f	file:
size	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guint size;$/;"	m	struct:voice_data
skip	./libroutermanager/plugins/areacodes_global/csv.h	/^	gint skip;$/;"	m	struct:areacode
small_mask	./libroutermanager/plugins/portaudio/portaudio.c	/^	long small_mask;$/;"	m	struct:pa_util_ring_buffer	file:
softphone_controller_combobox	./roger/settings.c	/^	GtkWidget *softphone_controller_combobox;$/;"	m	struct:settings	file:
softphone_msn_combobox	./roger/settings.c	/^	GtkWidget *softphone_msn_combobox;$/;"	m	struct:settings	file:
sortable	./roger/plugins/webjournal/webjournal.c	/^	gchar *sortable;$/;"	m	struct:__anon20	file:
soup_session	./libroutermanager/network.c	/^SoupSession *soup_session = NULL;$/;"	v
source	./libroutermanager/libfaxophone/faxophone.h	/^	char *source;$/;"	m	struct:capi_connection
spandsp_close	./libroutermanager/libfaxophone/fax.c	/^gint spandsp_close(fax_state_t *fax_state)$/;"	f
spandsp_init	./libroutermanager/libfaxophone/fax.c	/^gint spandsp_init(const gchar *tiff_file, gboolean sending, gchar modem, gchar ecm, const gchar *lsi, const gchar *local_header_info, struct capi_connection *connection)$/;"	f
spandsp_msg_log	./libroutermanager/libfaxophone/fax.c	/^static void spandsp_msg_log(gint level, const gchar *text)$/;"	f	file:
spandsp_rx	./libroutermanager/libfaxophone/fax.c	/^gint spandsp_rx(fax_state_t *fax_state, uint8_t *buf, size_t len)$/;"	f
spandsp_tx	./libroutermanager/libfaxophone/fax.c	/^gint spandsp_tx(fax_state_t *fax_state, uint8_t *buf, size_t len)$/;"	f
speex	./libroutermanager/voxplay.c	/^	gpointer speex;$/;"	m	struct:vox_playback	file:
spinner	./roger/journal.c	/^static GtkWidget *spinner = NULL;$/;"	v	file:
src_no	./libroutermanager/libfaxophone/fax.h	/^	gchar src_no[64];$/;"	m	struct:fax_status
ssdp_get_routers	./libroutermanager/ssdp.c	/^GList *ssdp_get_routers(void)$/;"	f
ssdp_init	./libroutermanager/ssdp.c	/^void ssdp_init(void)$/;"	f
stack	./roger/assistant.c	/^	GtkWidget *stack;$/;"	m	struct:assistant	file:
start_hidden	./roger/application.c	/^	gboolean start_hidden;$/;"	m	struct:cmd_line_option_state	file:
start_time	./libroutermanager/libfaxophone/faxophone.h	/^	gint64 start_time;$/;"	m	struct:recorder
startup_called	./roger/application.c	/^static gboolean startup_called = FALSE;$/;"	v	file:
state	./libroutermanager/libfaxophone/faxophone.h	/^	enum state state;$/;"	m	struct:capi_connection	typeref:enum:capi_connection::state
state	./libroutermanager/libfaxophone/faxophone.h	/^enum state {$/;"	g
state	./libroutermanager/voxplay.c	/^	gboolean state;$/;"	m	struct:vox_playback	file:
state	./roger/plugins/vcard/vcard.c	/^static gint state = STATE_NEW;$/;"	v	file:
state	./roger/plugins/vcard/vcard.h	/^	gint state;$/;"	m	struct:vcard_data
static_resource	./roger/roger_gresource.c	/^static GStaticResource static_resource = { roger_resource_data.data, sizeof (roger_resource_data.data), NULL, NULL, NULL };$/;"	v	file:
status	./libroutermanager/libfaxophone/faxophone.h	/^	void (*status)(struct capi_connection *connection, int error_code);$/;"	m	struct:session_handlers
status	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guint status;$/;"	m	struct:voice_data
status	./roger/fax.h	/^	struct fax_status *status;$/;"	m	struct:fax_ui	typeref:struct:fax_ui::fax_status
status	./roger/phone.h	/^	void (*status)(struct phone_state *state, struct capi_connection *connection);$/;"	m	struct:phone_device
statusicon	./roger/plugins/statusicon/gtk.c	/^static GtkStatusIcon *statusicon = NULL;$/;"	v	file:
statusicon_activate_cb	./roger/plugins/statusicon/gtk.c	/^void statusicon_activate_cb(void)$/;"	f
statusicon_combobox_default_changed_cb	./roger/plugins/statusicon/gtk.c	/^void statusicon_combobox_default_changed_cb(GtkComboBox *widget, gpointer user_data)$/;"	f
statusicon_combobox_notify_changed_cb	./roger/plugins/statusicon/gtk.c	/^void statusicon_combobox_notify_changed_cb(GtkComboBox *widget, gpointer user_data)$/;"	f
statusicon_connection_notify_cb	./roger/plugins/statusicon/gtk.c	/^void statusicon_connection_notify_cb(AppObject *obj, struct connection *connection, gpointer unused_pointer)$/;"	f
statusicon_dial_number_cb	./roger/plugins/statusicon/gtk.c	/^void statusicon_dial_number_cb(GtkMenuItem *item, gpointer user_data)$/;"	f
statusicon_journal_cb	./roger/plugins/statusicon/gtk.c	/^void statusicon_journal_cb(void)$/;"	f
statusicon_menu_functions	./roger/plugins/statusicon/gtk.c	/^GtkWidget *statusicon_menu_functions(void)$/;"	f
statusicon_menu_last_calls	./roger/plugins/statusicon/gtk.c	/^GtkWidget *statusicon_menu_last_calls(void)$/;"	f
statusicon_menu_last_calls_group	./roger/plugins/statusicon/gtk.c	/^void statusicon_menu_last_calls_group(GtkWidget *menu, gchar *label, int call_type)$/;"	f
statusicon_phone_cb	./roger/plugins/statusicon/gtk.c	/^void statusicon_phone_cb(GtkWidget *widget, gpointer user_data)$/;"	f
statusicon_popup_menu_cb	./roger/plugins/statusicon/gtk.c	/^void statusicon_popup_menu_cb(GtkStatusIcon *statusicon, guint button, guint activate_time, gpointer user_data)$/;"	f
statusicon_settings	./roger/plugins/statusicon/gtk.c	/^static GSettings *statusicon_settings = NULL;$/;"	v	file:
stream	./libroutermanager/logging.c	/^static GFileOutputStream *stream = NULL;$/;"	v	file:
street	./libroutermanager/contact.h	/^	gchar *street;$/;"	m	struct:contact
street	./libroutermanager/contact.h	/^	gchar *street;$/;"	m	struct:contact_address
street	./libroutermanager/plugins/reverselookup/reverselookup.h	/^	gchar **street;$/;"	m	struct:lookup
street_entry_changed_cb	./roger/contacts.c	/^void street_entry_changed_cb(GtkWidget *entry, gpointer user_data)$/;"	f
strip_html	./libroutermanager/gstring.c	/^gchar *strip_html(gchar *word)$/;"	f
strv_contains	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gboolean strv_contains(const gchar *const *strv, const gchar *str)$/;"	f
strv_remove_duplicates	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gchar **strv_remove_duplicates(gchar **numbers)$/;"	f
styling	./roger/plugins/webjournal/webjournal.c	/^	gchar *styling;$/;"	m	struct:__anon20	file:
sub_type	./libroutermanager/filter.h	/^	gint sub_type;$/;"	m	struct:filter_rule
sub_type	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guint sub_type;$/;"	m	struct:voice_data
sub_type_box_changed_cb	./roger/settings.c	/^static void sub_type_box_changed_cb(GtkWidget *widget, gpointer rule_ptr)$/;"	f	file:
subtext	./roger/phone.c	/^	gchar *subtext;$/;"	m	struct:phone_label	file:
success	./roger-cli/main_cli.c	/^static gboolean success = FALSE;$/;"	v	file:
support1	./libroutermanager/libfaxophone/faxophone.h	/^	uint32_t support1;$/;"	m	struct:capi_profile
support2	./libroutermanager/libfaxophone/faxophone.h	/^	uint32_t support2;$/;"	m	struct:capi_profile
support3	./libroutermanager/libfaxophone/faxophone.h	/^	uint32_t support3;$/;"	m	struct:capi_profile
table	./libroutermanager/address-book.c	/^static GHashTable *table = NULL;$/;"	v	file:
table	./libroutermanager/plugins/areacodes_global/areacodes_global.c	/^	GHashTable *table;$/;"	m	struct:__anon6	file:
table	./libroutermanager/plugins/areacodes_global/csv.h	/^	GHashTable *table;$/;"	m	struct:areacode
table	./libroutermanager/plugins/reverselookup/reverselookup.c	/^	GHashTable *table;$/;"	m	struct:__anon5	file:
table	./libroutermanager/plugins/reverselookup/reverselookup.c	/^static GHashTable *table = NULL;$/;"	v	file:
table	./roger/plugins/google/google.c	/^static GHashTable *table = NULL;$/;"	v	file:
table	./roger/plugins/thunderbird/thunderbird.c	/^static GHashTable *table = NULL;$/;"	v	file:
table_scope_map	./roger/plugins/thunderbird/thunderbird.c	/^static GHashTable *table_scope_map = NULL;$/;"	v	file:
table_y	./roger/settings.c	/^static gint table_y;$/;"	v	file:
target	./libroutermanager/libfaxophone/faxophone.h	/^	char *target;$/;"	m	struct:capi_connection
term_fifo	./libroutermanager/plugins/portaudio/portaudio.c	/^PaError term_fifo(pa_util_ring_buffer *buffer)$/;"	f
terminated	./roger/phone.h	/^	void (*terminated)(struct phone_state *state, struct capi_connection *connection);$/;"	m	struct:phone_device
text	./libroutermanager/fax_spooler.c	/^	gchar *text;$/;"	m	struct:event_translate	file:
text	./roger/phone.c	/^	gchar *text;$/;"	m	struct:phone_label	file:
thread	./libroutermanager/voxplay.c	/^	GThread *thread;$/;"	m	struct:vox_playback	file:
thunderbird_book	./roger/plugins/thunderbird/thunderbird.c	/^struct address_book thunderbird_book = {$/;"	v	typeref:struct:address_book
thunderbird_get_active_book_name	./roger/plugins/thunderbird/thunderbird.c	/^gchar *thunderbird_get_active_book_name(void)$/;"	f
thunderbird_get_contacts	./roger/plugins/thunderbird/thunderbird.c	/^GSList *thunderbird_get_contacts(void)$/;"	f
thunderbird_get_selected_book	./roger/plugins/thunderbird/thunderbird.c	/^static const gchar *thunderbird_get_selected_book(void) {$/;"	f	file:
thunderbird_open_book	./roger/plugins/thunderbird/thunderbird.c	/^static void thunderbird_open_book(gchar *book) {$/;"	f	file:
thunderbird_read_book	./roger/plugins/thunderbird/thunderbird.c	/^static int thunderbird_read_book(void) {$/;"	f	file:
thunderbird_reload_contacts	./roger/plugins/thunderbird/thunderbird.c	/^gboolean thunderbird_reload_contacts(void)$/;"	f
thunderbird_set_selected_book	./roger/plugins/thunderbird/thunderbird.c	/^void thunderbird_set_selected_book(gchar *uri) {$/;"	f
thunderbird_settings	./roger/plugins/thunderbird/thunderbird.c	/^static GSettings *thunderbird_settings = NULL;$/;"	v	file:
tiff_file	./libroutermanager/libfaxophone/fax.h	/^	gchar tiff_file[256];$/;"	m	struct:fax_status
time	./roger/answeringmachine.c	/^	GtkWidget *time;$/;"	m	struct:journal_playback	file:
timediff_str	./roger/phone.c	/^static gchar *timediff_str(struct phone_state *state)$/;"	f	file:
timeout_id	./roger/journal.c	/^static guint timeout_id = 0;$/;"	v	file:
timer	./libroutermanager/ftp.h	/^	GTimer *timer;$/;"	m	struct:ftp
title	./roger/plugins/vcard/vcard.c	/^static GString *title = NULL;$/;"	v	file:
tmp0	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guchar tmp0[24];$/;"	m	struct:voice_data
tmp1	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gchar tmp1[18];$/;"	m	struct:voice_data
tmp2	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guchar tmp2[31];$/;"	m	struct:voice_data
tmp3	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gchar tmp3[4];$/;"	m	struct:voice_data
tmp_contact	./roger/contacts.c	/^	struct contact *tmp_contact;$/;"	m	struct:contacts	typeref:struct:contacts::contact	file:
trg_no	./libroutermanager/libfaxophone/fax.h	/^	gchar trg_no[64];$/;"	m	struct:fax_status
type	./libroutermanager/audio.h	/^	gchar type;$/;"	m	struct:audio_device
type	./libroutermanager/call.h	/^	gint type;$/;"	m	struct:call
type	./libroutermanager/connection.h	/^	guchar type;$/;"	m	struct:connection
type	./libroutermanager/contact.h	/^	gint type;$/;"	m	struct:contact_address
type	./libroutermanager/filter.h	/^	gint type;$/;"	m	struct:filter_rule
type	./libroutermanager/libfaxophone/faxophone.h	/^	enum session_type type;$/;"	m	struct:capi_connection	typeref:enum:capi_connection::session_type
type	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	gint type;$/;"	m	struct:voice_data
type	./libroutermanager/router.h	/^	enum phone_number_type type;$/;"	m	struct:phone_number	typeref:enum:phone_number::phone_number_type
type	./libroutermanager/router.h	/^	gint type;$/;"	m	struct:phone
type	./libroutermanager/router.h	/^	gint type;$/;"	m	struct:phone_port
type	./libroutermanager/xml.h	/^	xml_node_type type;$/;"	m	struct:xml_node
type	./roger/phone.h	/^	enum phone_type type;$/;"	m	struct:phone_state	typeref:enum:phone_state::phone_type
type_box_changed_cb	./roger/settings.c	/^static void type_box_changed_cb(GtkWidget *widget, gpointer next)$/;"	f	file:
type_box_changed_cb2	./roger/settings.c	/^static void type_box_changed_cb2(GtkWidget *widget, gpointer rule_ptr)$/;"	f	file:
ui_bold_text	./roger/uitools.c	/^gchar *ui_bold_text(gchar *text)$/;"	f
ui_label_new	./roger/uitools.c	/^GtkWidget *ui_label_new(gchar *text)$/;"	f
ui_set_button_style	./roger/uitools.c	/^void ui_set_button_style(GtkWidget *widget)$/;"	f
ui_set_destructive_style	./roger/uitools.c	/^void ui_set_destructive_style(GtkWidget *widget)$/;"	f
ui_set_suggested_style	./roger/uitools.c	/^void ui_set_suggested_style(GtkWidget *widget)$/;"	f
uint16_t	./libroutermanager/libfaxophone/faxophone.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	./libroutermanager/libfaxophone/faxophone.h	/^typedef unsigned int uint32_t;$/;"	t
unescape_html	./libroutermanager/xml.c	/^static gchar *unescape_html(const gchar *html)$/;"	f	file:
unichar_for_entity	./libroutermanager/gstring.c	/^static gunichar unichar_for_entity(gchar *entity, gboolean numerical, gboolean iso8859_1, gboolean symbols, gboolean specials, gboolean xml)$/;"	f	file:
unique_id	./roger/plugins/fritzfon/fritzfon.c	/^	gchar *unique_id;$/;"	m	struct:fritzfon_priv	file:
url	./libroutermanager/plugins/reverselookup/reverselookup.h	/^	gchar *url;$/;"	m	struct:lookup
use_buffers	./libroutermanager/libfaxophone/faxophone.h	/^	gboolean use_buffers;$/;"	m	struct:capi_connection
use_gst_device_monitor	./libroutermanager/plugins/gstreamer1/gstreamer.c	/^static gboolean use_gst_device_monitor = FALSE;$/;"	v	file:
use_header	./roger/journal.c	/^static gboolean use_header = FALSE;$/;"	v	file:
user	./libroutermanager/router.h	/^	gchar *user;$/;"	m	struct:router_info
user	./roger/assistant.c	/^	GtkWidget *user;$/;"	m	struct:assistant	file:
user_data	./libroutermanager/net_monitor.h	/^	gpointer user_data;$/;"	m	struct:net_event
username	./libroutermanager/network.h	/^	gchar *username;$/;"	m	struct:auth_data
vcard	./roger/plugins/vcard/vcard.c	/^static GList *vcard = NULL;$/;"	v	file:
vcard	./roger/plugins/vcard/vcard.h	/^struct vcard {$/;"	s
vcard_book	./roger/plugins/vcard/vcard.c	/^struct address_book vcard_book = {$/;"	v	typeref:struct:address_book
vcard_create_uid	./roger/plugins/vcard/vcard.c	/^GString *vcard_create_uid(void)$/;"	f
vcard_data	./roger/plugins/vcard/vcard.h	/^struct vcard_data {$/;"	s
vcard_file_changed_cb	./roger/plugins/vcard/vcard.c	/^static void vcard_file_changed_cb(GFileMonitor *monitor, GFile *file, GFile *other_file, GFileMonitorEvent event_type, gpointer user_data)$/;"	f	file:
vcard_find_entry	./roger/plugins/vcard/vcard.c	/^GList *vcard_find_entry(const gchar *uid)$/;"	f
vcard_free_data	./roger/plugins/vcard/vcard.c	/^static void vcard_free_data(struct vcard_data *card_data)$/;"	f	file:
vcard_get_active_book_name	./roger/plugins/vcard/vcard.c	/^gchar *vcard_get_active_book_name(void)$/;"	f
vcard_get_contacts	./roger/plugins/vcard/vcard.c	/^GSList *vcard_get_contacts(void)$/;"	f
vcard_list	./roger/plugins/vcard/vcard.c	/^static GList *vcard_list = NULL;$/;"	v	file:
vcard_load_file	./roger/plugins/vcard/vcard.c	/^void vcard_load_file(char *file_name)$/;"	f
vcard_modify_data	./roger/plugins/vcard/vcard.c	/^gboolean vcard_modify_data(GList *list, gchar *header, gchar *entry)$/;"	f
vcard_print	./roger/plugins/vcard/vcard.c	/^void vcard_print(GString *data, gchar *format, ...)$/;"	f
vcard_put_char	./roger/plugins/vcard/vcard.c	/^static void vcard_put_char(GString *data, gint chr)$/;"	f	file:
vcard_reload_contacts	./roger/plugins/vcard/vcard.c	/^gboolean vcard_reload_contacts(void)$/;"	f
vcard_remove_contact	./roger/plugins/vcard/vcard.c	/^gboolean vcard_remove_contact(struct contact *contact)$/;"	f
vcard_remove_data	./roger/plugins/vcard/vcard.c	/^GList *vcard_remove_data(GList *list, gchar *header)$/;"	f
vcard_save_contact	./roger/plugins/vcard/vcard.c	/^gboolean vcard_save_contact(struct contact *contact)$/;"	f
vcard_settings	./roger/plugins/vcard/vcard.c	/^static GSettings *vcard_settings = NULL;$/;"	v	file:
vcard_write_file	./roger/plugins/vcard/vcard.c	/^void vcard_write_file(char *file_name)$/;"	f
version	./libroutermanager/router.h	/^	gchar *version;$/;"	m	struct:router_info
view	./roger/print.c	/^	GtkTreeView *view;$/;"	m	struct:__anon26	file:
view_call_type_icons_combobox	./roger/settings.c	/^	GtkWidget *view_call_type_icons_combobox;$/;"	m	struct:settings	file:
view_call_type_icons_combobox_changed_cb	./roger/settings.c	/^void view_call_type_icons_combobox_changed_cb(GtkComboBox *widget, gpointer user_data)$/;"	f
view_port	./roger/contacts.c	/^	GtkWidget *view_port;$/;"	m	struct:contacts	file:
voice_box	./libroutermanager/plugins/fritzbox/firmware-common.h	/^struct voice_box {$/;"	s
voice_boxes	./libroutermanager/plugins/fritzbox/firmware-common.c	/^static struct voice_box voice_boxes[5];$/;"	v	typeref:struct:voice_box	file:
voice_data	./libroutermanager/plugins/fritzbox/firmware-common.h	/^struct voice_data {$/;"	s
vox_data	./roger/answeringmachine.c	/^	gpointer vox_data;$/;"	m	struct:journal_playback	file:
vox_get_fraction	./libroutermanager/voxplay.c	/^gint vox_get_fraction(gpointer vox_data)$/;"	f
vox_get_seconds	./libroutermanager/voxplay.c	/^gfloat vox_get_seconds(gpointer vox_data)$/;"	f
vox_init	./libroutermanager/voxplay.c	/^gpointer vox_init(gchar *data, gsize len, GError **error)$/;"	f
vox_media_button_clicked_cb	./roger/answeringmachine.c	/^void vox_media_button_clicked_cb(GtkWidget *button, gpointer user_data)$/;"	f
vox_play	./libroutermanager/voxplay.c	/^gboolean vox_play(gpointer vox_data)$/;"	f
vox_playback	./libroutermanager/voxplay.c	/^struct vox_playback {$/;"	s	file:
vox_playpause	./libroutermanager/voxplay.c	/^gboolean vox_playpause(gpointer vox_data)$/;"	f
vox_scale_change_value_cb	./roger/answeringmachine.c	/^gboolean vox_scale_change_value_cb(GtkRange *range, GtkScrollType scroll, gdouble value, gpointer user_data)$/;"	f
vox_seek	./libroutermanager/voxplay.c	/^gboolean vox_seek(gpointer vox_data, gdouble pos)$/;"	f
vox_stop	./libroutermanager/voxplay.c	/^gboolean vox_stop(gpointer vox_data)$/;"	f
vox_update_ui	./roger/answeringmachine.c	/^static gboolean vox_update_ui(gpointer data)$/;"	f	file:
webjournal_journal_loaded_cb	./roger/plugins/webjournal/webjournal.c	/^void webjournal_journal_loaded_cb(AppObject *obj, GSList *journal, gpointer user_data)$/;"	f
webjournal_settings	./roger/plugins/webjournal/webjournal.c	/^static GSettings *webjournal_settings = NULL;$/;"	v	file:
welcome_pre	./roger/assistant.c	/^static void welcome_pre(struct assistant *assistant)$/;"	f	file:
win_get_locale	./roger/winmain.c	/^static const wchar_t *win_get_locale(void)$/;"	f	file:
win_lcid_to_posix	./roger/winmain.c	/^static wchar_t *win_lcid_to_posix(LCID lcid)$/;"	f	file:
wincred	./libroutermanager/plugins/wincred/wincred.c	/^struct password_manager wincred = {$/;"	v	typeref:struct:password_manager
wincred_get_password	./libroutermanager/plugins/wincred/wincred.c	/^static gchar *wincred_get_password(struct profile *profile, const gchar *name)$/;"	f	file:
wincred_remove_password	./libroutermanager/plugins/wincred/wincred.c	/^static gboolean wincred_remove_password(struct profile *profile, const gchar *name)$/;"	f	file:
wincred_store_password	./libroutermanager/plugins/wincred/wincred.c	/^static void wincred_store_password(struct profile *profile, const gchar *name, const gchar *password)$/;"	f	file:
window	./roger/assistant.c	/^	GtkWidget *window;$/;"	m	struct:assistant	file:
window	./roger/contacts.c	/^	GtkWidget *window;$/;"	m	struct:contacts	file:
window	./roger/phone.h	/^	GtkWidget *window;$/;"	m	struct:phone_state
window	./roger/settings.c	/^	GtkWidget *window;$/;"	m	struct:settings	file:
window_key_press_event_cb	./roger/journal.c	/^gboolean window_key_press_event_cb(GtkWidget *widget, GdkEvent *event, gpointer user_data)$/;"	f
write	./libroutermanager/audio.h	/^	gsize (*write)(gpointer priv, guchar *buffer, gsize len);$/;"	m	struct:audio
write_index	./libroutermanager/plugins/portaudio/portaudio.c	/^	long write_index;$/;"	m	struct:pa_util_ring_buffer	file:
xml_extract_input_value	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gchar *xml_extract_input_value(const gchar *data, gchar *tag)$/;"	f
xml_extract_input_value_r	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gchar *xml_extract_input_value_r(const gchar *data, gchar *tag)$/;"	f
xml_extract_list_value	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gchar *xml_extract_list_value(const gchar *data, gchar *tag)$/;"	f
xml_extract_tag	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gchar *xml_extract_tag(const gchar *data, gchar *tag)$/;"	f
xml_extract_tag_value	./libroutermanager/plugins/fritzbox/firmware-06-35.c	/^gchar *xml_extract_tag_value(gchar *data, gchar *tag)$/;"	f
xml_extract_tags	./libroutermanager/plugins/fritzbox/firmware-common.c	/^gchar **xml_extract_tags(const gchar *data, gchar *tag_start, gchar *tag_end)$/;"	f
xml_node	./libroutermanager/xml.h	/^typedef struct xml_node {$/;"	s
xml_node_parser_libxml	./libroutermanager/xml.c	/^static xmlSAXHandler xml_node_parser_libxml = {$/;"	v	file:
xml_node_type	./libroutermanager/xml.h	/^} xml_node_type;$/;"	t	typeref:enum:__anon29
xml_ns	./libroutermanager/xml.h	/^	gchar *xml_ns;$/;"	m	struct:xml_node
xmlnode	./libroutermanager/xml.h	/^} xmlnode;$/;"	t	typeref:struct:xml_node
xmlnode_copy	./libroutermanager/xml.c	/^xmlnode *xmlnode_copy(const xmlnode *src)$/;"	f
xmlnode_copy_foreach_ns	./libroutermanager/xml.c	/^static void xmlnode_copy_foreach_ns(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:
xmlnode_free	./libroutermanager/xml.c	/^void xmlnode_free(xmlnode *node)$/;"	f
xmlnode_from_str	./libroutermanager/xml.c	/^xmlnode *xmlnode_from_str(const gchar *str, gssize size)$/;"	f
xmlnode_get_attrib	./libroutermanager/xml.c	/^const gchar *xmlnode_get_attrib(xmlnode *node, const gchar *attr)$/;"	f
xmlnode_get_child	./libroutermanager/xml.c	/^xmlnode *xmlnode_get_child(const xmlnode *parent, const gchar *name)$/;"	f
xmlnode_get_child_with_namespace	./libroutermanager/xml.c	/^xmlnode *xmlnode_get_child_with_namespace(const xmlnode *parent, const gchar *name, const gchar *ns)$/;"	f
xmlnode_get_data	./libroutermanager/xml.c	/^gchar *xmlnode_get_data(xmlnode *node)$/;"	f
xmlnode_get_namespace	./libroutermanager/xml.c	/^const gchar *xmlnode_get_namespace(xmlnode *node)$/;"	f
xmlnode_get_next_twin	./libroutermanager/xml.c	/^xmlnode *xmlnode_get_next_twin(xmlnode *node)$/;"	f
xmlnode_get_prefix	./libroutermanager/xml.c	/^static const gchar *xmlnode_get_prefix(xmlnode *node)$/;"	f	file:
xmlnode_insert_child	./libroutermanager/xml.c	/^void xmlnode_insert_child(xmlnode *parent, xmlnode *child)$/;"	f
xmlnode_insert_data	./libroutermanager/xml.c	/^void xmlnode_insert_data(xmlnode *node, const gchar *data, gssize size)$/;"	f
xmlnode_new	./libroutermanager/xml.c	/^xmlnode *xmlnode_new(const gchar *name)$/;"	f
xmlnode_new_child	./libroutermanager/xml.c	/^xmlnode *xmlnode_new_child(xmlnode *parent, const gchar *name)$/;"	f
xmlnode_parser_element_end_libxml	./libroutermanager/xml.c	/^static void xmlnode_parser_element_end_libxml(void *user_data, const xmlChar *element_name, const xmlChar *prefix, const xmlChar *xml_ns)$/;"	f	file:
xmlnode_parser_element_start_libxml	./libroutermanager/xml.c	/^static void xmlnode_parser_element_start_libxml(void *user_data, const xmlChar *element_name, const xmlChar *prefix,$/;"	f	file:
xmlnode_parser_element_text_libxml	./libroutermanager/xml.c	/^static void xmlnode_parser_element_text_libxml(void *user_data, const xmlChar *text, gint text_len)$/;"	f	file:
xmlnode_parser_error_libxml	./libroutermanager/xml.c	/^static void xmlnode_parser_error_libxml(void *user_data, const gchar *msg, ...)$/;"	f	file:
xmlnode_remove_attrib	./libroutermanager/xml.c	/^static void xmlnode_remove_attrib(xmlnode *node, const gchar *attr)$/;"	f	file:
xmlnode_set_attrib	./libroutermanager/xml.c	/^void xmlnode_set_attrib(xmlnode *node, const gchar *attr, const gchar *value)$/;"	f
xmlnode_set_attrib_with_prefix	./libroutermanager/xml.c	/^static void xmlnode_set_attrib_with_prefix(xmlnode *node, const gchar *attr, const gchar *prefix, const gchar *value)$/;"	f	file:
xmlnode_set_data	./libroutermanager/xml.c	/^gint xmlnode_set_data(xmlnode *node, gchar *data)$/;"	f
xmlnode_set_namespace	./libroutermanager/xml.c	/^void xmlnode_set_namespace(xmlnode *node, const gchar *xml_ns)$/;"	f
xmlnode_set_prefix	./libroutermanager/xml.c	/^static void xmlnode_set_prefix(xmlnode *node, const gchar *prefix)$/;"	f	file:
xmlnode_to_formatted_str	./libroutermanager/xml.c	/^gchar *xmlnode_to_formatted_str(xmlnode *node, gint *len)$/;"	f
xmlnode_to_str_foreach_append_ns	./libroutermanager/xml.c	/^static void xmlnode_to_str_foreach_append_ns(const gchar *key, const gchar *value, GString *buf)$/;"	f	file:
xmlnode_to_str_helper	./libroutermanager/xml.c	/^static gchar *xmlnode_to_str_helper(xmlnode *node, gint *len, gboolean formatting, gint depth)$/;"	f	file:
year	./libroutermanager/plugins/fritzbox/firmware-common.h	/^	guchar year;$/;"	m	struct:voice_data
zip	./libroutermanager/contact.h	/^	gchar *zip;$/;"	m	struct:contact
zip	./libroutermanager/contact.h	/^	gchar *zip;$/;"	m	struct:contact_address
zip_entry_changed_cb	./roger/contacts.c	/^void zip_entry_changed_cb(GtkWidget *entry, gpointer user_data)$/;"	f
zip_len	./libroutermanager/plugins/reverselookup/reverselookup.h	/^	gint zip_len;$/;"	m	struct:lookup
