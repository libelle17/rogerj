# Makefile.in generated by automake 1.13.4 from Makefile.am.
# roger/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/roger-router
pkgincludedir = $(includedir)/roger-router
pkglibdir = $(libdir)/roger-router
pkglibexecdir = $(libexecdir)/roger-router
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = roger$(EXEEXT)
#am__append_1 = \
#	winmain.c

#am__append_2 = roger_winres.res
subdir = roger
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/roger_winres.rc.in $(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/intltool.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/rralib.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = roger_winres.rc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(roger_coredir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(sharedir)"
LTLIBRARIES = $(roger_core_LTLIBRARIES)
libroger_core_la_LIBADD =
am__libroger_core_la_SOURCES_DIST = about.c about.h answeringmachine.c \
	answeringmachine.h application.c application.h assistant.c \
	assistant.h contacts.c contacts.h crash.c crash.h fax.c fax.h \
	icons.c icons.h journal.c journal.h main.h main_ui.c phone.c \
	phone.h print.c print.h settings.c settings.h shortcuts.c \
	shortcuts.h uitools.c uitools.h roger_gresource.c \
	roger_gresource.h
am__objects_1 = libroger_core_la-about.lo \
	libroger_core_la-answeringmachine.lo \
	libroger_core_la-application.lo libroger_core_la-assistant.lo \
	libroger_core_la-contacts.lo libroger_core_la-crash.lo \
	libroger_core_la-fax.lo libroger_core_la-icons.lo \
	libroger_core_la-journal.lo libroger_core_la-main_ui.lo \
	libroger_core_la-phone.lo libroger_core_la-print.lo \
	libroger_core_la-settings.lo libroger_core_la-shortcuts.lo \
	libroger_core_la-uitools.lo \
	libroger_core_la-roger_gresource.lo
#am_libroger_core_la_OBJECTS =  \
#	$(am__objects_1)
#am_libroger_core_la_OBJECTS = $(am__objects_1)
libroger_core_la_OBJECTS = $(am_libroger_core_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libroger_core_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libroger_core_la_CFLAGS) $(CFLAGS) \
	$(libroger_core_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libroger_core_la_rpath = -rpath $(roger_coredir)
#am_libroger_core_la_rpath = -rpath $(roger_coredir)
PROGRAMS = $(bin_PROGRAMS)
am__roger_SOURCES_DIST = about.c about.h answeringmachine.c \
	answeringmachine.h application.c application.h assistant.c \
	assistant.h contacts.c contacts.h crash.c crash.h fax.c fax.h \
	icons.c icons.h journal.c journal.h main.h main_ui.c phone.c \
	phone.h print.c print.h settings.c settings.h shortcuts.c \
	shortcuts.h uitools.c uitools.h roger_gresource.c \
	roger_gresource.h winmain.c
am__objects_2 = roger-about.$(OBJEXT) roger-answeringmachine.$(OBJEXT) \
	roger-application.$(OBJEXT) roger-assistant.$(OBJEXT) \
	roger-contacts.$(OBJEXT) roger-crash.$(OBJEXT) \
	roger-fax.$(OBJEXT) roger-icons.$(OBJEXT) \
	roger-journal.$(OBJEXT) roger-main_ui.$(OBJEXT) \
	roger-phone.$(OBJEXT) roger-print.$(OBJEXT) \
	roger-settings.$(OBJEXT) roger-shortcuts.$(OBJEXT) \
	roger-uitools.$(OBJEXT) roger-roger_gresource.$(OBJEXT)
#am__objects_3 = roger-winmain.$(OBJEXT)
am_roger_OBJECTS = $(am__objects_2) $(am__objects_3)
roger_OBJECTS = $(am_roger_OBJECTS)
roger_LDADD = $(LDADD)
roger_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(roger_CFLAGS) $(CFLAGS) \
	$(roger_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libroger_core_la_SOURCES) $(roger_SOURCES)
DIST_SOURCES = $(am__libroger_core_la_SOURCES_DIST) \
	$(am__roger_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(share_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /root/rogerj/wand/missing aclocal-1.13
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
APPINDICATOR_CFLAGS = 
APPINDICATOR_LIBS = 
AR = ar
AS = as
AUTOCONF = ${SHELL} /root/rogerj/wand/missing autoconf
AUTOHEADER = ${SHELL} /root/rogerj/wand/missing autoheader
AUTOMAKE = ${SHELL} /root/rogerj/wand/missing automake-1.13
AWK = gawk
CAPI_CFLAGS = -I/usr/include/ 
CAPI_LIBS = -lcapi20 
CATALOGS = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
EBOOK_CFLAGS = 
EBOOK_LIBS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
EXTRA_CFLAGS = -pthread -I/usr/local/include/libsoup-2.4 -I/usr/include/gupnp-1.0 -I/usr/include/libxml2 -I/usr/include/uuid -I/usr/include/gssdp-1.0 -I/usr/include/json-glib-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  -g
EXTRA_LIBS = -lspeex -lspeexdsp -lsndfile -lxml2 -lgupnp-1.0 -lgssdp-1.0 -ljson-glib-1.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
FAX_SPOOLER_CFLAGS = 
FAX_SPOOLER_LIBS = 
FGREP = /usr/bin/grep -F
GDATA_CFLAGS = 
GDATA_LIBS = 
GETTEXT_PACKAGE = roger
GLIB_COMPILE_SCHEMAS = glib-compile-schemas
GMODULE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include 
GMODULE_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0 
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GREP = /usr/bin/grep
GSETTINGS_DISABLE_SCHEMAS_COMPILE = 
GSTREAMER1_CFLAGS = 
GSTREAMER1_LIBS = 
GTK_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib64/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include 
GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_MSGMERGE = /usr/bin/msgmerge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL_XGETTEXT = /usr/bin/xgettext
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
KWALLET5_CFLAGS = 
KWALLET5_LIBS = 
KWALLET_CFLAGS = 
KWALLET_LIBS = 
LD = /usr/x86_64-suse-linux/bin/ld -m elf_x86_64
LDFLAGS = 
LIBNOTIFY_CFLAGS = 
LIBNOTIFY_LIBS = 
LIBOBJS = 
LIBS = -ltiff -lgthread-2.0 -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /root/rogerj/wand/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OS_CFLAGS = -DROUTERMANAGER_PLUGINS='"$(libdir)/routermanager/"' -DAPP_PLUGINS='"$(libdir)/roger/"' -DAPP_DATA='"$(datadir)/roger/"' -DAPP_LOCALE='"$(localedir)"' -Wall
OS_LIBS = -rdynamic -lcrypt
OTOOL = 
OTOOL64 = 
PACKAGE = roger-router
PACKAGE_BUGREPORT = http://www.tabos.org
PACKAGE_NAME = Roger Router
PACKAGE_STRING = Roger Router 1.9.3
PACKAGE_TARNAME = roger-router
PACKAGE_URL = 
PACKAGE_VERSION = 1.9.3
PATH_SEPARATOR = :
PEAS_CFLAGS = -pthread -I/usr/include/libpeas-1.0 -I/usr/include/gobject-introspection-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include 
PEAS_GTK_CFLAGS = -pthread -I/usr/include/libpeas-1.0 -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib64/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/libpeas-1.0 -I/usr/include/gobject-introspection-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include 
PEAS_GTK_LIBS = -lpeas-gtk-1.0 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lpeas-1.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lgio-2.0 -lgirepository-1.0 -lgobject-2.0 -lglib-2.0 
PEAS_LIBS = -lpeas-1.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lgio-2.0 -lgirepository-1.0 -lgobject-2.0 -lglib-2.0 
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POFILES = 
PORTAUDIO_CFLAGS = 
PORTAUDIO_LIBS = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PULSEAUDIO_CFLAGS = 
PULSEAUDIO_LIBS = 
RANLIB = ranlib
ROGER_VERSION_MAJOR = 1
ROGER_VERSION_MICRO = 3
ROGER_VERSION_MINOR = 9
SECRET_CFLAGS = -pthread -I/usr/include/libsecret-1 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include 
SECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SOUP_CFLAGS = -pthread -I/usr/local/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include 
SOUP_LIBS = -L/usr/local/lib64 -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
SPANDSP_CFLAGS = 
SPANDSP_LIBS = -lspandsp 
STRIP = strip
USE_NLS = yes
VERSION = 1.9.3
WINDRES = 
XGETTEXT = /usr/bin/xgettext
abs_builddir = /root/rogerj/wand/roger
abs_srcdir = /root/rogerj/wand/roger
abs_top_builddir = /root/rogerj/wand
abs_top_srcdir = /root/rogerj/wand
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_prefix_program = /usr/bin/glib-compile-schemas
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
found_cc = yes
gsettingsschemadir = ${datarootdir}/glib-2.0/schemas
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/rogerj/wand/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = /usr/lib64
libexecdir = ${exec_prefix}/lib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = . plugins data images
AM_CFLAGS = -I$(top_srcdir)
sharedir = $(datadir)/roger
share_DATA = \
	images/address-book.svg \
	images/app.png \
	images/roger-call-blocked.svg \
	images/roger-call-blocked-symbolic.svg \
	images/roger-call-in.svg \
	images/roger-call-in-symbolic.svg \
	images/roger-call-missed.svg \
	images/roger-call-missed-symbolic.svg \
	images/roger-call-out.svg \
	images/roger-call-out-symbolic.svg \
	images/roger-call-voice.svg \
	images/roger-call-voice-symbolic.svg \
	images/roger-fax.svg \
	images/roger-fax-symbolic.svg \
	images/roger-fax-report.svg \
	images/roger-fax-report-symbolic.svg \
	images/roger-record.svg \
	images/roger-record-symbolic.svg

EXTRA_DIST = $(share_DATA) roger_winres.rc roger.gresource.xml assistant.glade authenticate.glade answeringmachine.glade contacts.glade settings.glade shortcuts.glade
DISTCLEANFILES = \
	roger_gresource.c \
	roger_gresource.h

roger_CFLAGS = $(EXTRA_CFLAGS) $(GTK_CFLAGS) $(GMODULE_CFLAGS) -Wall -O2 -g $(PEAS_GTK_CFLAGS) $(SNDFILE_CFLAGS) $(AM_CFLAGS) $(OS_CFLAGS) $(TIFF_CFLAGS) $(SOUP_CFLAGS)
roger_LDFLAGS = $(EXTRA_LIBS) $(GTK_LIBS) $(GMODULE_LIBS) \
	-export-dynamic \
	$(top_builddir)/libroutermanager/libroutermanager.la \
	$(PEAS_GTK_LIBS) $(SNDFILE_LIBS) $(SPANDSP_LIBS) $(OS_LIBS) \
	$(TIFF_LIBS) $(SOUP_LIBS) $(am__append_2)
GLIB_COMPILE_RESOURCES = $(shell $(PKG_CONFIG) --variable=glib_compile_resources gio-2.0)
roger_core_SOURCES = \
	about.c\
	about.h\
	answeringmachine.c\
	answeringmachine.h\
	application.c\
	application.h\
	assistant.c\
	assistant.h\
	contacts.c\
	contacts.h\
	crash.c\
	crash.h\
	fax.c\
	fax.h\
	icons.c\
	icons.h\
	journal.c\
	journal.h\
	main.h\
	main_ui.c \
	phone.c\
	phone.h\
	print.c \
	print.h \
	settings.c \
	settings.h \
	shortcuts.c \
	shortcuts.h \
	uitools.c \
	uitools.h \
	roger_gresource.c \
	roger_gresource.h

roger_SOURCES = $(roger_core_SOURCES) $(am__append_1)
#BUILT_SOURCES = roger_winres.res
#roger_coredir = $(bindir)
#roger_coredir = $(bindir)
#roger_core_LTLIBRARIES = libroger_core.la
#roger_core_LTLIBRARIES = libroger_core.la
#libroger_core_la_SOURCES = $(roger_core_SOURCES)
#libroger_core_la_SOURCES = $(roger_core_SOURCES)
#libroger_core_la_CFLAGS = $(roger_CFLAGS)
#libroger_core_la_CFLAGS = $(roger_CFLAGS)
#libroger_core_la_LDFLAGS = $(roger_LDFLAGS) -shared -no-undefined -avoid-version
#libroger_core_la_LDFLAGS = $(roger_LDFLAGS) -shared -Wl,--output-def,roger_core.def,--out-implib,roger_core.dll.a -o roger_core.dll -no-undefined -avoid-version
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign roger/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign roger/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
roger_winres.rc: $(top_builddir)/config.status $(srcdir)/roger_winres.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-roger_coreLTLIBRARIES: $(roger_core_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(roger_core_LTLIBRARIES)'; test -n "$(roger_coredir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(roger_coredir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(roger_coredir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(roger_coredir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(roger_coredir)"; \
	}

uninstall-roger_coreLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(roger_core_LTLIBRARIES)'; test -n "$(roger_coredir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(roger_coredir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(roger_coredir)/$$f"; \
	done

clean-roger_coreLTLIBRARIES:
	-test -z "$(roger_core_LTLIBRARIES)" || rm -f $(roger_core_LTLIBRARIES)
	@list='$(roger_core_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libroger_core.la: $(libroger_core_la_OBJECTS) $(libroger_core_la_DEPENDENCIES) $(EXTRA_libroger_core_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libroger_core_la_LINK) $(am_libroger_core_la_rpath) $(libroger_core_la_OBJECTS) $(libroger_core_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

roger$(EXEEXT): $(roger_OBJECTS) $(roger_DEPENDENCIES) $(EXTRA_roger_DEPENDENCIES) 
	@rm -f roger$(EXEEXT)
	$(AM_V_CCLD)$(roger_LINK) $(roger_OBJECTS) $(roger_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libroger_core_la-about.Plo
include ./$(DEPDIR)/libroger_core_la-answeringmachine.Plo
include ./$(DEPDIR)/libroger_core_la-application.Plo
include ./$(DEPDIR)/libroger_core_la-assistant.Plo
include ./$(DEPDIR)/libroger_core_la-contacts.Plo
include ./$(DEPDIR)/libroger_core_la-crash.Plo
include ./$(DEPDIR)/libroger_core_la-fax.Plo
include ./$(DEPDIR)/libroger_core_la-icons.Plo
include ./$(DEPDIR)/libroger_core_la-journal.Plo
include ./$(DEPDIR)/libroger_core_la-main_ui.Plo
include ./$(DEPDIR)/libroger_core_la-phone.Plo
include ./$(DEPDIR)/libroger_core_la-print.Plo
include ./$(DEPDIR)/libroger_core_la-roger_gresource.Plo
include ./$(DEPDIR)/libroger_core_la-settings.Plo
include ./$(DEPDIR)/libroger_core_la-shortcuts.Plo
include ./$(DEPDIR)/libroger_core_la-uitools.Plo
include ./$(DEPDIR)/roger-about.Po
include ./$(DEPDIR)/roger-answeringmachine.Po
include ./$(DEPDIR)/roger-application.Po
include ./$(DEPDIR)/roger-assistant.Po
include ./$(DEPDIR)/roger-contacts.Po
include ./$(DEPDIR)/roger-crash.Po
include ./$(DEPDIR)/roger-fax.Po
include ./$(DEPDIR)/roger-icons.Po
include ./$(DEPDIR)/roger-journal.Po
include ./$(DEPDIR)/roger-main_ui.Po
include ./$(DEPDIR)/roger-phone.Po
include ./$(DEPDIR)/roger-print.Po
include ./$(DEPDIR)/roger-roger_gresource.Po
include ./$(DEPDIR)/roger-settings.Po
include ./$(DEPDIR)/roger-shortcuts.Po
include ./$(DEPDIR)/roger-uitools.Po
include ./$(DEPDIR)/roger-winmain.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libroger_core_la-about.lo: about.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-about.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-about.Tpo -c -o libroger_core_la-about.lo `test -f 'about.c' || echo '$(srcdir)/'`about.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-about.Tpo $(DEPDIR)/libroger_core_la-about.Plo
#	$(AM_V_CC)source='about.c' object='libroger_core_la-about.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-about.lo `test -f 'about.c' || echo '$(srcdir)/'`about.c

libroger_core_la-answeringmachine.lo: answeringmachine.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-answeringmachine.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-answeringmachine.Tpo -c -o libroger_core_la-answeringmachine.lo `test -f 'answeringmachine.c' || echo '$(srcdir)/'`answeringmachine.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-answeringmachine.Tpo $(DEPDIR)/libroger_core_la-answeringmachine.Plo
#	$(AM_V_CC)source='answeringmachine.c' object='libroger_core_la-answeringmachine.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-answeringmachine.lo `test -f 'answeringmachine.c' || echo '$(srcdir)/'`answeringmachine.c

libroger_core_la-application.lo: application.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-application.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-application.Tpo -c -o libroger_core_la-application.lo `test -f 'application.c' || echo '$(srcdir)/'`application.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-application.Tpo $(DEPDIR)/libroger_core_la-application.Plo
#	$(AM_V_CC)source='application.c' object='libroger_core_la-application.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-application.lo `test -f 'application.c' || echo '$(srcdir)/'`application.c

libroger_core_la-assistant.lo: assistant.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-assistant.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-assistant.Tpo -c -o libroger_core_la-assistant.lo `test -f 'assistant.c' || echo '$(srcdir)/'`assistant.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-assistant.Tpo $(DEPDIR)/libroger_core_la-assistant.Plo
#	$(AM_V_CC)source='assistant.c' object='libroger_core_la-assistant.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-assistant.lo `test -f 'assistant.c' || echo '$(srcdir)/'`assistant.c

libroger_core_la-contacts.lo: contacts.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-contacts.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-contacts.Tpo -c -o libroger_core_la-contacts.lo `test -f 'contacts.c' || echo '$(srcdir)/'`contacts.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-contacts.Tpo $(DEPDIR)/libroger_core_la-contacts.Plo
#	$(AM_V_CC)source='contacts.c' object='libroger_core_la-contacts.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-contacts.lo `test -f 'contacts.c' || echo '$(srcdir)/'`contacts.c

libroger_core_la-crash.lo: crash.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-crash.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-crash.Tpo -c -o libroger_core_la-crash.lo `test -f 'crash.c' || echo '$(srcdir)/'`crash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-crash.Tpo $(DEPDIR)/libroger_core_la-crash.Plo
#	$(AM_V_CC)source='crash.c' object='libroger_core_la-crash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-crash.lo `test -f 'crash.c' || echo '$(srcdir)/'`crash.c

libroger_core_la-fax.lo: fax.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-fax.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-fax.Tpo -c -o libroger_core_la-fax.lo `test -f 'fax.c' || echo '$(srcdir)/'`fax.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-fax.Tpo $(DEPDIR)/libroger_core_la-fax.Plo
#	$(AM_V_CC)source='fax.c' object='libroger_core_la-fax.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-fax.lo `test -f 'fax.c' || echo '$(srcdir)/'`fax.c

libroger_core_la-icons.lo: icons.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-icons.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-icons.Tpo -c -o libroger_core_la-icons.lo `test -f 'icons.c' || echo '$(srcdir)/'`icons.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-icons.Tpo $(DEPDIR)/libroger_core_la-icons.Plo
#	$(AM_V_CC)source='icons.c' object='libroger_core_la-icons.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-icons.lo `test -f 'icons.c' || echo '$(srcdir)/'`icons.c

libroger_core_la-journal.lo: journal.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-journal.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-journal.Tpo -c -o libroger_core_la-journal.lo `test -f 'journal.c' || echo '$(srcdir)/'`journal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-journal.Tpo $(DEPDIR)/libroger_core_la-journal.Plo
#	$(AM_V_CC)source='journal.c' object='libroger_core_la-journal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-journal.lo `test -f 'journal.c' || echo '$(srcdir)/'`journal.c

libroger_core_la-main_ui.lo: main_ui.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-main_ui.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-main_ui.Tpo -c -o libroger_core_la-main_ui.lo `test -f 'main_ui.c' || echo '$(srcdir)/'`main_ui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-main_ui.Tpo $(DEPDIR)/libroger_core_la-main_ui.Plo
#	$(AM_V_CC)source='main_ui.c' object='libroger_core_la-main_ui.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-main_ui.lo `test -f 'main_ui.c' || echo '$(srcdir)/'`main_ui.c

libroger_core_la-phone.lo: phone.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-phone.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-phone.Tpo -c -o libroger_core_la-phone.lo `test -f 'phone.c' || echo '$(srcdir)/'`phone.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-phone.Tpo $(DEPDIR)/libroger_core_la-phone.Plo
#	$(AM_V_CC)source='phone.c' object='libroger_core_la-phone.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-phone.lo `test -f 'phone.c' || echo '$(srcdir)/'`phone.c

libroger_core_la-print.lo: print.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-print.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-print.Tpo -c -o libroger_core_la-print.lo `test -f 'print.c' || echo '$(srcdir)/'`print.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-print.Tpo $(DEPDIR)/libroger_core_la-print.Plo
#	$(AM_V_CC)source='print.c' object='libroger_core_la-print.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-print.lo `test -f 'print.c' || echo '$(srcdir)/'`print.c

libroger_core_la-settings.lo: settings.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-settings.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-settings.Tpo -c -o libroger_core_la-settings.lo `test -f 'settings.c' || echo '$(srcdir)/'`settings.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-settings.Tpo $(DEPDIR)/libroger_core_la-settings.Plo
#	$(AM_V_CC)source='settings.c' object='libroger_core_la-settings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-settings.lo `test -f 'settings.c' || echo '$(srcdir)/'`settings.c

libroger_core_la-shortcuts.lo: shortcuts.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-shortcuts.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-shortcuts.Tpo -c -o libroger_core_la-shortcuts.lo `test -f 'shortcuts.c' || echo '$(srcdir)/'`shortcuts.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-shortcuts.Tpo $(DEPDIR)/libroger_core_la-shortcuts.Plo
#	$(AM_V_CC)source='shortcuts.c' object='libroger_core_la-shortcuts.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-shortcuts.lo `test -f 'shortcuts.c' || echo '$(srcdir)/'`shortcuts.c

libroger_core_la-uitools.lo: uitools.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-uitools.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-uitools.Tpo -c -o libroger_core_la-uitools.lo `test -f 'uitools.c' || echo '$(srcdir)/'`uitools.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-uitools.Tpo $(DEPDIR)/libroger_core_la-uitools.Plo
#	$(AM_V_CC)source='uitools.c' object='libroger_core_la-uitools.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-uitools.lo `test -f 'uitools.c' || echo '$(srcdir)/'`uitools.c

libroger_core_la-roger_gresource.lo: roger_gresource.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -MT libroger_core_la-roger_gresource.lo -MD -MP -MF $(DEPDIR)/libroger_core_la-roger_gresource.Tpo -c -o libroger_core_la-roger_gresource.lo `test -f 'roger_gresource.c' || echo '$(srcdir)/'`roger_gresource.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libroger_core_la-roger_gresource.Tpo $(DEPDIR)/libroger_core_la-roger_gresource.Plo
#	$(AM_V_CC)source='roger_gresource.c' object='libroger_core_la-roger_gresource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libroger_core_la_CFLAGS) $(CFLAGS) -c -o libroger_core_la-roger_gresource.lo `test -f 'roger_gresource.c' || echo '$(srcdir)/'`roger_gresource.c

roger-about.o: about.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-about.o -MD -MP -MF $(DEPDIR)/roger-about.Tpo -c -o roger-about.o `test -f 'about.c' || echo '$(srcdir)/'`about.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-about.Tpo $(DEPDIR)/roger-about.Po
#	$(AM_V_CC)source='about.c' object='roger-about.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-about.o `test -f 'about.c' || echo '$(srcdir)/'`about.c

roger-about.obj: about.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-about.obj -MD -MP -MF $(DEPDIR)/roger-about.Tpo -c -o roger-about.obj `if test -f 'about.c'; then $(CYGPATH_W) 'about.c'; else $(CYGPATH_W) '$(srcdir)/about.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-about.Tpo $(DEPDIR)/roger-about.Po
#	$(AM_V_CC)source='about.c' object='roger-about.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-about.obj `if test -f 'about.c'; then $(CYGPATH_W) 'about.c'; else $(CYGPATH_W) '$(srcdir)/about.c'; fi`

roger-answeringmachine.o: answeringmachine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-answeringmachine.o -MD -MP -MF $(DEPDIR)/roger-answeringmachine.Tpo -c -o roger-answeringmachine.o `test -f 'answeringmachine.c' || echo '$(srcdir)/'`answeringmachine.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-answeringmachine.Tpo $(DEPDIR)/roger-answeringmachine.Po
#	$(AM_V_CC)source='answeringmachine.c' object='roger-answeringmachine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-answeringmachine.o `test -f 'answeringmachine.c' || echo '$(srcdir)/'`answeringmachine.c

roger-answeringmachine.obj: answeringmachine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-answeringmachine.obj -MD -MP -MF $(DEPDIR)/roger-answeringmachine.Tpo -c -o roger-answeringmachine.obj `if test -f 'answeringmachine.c'; then $(CYGPATH_W) 'answeringmachine.c'; else $(CYGPATH_W) '$(srcdir)/answeringmachine.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-answeringmachine.Tpo $(DEPDIR)/roger-answeringmachine.Po
#	$(AM_V_CC)source='answeringmachine.c' object='roger-answeringmachine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-answeringmachine.obj `if test -f 'answeringmachine.c'; then $(CYGPATH_W) 'answeringmachine.c'; else $(CYGPATH_W) '$(srcdir)/answeringmachine.c'; fi`

roger-application.o: application.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-application.o -MD -MP -MF $(DEPDIR)/roger-application.Tpo -c -o roger-application.o `test -f 'application.c' || echo '$(srcdir)/'`application.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-application.Tpo $(DEPDIR)/roger-application.Po
#	$(AM_V_CC)source='application.c' object='roger-application.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-application.o `test -f 'application.c' || echo '$(srcdir)/'`application.c

roger-application.obj: application.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-application.obj -MD -MP -MF $(DEPDIR)/roger-application.Tpo -c -o roger-application.obj `if test -f 'application.c'; then $(CYGPATH_W) 'application.c'; else $(CYGPATH_W) '$(srcdir)/application.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-application.Tpo $(DEPDIR)/roger-application.Po
#	$(AM_V_CC)source='application.c' object='roger-application.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-application.obj `if test -f 'application.c'; then $(CYGPATH_W) 'application.c'; else $(CYGPATH_W) '$(srcdir)/application.c'; fi`

roger-assistant.o: assistant.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-assistant.o -MD -MP -MF $(DEPDIR)/roger-assistant.Tpo -c -o roger-assistant.o `test -f 'assistant.c' || echo '$(srcdir)/'`assistant.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-assistant.Tpo $(DEPDIR)/roger-assistant.Po
#	$(AM_V_CC)source='assistant.c' object='roger-assistant.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-assistant.o `test -f 'assistant.c' || echo '$(srcdir)/'`assistant.c

roger-assistant.obj: assistant.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-assistant.obj -MD -MP -MF $(DEPDIR)/roger-assistant.Tpo -c -o roger-assistant.obj `if test -f 'assistant.c'; then $(CYGPATH_W) 'assistant.c'; else $(CYGPATH_W) '$(srcdir)/assistant.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-assistant.Tpo $(DEPDIR)/roger-assistant.Po
#	$(AM_V_CC)source='assistant.c' object='roger-assistant.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-assistant.obj `if test -f 'assistant.c'; then $(CYGPATH_W) 'assistant.c'; else $(CYGPATH_W) '$(srcdir)/assistant.c'; fi`

roger-contacts.o: contacts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-contacts.o -MD -MP -MF $(DEPDIR)/roger-contacts.Tpo -c -o roger-contacts.o `test -f 'contacts.c' || echo '$(srcdir)/'`contacts.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-contacts.Tpo $(DEPDIR)/roger-contacts.Po
#	$(AM_V_CC)source='contacts.c' object='roger-contacts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-contacts.o `test -f 'contacts.c' || echo '$(srcdir)/'`contacts.c

roger-contacts.obj: contacts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-contacts.obj -MD -MP -MF $(DEPDIR)/roger-contacts.Tpo -c -o roger-contacts.obj `if test -f 'contacts.c'; then $(CYGPATH_W) 'contacts.c'; else $(CYGPATH_W) '$(srcdir)/contacts.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-contacts.Tpo $(DEPDIR)/roger-contacts.Po
#	$(AM_V_CC)source='contacts.c' object='roger-contacts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-contacts.obj `if test -f 'contacts.c'; then $(CYGPATH_W) 'contacts.c'; else $(CYGPATH_W) '$(srcdir)/contacts.c'; fi`

roger-crash.o: crash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-crash.o -MD -MP -MF $(DEPDIR)/roger-crash.Tpo -c -o roger-crash.o `test -f 'crash.c' || echo '$(srcdir)/'`crash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-crash.Tpo $(DEPDIR)/roger-crash.Po
#	$(AM_V_CC)source='crash.c' object='roger-crash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-crash.o `test -f 'crash.c' || echo '$(srcdir)/'`crash.c

roger-crash.obj: crash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-crash.obj -MD -MP -MF $(DEPDIR)/roger-crash.Tpo -c -o roger-crash.obj `if test -f 'crash.c'; then $(CYGPATH_W) 'crash.c'; else $(CYGPATH_W) '$(srcdir)/crash.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-crash.Tpo $(DEPDIR)/roger-crash.Po
#	$(AM_V_CC)source='crash.c' object='roger-crash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-crash.obj `if test -f 'crash.c'; then $(CYGPATH_W) 'crash.c'; else $(CYGPATH_W) '$(srcdir)/crash.c'; fi`

roger-fax.o: fax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-fax.o -MD -MP -MF $(DEPDIR)/roger-fax.Tpo -c -o roger-fax.o `test -f 'fax.c' || echo '$(srcdir)/'`fax.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-fax.Tpo $(DEPDIR)/roger-fax.Po
#	$(AM_V_CC)source='fax.c' object='roger-fax.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-fax.o `test -f 'fax.c' || echo '$(srcdir)/'`fax.c

roger-fax.obj: fax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-fax.obj -MD -MP -MF $(DEPDIR)/roger-fax.Tpo -c -o roger-fax.obj `if test -f 'fax.c'; then $(CYGPATH_W) 'fax.c'; else $(CYGPATH_W) '$(srcdir)/fax.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-fax.Tpo $(DEPDIR)/roger-fax.Po
#	$(AM_V_CC)source='fax.c' object='roger-fax.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-fax.obj `if test -f 'fax.c'; then $(CYGPATH_W) 'fax.c'; else $(CYGPATH_W) '$(srcdir)/fax.c'; fi`

roger-icons.o: icons.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-icons.o -MD -MP -MF $(DEPDIR)/roger-icons.Tpo -c -o roger-icons.o `test -f 'icons.c' || echo '$(srcdir)/'`icons.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-icons.Tpo $(DEPDIR)/roger-icons.Po
#	$(AM_V_CC)source='icons.c' object='roger-icons.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-icons.o `test -f 'icons.c' || echo '$(srcdir)/'`icons.c

roger-icons.obj: icons.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-icons.obj -MD -MP -MF $(DEPDIR)/roger-icons.Tpo -c -o roger-icons.obj `if test -f 'icons.c'; then $(CYGPATH_W) 'icons.c'; else $(CYGPATH_W) '$(srcdir)/icons.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-icons.Tpo $(DEPDIR)/roger-icons.Po
#	$(AM_V_CC)source='icons.c' object='roger-icons.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-icons.obj `if test -f 'icons.c'; then $(CYGPATH_W) 'icons.c'; else $(CYGPATH_W) '$(srcdir)/icons.c'; fi`

roger-journal.o: journal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-journal.o -MD -MP -MF $(DEPDIR)/roger-journal.Tpo -c -o roger-journal.o `test -f 'journal.c' || echo '$(srcdir)/'`journal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-journal.Tpo $(DEPDIR)/roger-journal.Po
#	$(AM_V_CC)source='journal.c' object='roger-journal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-journal.o `test -f 'journal.c' || echo '$(srcdir)/'`journal.c

roger-journal.obj: journal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-journal.obj -MD -MP -MF $(DEPDIR)/roger-journal.Tpo -c -o roger-journal.obj `if test -f 'journal.c'; then $(CYGPATH_W) 'journal.c'; else $(CYGPATH_W) '$(srcdir)/journal.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-journal.Tpo $(DEPDIR)/roger-journal.Po
#	$(AM_V_CC)source='journal.c' object='roger-journal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-journal.obj `if test -f 'journal.c'; then $(CYGPATH_W) 'journal.c'; else $(CYGPATH_W) '$(srcdir)/journal.c'; fi`

roger-main_ui.o: main_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-main_ui.o -MD -MP -MF $(DEPDIR)/roger-main_ui.Tpo -c -o roger-main_ui.o `test -f 'main_ui.c' || echo '$(srcdir)/'`main_ui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-main_ui.Tpo $(DEPDIR)/roger-main_ui.Po
#	$(AM_V_CC)source='main_ui.c' object='roger-main_ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-main_ui.o `test -f 'main_ui.c' || echo '$(srcdir)/'`main_ui.c

roger-main_ui.obj: main_ui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-main_ui.obj -MD -MP -MF $(DEPDIR)/roger-main_ui.Tpo -c -o roger-main_ui.obj `if test -f 'main_ui.c'; then $(CYGPATH_W) 'main_ui.c'; else $(CYGPATH_W) '$(srcdir)/main_ui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-main_ui.Tpo $(DEPDIR)/roger-main_ui.Po
#	$(AM_V_CC)source='main_ui.c' object='roger-main_ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-main_ui.obj `if test -f 'main_ui.c'; then $(CYGPATH_W) 'main_ui.c'; else $(CYGPATH_W) '$(srcdir)/main_ui.c'; fi`

roger-phone.o: phone.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-phone.o -MD -MP -MF $(DEPDIR)/roger-phone.Tpo -c -o roger-phone.o `test -f 'phone.c' || echo '$(srcdir)/'`phone.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-phone.Tpo $(DEPDIR)/roger-phone.Po
#	$(AM_V_CC)source='phone.c' object='roger-phone.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-phone.o `test -f 'phone.c' || echo '$(srcdir)/'`phone.c

roger-phone.obj: phone.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-phone.obj -MD -MP -MF $(DEPDIR)/roger-phone.Tpo -c -o roger-phone.obj `if test -f 'phone.c'; then $(CYGPATH_W) 'phone.c'; else $(CYGPATH_W) '$(srcdir)/phone.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-phone.Tpo $(DEPDIR)/roger-phone.Po
#	$(AM_V_CC)source='phone.c' object='roger-phone.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-phone.obj `if test -f 'phone.c'; then $(CYGPATH_W) 'phone.c'; else $(CYGPATH_W) '$(srcdir)/phone.c'; fi`

roger-print.o: print.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-print.o -MD -MP -MF $(DEPDIR)/roger-print.Tpo -c -o roger-print.o `test -f 'print.c' || echo '$(srcdir)/'`print.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-print.Tpo $(DEPDIR)/roger-print.Po
#	$(AM_V_CC)source='print.c' object='roger-print.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-print.o `test -f 'print.c' || echo '$(srcdir)/'`print.c

roger-print.obj: print.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-print.obj -MD -MP -MF $(DEPDIR)/roger-print.Tpo -c -o roger-print.obj `if test -f 'print.c'; then $(CYGPATH_W) 'print.c'; else $(CYGPATH_W) '$(srcdir)/print.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-print.Tpo $(DEPDIR)/roger-print.Po
#	$(AM_V_CC)source='print.c' object='roger-print.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-print.obj `if test -f 'print.c'; then $(CYGPATH_W) 'print.c'; else $(CYGPATH_W) '$(srcdir)/print.c'; fi`

roger-settings.o: settings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-settings.o -MD -MP -MF $(DEPDIR)/roger-settings.Tpo -c -o roger-settings.o `test -f 'settings.c' || echo '$(srcdir)/'`settings.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-settings.Tpo $(DEPDIR)/roger-settings.Po
#	$(AM_V_CC)source='settings.c' object='roger-settings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-settings.o `test -f 'settings.c' || echo '$(srcdir)/'`settings.c

roger-settings.obj: settings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-settings.obj -MD -MP -MF $(DEPDIR)/roger-settings.Tpo -c -o roger-settings.obj `if test -f 'settings.c'; then $(CYGPATH_W) 'settings.c'; else $(CYGPATH_W) '$(srcdir)/settings.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-settings.Tpo $(DEPDIR)/roger-settings.Po
#	$(AM_V_CC)source='settings.c' object='roger-settings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-settings.obj `if test -f 'settings.c'; then $(CYGPATH_W) 'settings.c'; else $(CYGPATH_W) '$(srcdir)/settings.c'; fi`

roger-shortcuts.o: shortcuts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-shortcuts.o -MD -MP -MF $(DEPDIR)/roger-shortcuts.Tpo -c -o roger-shortcuts.o `test -f 'shortcuts.c' || echo '$(srcdir)/'`shortcuts.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-shortcuts.Tpo $(DEPDIR)/roger-shortcuts.Po
#	$(AM_V_CC)source='shortcuts.c' object='roger-shortcuts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-shortcuts.o `test -f 'shortcuts.c' || echo '$(srcdir)/'`shortcuts.c

roger-shortcuts.obj: shortcuts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-shortcuts.obj -MD -MP -MF $(DEPDIR)/roger-shortcuts.Tpo -c -o roger-shortcuts.obj `if test -f 'shortcuts.c'; then $(CYGPATH_W) 'shortcuts.c'; else $(CYGPATH_W) '$(srcdir)/shortcuts.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-shortcuts.Tpo $(DEPDIR)/roger-shortcuts.Po
#	$(AM_V_CC)source='shortcuts.c' object='roger-shortcuts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-shortcuts.obj `if test -f 'shortcuts.c'; then $(CYGPATH_W) 'shortcuts.c'; else $(CYGPATH_W) '$(srcdir)/shortcuts.c'; fi`

roger-uitools.o: uitools.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-uitools.o -MD -MP -MF $(DEPDIR)/roger-uitools.Tpo -c -o roger-uitools.o `test -f 'uitools.c' || echo '$(srcdir)/'`uitools.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-uitools.Tpo $(DEPDIR)/roger-uitools.Po
#	$(AM_V_CC)source='uitools.c' object='roger-uitools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-uitools.o `test -f 'uitools.c' || echo '$(srcdir)/'`uitools.c

roger-uitools.obj: uitools.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-uitools.obj -MD -MP -MF $(DEPDIR)/roger-uitools.Tpo -c -o roger-uitools.obj `if test -f 'uitools.c'; then $(CYGPATH_W) 'uitools.c'; else $(CYGPATH_W) '$(srcdir)/uitools.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-uitools.Tpo $(DEPDIR)/roger-uitools.Po
#	$(AM_V_CC)source='uitools.c' object='roger-uitools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-uitools.obj `if test -f 'uitools.c'; then $(CYGPATH_W) 'uitools.c'; else $(CYGPATH_W) '$(srcdir)/uitools.c'; fi`

roger-roger_gresource.o: roger_gresource.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-roger_gresource.o -MD -MP -MF $(DEPDIR)/roger-roger_gresource.Tpo -c -o roger-roger_gresource.o `test -f 'roger_gresource.c' || echo '$(srcdir)/'`roger_gresource.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-roger_gresource.Tpo $(DEPDIR)/roger-roger_gresource.Po
#	$(AM_V_CC)source='roger_gresource.c' object='roger-roger_gresource.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-roger_gresource.o `test -f 'roger_gresource.c' || echo '$(srcdir)/'`roger_gresource.c

roger-roger_gresource.obj: roger_gresource.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-roger_gresource.obj -MD -MP -MF $(DEPDIR)/roger-roger_gresource.Tpo -c -o roger-roger_gresource.obj `if test -f 'roger_gresource.c'; then $(CYGPATH_W) 'roger_gresource.c'; else $(CYGPATH_W) '$(srcdir)/roger_gresource.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-roger_gresource.Tpo $(DEPDIR)/roger-roger_gresource.Po
#	$(AM_V_CC)source='roger_gresource.c' object='roger-roger_gresource.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-roger_gresource.obj `if test -f 'roger_gresource.c'; then $(CYGPATH_W) 'roger_gresource.c'; else $(CYGPATH_W) '$(srcdir)/roger_gresource.c'; fi`

roger-winmain.o: winmain.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-winmain.o -MD -MP -MF $(DEPDIR)/roger-winmain.Tpo -c -o roger-winmain.o `test -f 'winmain.c' || echo '$(srcdir)/'`winmain.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-winmain.Tpo $(DEPDIR)/roger-winmain.Po
#	$(AM_V_CC)source='winmain.c' object='roger-winmain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-winmain.o `test -f 'winmain.c' || echo '$(srcdir)/'`winmain.c

roger-winmain.obj: winmain.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -MT roger-winmain.obj -MD -MP -MF $(DEPDIR)/roger-winmain.Tpo -c -o roger-winmain.obj `if test -f 'winmain.c'; then $(CYGPATH_W) 'winmain.c'; else $(CYGPATH_W) '$(srcdir)/winmain.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/roger-winmain.Tpo $(DEPDIR)/roger-winmain.Po
#	$(AM_V_CC)source='winmain.c' object='roger-winmain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(roger_CFLAGS) $(CFLAGS) -c -o roger-winmain.obj `if test -f 'winmain.c'; then $(CYGPATH_W) 'winmain.c'; else $(CYGPATH_W) '$(srcdir)/winmain.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-shareDATA: $(share_DATA)
	@$(NORMAL_INSTALL)
	@list='$(share_DATA)'; test -n "$(sharedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sharedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sharedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(sharedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(sharedir)" || exit $$?; \
	done

uninstall-shareDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(share_DATA)'; test -n "$(sharedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(sharedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(roger_coredir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sharedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-roger_coreLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-roger_coreLTLIBRARIES install-shareDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-roger_coreLTLIBRARIES \
	uninstall-shareDATA

.MAKE: $(am__recursive_targets) all check install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-roger_coreLTLIBRARIES cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am \
	install-roger_coreLTLIBRARIES install-shareDATA install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-roger_coreLTLIBRARIES \
	uninstall-shareDATA


roger_gresource.c: roger_gresource.h roger.gresource.xml $(shell $(GLIB_COMPILE_RESOURCES) --sourcedir=. --generate-dependencies roger.gresource.xml)
	$(GLIB_COMPILE_RESOURCES) roger.gresource.xml --target=$@ --sourcedir=. --generate-source

roger_gresource.h: roger.gresource.xml $(shell $(GLIB_COMPILE_RESOURCES) --sourcedir=. --generate-dependencies roger.gresource.xml)
	$(GLIB_COMPILE_RESOURCES) roger.gresource.xml --target=$@ --sourcedir=. --generate-header

#roger_winres.res: roger_winres.rc
#	$(WINDRES) -i $< -o $@ -O coff

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
